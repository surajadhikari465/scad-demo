SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'dbo.GetPriceBatchDetailDetailReport') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure dbo.GetPriceBatchDetailDetailReport
GO


CREATE PROCEDURE [dbo].[GetPriceBatchDetailDetailReport]
    @StoreList varchar(8000),
    @StoreListSeparator char(1),
    @SubTeam_No int,
    @StartDate smalldatetime,
    @EndDate smalldatetime,
    @ItemChgTypeID tinyint,
    @PriceChgTypeID tinyint
AS

BEGIN
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
    SET NOCOUNT ON

    DECLARE @Store TABLE (Store_No int)
    DECLARE @UseStoreJurisdictions int

    IF @StoreList IS NOT NULL
        INSERT INTO @Store
        SELECT Key_Value
        FROM dbo.fn_Parse_List(@StoreList, @StoreListSeparator) S
    ELSE
        INSERT INTO @Store
        SELECT Store_No FROM Store (nolock)


	-- Check the Store Jurisdiction Flag
	SELECT @UseStoreJurisdictions = FlagValue FROM InstanceDataFlags WHERE FlagKey = 'UseStoreJurisdictions'


    SELECT Identifier, Item_Description, Store_Name, SubTeam.SubTeam_Name, StartDate, Sale_End_Date, ItemChgTypeDesc, PriceChgTypeDesc,
			IsPriceSuperseded, 
			AutoGenerated, 
			CONVERT(Bit, CASE WHEN 
				(@UseStoreJurisdictions = 0 OR dbo.fn_IsItemInStoreJurisdiction(Results.Item_Key, II.Identifier, Results.Store_No) = 1) 
				THEN 0
				ELSE 1 END) AS MissingJurisdictionData, Authorized
    FROM
       (
       	----------------------------------------------------------------------------------
		--CHG TYPE = PRICE
		SELECT PBD.Item_Key, PBD.Store_No, Item.SubTeam_No, StartDate, Sale_End_Date, 0 AS ItemChgTypeID, PriceChgTypeID,
               dbo.fn_PriceSuperseded(PBD.Item_Key, PBD.Store_No, PriceChgTypeID, StartDate, @StartDate) AS IsPriceSuperseded,
               AutoGenerated, (CASE WHEN dbo.StoreItem.Authorized = 'True' THEN 'Yes' WHEN dbo.StoreItem.Authorized = 'false' THEN 'No' END) 
               AS Authorized
        FROM PriceBatchDetail PBD (nolock)
        INNER JOIN
            @Store S
            ON S.Store_No = PBD.Store_No
        INNER JOIN
            Item (nolock)
            ON Item.Item_Key = PBD.Item_Key INNER JOIN
               dbo.StoreItem ON S.Store_No = dbo.StoreItem.Store_No AND dbo.Item.Item_Key = dbo.StoreItem.Item_Key
        WHERE PriceBatchHeaderID IS NULL
            AND ItemChgTypeID IS NULL
			AND PriceChgTypeID = @PriceChgTypeID
			AND NOT EXISTS (SELECT *				--EXCLUDE NEW ITEMS; THIS SHOULD RETURN ONLY "PRICE" CHG TYPE RECORDS AVAILABLE
							FROM PriceBatchDetail D
							WHERE D.Item_Key = PBD.Item_Key AND D.Store_No = PBD.Store_No 
								AND PriceBatchHeaderID IS NULL
								AND ItemChgTypeID = 1
								AND PBD.Expired = 0)
			AND StartDate >= ISNULL(@StartDate, StartDate)
			AND StartDate <= ISNULL(@EndDate, Sale_End_Date)
			AND Item.SubTeam_No = ISNULL(@SubTeam_No, Item.SubTeam_No)
			AND PBD.Expired = 0 --EXCLUDE EXPIRED BATCH DATA
                
        UNION
        ----------------------------------------------------------------------------------
		--ITEM CHG TYPE = ITEM
        SELECT PBD.Item_Key, PBD.Store_No, Item.SubTeam_No, StartDate, PBD.Sale_End_Date, 
			   ItemChgTypeID, Price.PriceChgTypeID,
               dbo.fn_PriceSuperseded(PBD.Item_Key, PBD.Store_No, Price.PriceChgTypeID, StartDate, @StartDate) AS IsPriceSuperseded,
               AutoGenerated, (CASE WHEN dbo.StoreItem.Authorized = 'True' THEN 'Yes' WHEN dbo.StoreItem.Authorized = 'false' THEN 'No' END) 
               AS Authorized
        FROM PriceBatchDetail PBD (nolock)
        INNER JOIN
            @Store S
            ON S.Store_No = PBD.Store_No
        INNER JOIN
            Item (nolock)
            ON Item.Item_Key = PBD.Item_Key
        INNER JOIN
            Price (nolock)
            ON Price.Item_Key = PBD.Item_Key AND Price.Store_No = PBD.Store_No INNER JOIN
               dbo.StoreItem ON S.Store_No = dbo.StoreItem.Store_No AND dbo.Item.Item_Key = dbo.StoreItem.Item_Key
        WHERE PriceBatchHeaderID IS NULL
            AND ItemChgTypeID = 2
            AND PBD.PriceChgTypeID IS NULL
            AND Item.SubTeam_No = ISNULL(@SubTeam_No, Item.SubTeam_No)
            AND PBD.Expired = 0 --EXCLUDE EXPIRED BATCH DATA
        
        UNION
        ----------------------------------------------------------------------------------
		--ITEM CHG TYPE = DELETE
        SELECT PBD.Item_Key, PBD.Store_No, Item.SubTeam_No, StartDate, Sale_End_Date, 
			   ItemChgTypeID, 0 As PriceChgTypeID,
               dbo.fn_PriceSuperseded(PBD.Item_Key, PBD.Store_No, PriceChgTypeID, StartDate, @StartDate) AS IsPriceSuperseded,
               AutoGenerated, (CASE WHEN dbo.StoreItem.Authorized = 'True' THEN 'Yes' WHEN dbo.StoreItem.Authorized = 'false' THEN 'No' END) 
               AS Authorized
        FROM PriceBatchDetail PBD (nolock)
        INNER JOIN
            Item (nolock)
            ON Item.Item_Key = PBD.Item_Key
        INNER JOIN
            @Store S
            ON S.Store_No = PBD.Store_No INNER JOIN
               dbo.StoreItem ON S.Store_No = dbo.StoreItem.Store_No AND dbo.Item.Item_Key = dbo.StoreItem.Item_Key
        WHERE PriceBatchHeaderID IS NULL
            AND ItemChgTypeID = 3
            AND Item.SubTeam_No = ISNULL(@SubTeam_No, Item.SubTeam_No)
            AND StartDate >= ISNULL(@StartDate, StartDate)
            AND StartDate <= ISNULL(@EndDate, Sale_End_Date)
            AND PBD.Expired = 0 --EXCLUDE EXPIRED BATCH DATA
        
        UNION
        ----------------------------------------------------------------------------------
		--ITEM CHG TYPE = NEW
        SELECT PBD.Item_Key, PBD.Store_No, Item.SubTeam_No, StartDate, Sale_End_Date, 
			   1 AS ItemChgTypeID, PriceChgTypeID,
               dbo.fn_PriceSuperseded(PBD.Item_Key, PBD.Store_No, PriceChgTypeID, StartDate, @StartDate) AS IsPriceSuperseded,
               AutoGenerated, (CASE WHEN dbo.StoreItem.Authorized = 'True' THEN 'Yes' WHEN dbo.StoreItem.Authorized = 'false' THEN 'No' END) 
               AS Authorized
        FROM PriceBatchDetail PBD (nolock)
        INNER JOIN
            Item (nolock)
            ON Item.Item_Key = PBD.Item_Key
        INNER JOIN
            @Store S
            ON S.Store_No = PBD.Store_No INNER JOIN
               dbo.StoreItem ON S.Store_No = dbo.StoreItem.Store_No AND dbo.Item.Item_Key = dbo.StoreItem.Item_Key
        WHERE PriceBatchHeaderID IS NULL
            AND PBD.ItemChgTypeID IS NULL --GRAB PRICE RECORDS
			AND EXISTS (SELECT *	--ENSURE THAT ANY PRICE HAS BEEN DEFINED FOR NEW ITEM
						FROM PriceBatchDetail D (nolock)
						WHERE D.PriceBatchHeaderID IS NULL
							AND D.Item_Key = PBD.Item_Key AND D.Store_No = PBD.Store_No
							AND D.ItemChgTypeID = 1)		--NEW ITEM CHG TYPE ONLY
			AND Item.SubTeam_No = ISNULL(@SubTeam_No, Item.SubTeam_No)			
			AND StartDate >= ISNULL(@StartDate, StartDate)
			AND StartDate <= ISNULL(@EndDate, Sale_End_Date)
			--EXCLUDE EXPIRED BATCH DATA
			AND PBD.Expired = 0
			
		-- ** HANDLE THESE??? **
		--	AND PBD.ItemChgTypeID = 4 --PROMO OFFER 
		--	AND PBD.ItemChgTypeID = 6 --OFF PROMO COST
			
		) Results 
    INNER JOIN
        Item (nolock)
        ON Item.Item_Key = Results.Item_Key
    INNER JOIN
        ItemIdentifier II (nolock)
        ON II.Item_Key = Item.Item_Key AND Default_Identifier = 1
    INNER JOIN
        Store (nolock)
        ON Store.Store_No = Results.Store_No
    INNER JOIN
        SubTeam (nolock)
        ON SubTeam.SubTeam_No = Results.SubTeam_No
    LEFT JOIN
        ItemChgType (nolock)
        ON ItemChgType.ItemChgTypeID = Results.ItemChgTypeID
    LEFT JOIN
        PriceChgType (nolock)
        ON PriceChgType.PriceChgTypeID = Results.PriceChgTypeID
    WHERE Results.ItemChgTypeID = @ItemChgTypeID
        AND @PriceChgTypeID = CASE Results.PriceChgTypeID WHEN 0 THEN @PriceChgTypeID
                                                    ELSE Results.PriceChgTypeID END


    SET NOCOUNT OFF
END

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO



