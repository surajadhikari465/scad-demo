<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplyBatchesPOS" xml:space="preserve">
    <value>Apply selected batches to the POS?</value>
  </data>
  <data name="AvgCostText" xml:space="preserve">
    <value>{0} / Unit</value>
    <comment>0 = Cost</comment>
  </data>
  <data name="BatchesWrongStatus" xml:space="preserve">
    <value>One or more batches were in the wrong status and could not be processed.</value>
  </data>
  <data name="BatchNoPrintRequired" xml:space="preserve">
    <value>This batch does not require shelf tag printing.</value>
  </data>
  <data name="BatchStatusNoPrint" xml:space="preserve">
    <value>Batch in this status cannot have tags printed.</value>
  </data>
  <data name="ChangesReport" xml:space="preserve">
    <value>Changes Report</value>
  </data>
  <data name="CurrentSale" xml:space="preserve">
    <value>Currently on sale</value>
  </data>
  <data name="DeleteBatches" xml:space="preserve">
    <value>Delete all selected batches and ALL PRICING DETAIL?</value>
  </data>
  <data name="DeletePriceChanges" xml:space="preserve">
    <value>Permanently DELETE all selected price changes?</value>
  </data>
  <data name="EarnedSaleLimitNotZero" xml:space="preserve">
    <value>Earned Discount Sale Limit must not be zero.</value>
  </data>
  <data name="EnterNumberBatches" xml:space="preserve">
    <value>Enter the number of batches per store.</value>
  </data>
  <data name="LineDrivePreUpdateTitle" xml:space="preserve">
    <value>Line Drive Pre-Update{0}{1} %</value>
    <comment>0 = carriage return, 1 = percent value</comment>
  </data>
  <data name="msg_POSBatchIdMax" xml:space="preserve">
    <value>POS Batch ID must be less than or equal to {0} for store {1}.</value>
    <comment>0 = max batch id; 1 = store number</comment>
  </data>
  <data name="msg_POSBatchIdMin" xml:space="preserve">
    <value>POS Batch ID must be greater than or equal to {0} for store {1}.</value>
    <comment>0 = min batch id; 1 = store number</comment>
  </data>
  <data name="MultipleGreater" xml:space="preserve">
    <value>Multiple must be greater than zero.</value>
  </data>
  <data name="NonLineDrivePriceConflict" xml:space="preserve">
    <value>There are non-Line Drive price change conflicts for one or more items.</value>
  </data>
  <data name="NumberBatchesGreater" xml:space="preserve">
    <value>Number of batches per store must be &gt; 0</value>
  </data>
  <data name="OverlappingPromoPrice" xml:space="preserve">
    <value>Overlapping pending promo price changes.</value>
  </data>
  <data name="OverlappingRegularPrice" xml:space="preserve">
    <value>Overlapping pending regular price changes.</value>
  </data>
  <data name="IsBatched" xml:space="preserve">
    <value>Another price change batch must be Processed before a new price change can be entered.</value>
  </data>
  <data name="IsBatchedSale" xml:space="preserve">
    <value>There is an unprocessed batch that must be completed first.</value>
  </data>
  <data name="IsBatchedReg" xml:space="preserve">
    <value>There is an unprocessed batch.</value>
  </data>
  <data name="PackageBatches" xml:space="preserve">
    <value>Package selected batches?</value>
  </data>
  <data name="PercentLessHundred" xml:space="preserve">
    <value>Percent must be less than 100.</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="PriceNotZero" xml:space="preserve">
    <value>Price must not be zero.</value>
  </data>
  <data name="Promo" xml:space="preserve">
    <value>Promo</value>
  </data>
  <data name="QuantityRegularPriceNotZero" xml:space="preserve">
    <value>Quantity at regular price must not be zero</value>
  </data>
  <data name="ReleaseBatches" xml:space="preserve">
    <value>Release selected batches to the stores?</value>
  </data>
  <data name="RemoveDetail" xml:space="preserve">
    <value>Remove detail from all selected batches and delete the batches?</value>
  </data>
  <data name="RemoveItemsFromBatch" xml:space="preserve">
    <value>Remove all selected items from the batch?</value>
  </data>
  <data name="SaveHeaderInfo" xml:space="preserve">
    <value>Save batch info changes before exiting?</value>
  </data>
  <data name="SelectIncluded" xml:space="preserve">
    <value>At least one type of included changes must be selected when excluding new items.</value>
  </data>
  <data name="TakeOffSale" xml:space="preserve">
    <value>Take off sale with this regular price info</value>
  </data>
  <data name="UpdatePrices" xml:space="preserve">
    <value>Update prices now using current parameters?</value>
  </data>
  <data name="PriceNotNull" xml:space="preserve">
    <value>Price must be greater than or equal to zero.</value>
  </data>
  <data name="UnknownPriceChgError" xml:space="preserve">
    <value>An unexpected error occurred during processing.  The price change has not been applied.{0}Please report this information to the help desk:{0}Validation Code = {1}{0}Error Description = {2}</value>
    <comment>0 = carriage return; 1 = validation code; 2 = error description</comment>
  </data>
  <data name="PriceBatchConflict" xml:space="preserve">
    <value>The selected batch(es) cannot be promoted because they contain item(s) in a pending Price batch. The selected batch(es) can be promoted after the Price batch is pushed.</value>
    <comment>Item change in batch conflicts with price change batch in sent status.</comment>
  </data>
  <data name="PricingBatchConflictsExceptionError" xml:space="preserve">
    <value>The change for this item cannot be batched due to an unexpected error while checking for pending batch conflicts.</value>
    <comment>Message displayed to user on exception during batch conflict detection</comment>
  </data>
  <data name="BatchesCannotBeDeleted" xml:space="preserve">
    <value>One or more batches have unprocessed Mammoth PriceRollback events and could not be processed.</value>
  </data>
  <data name="StartDateMaxValue" xml:space="preserve">
    <value>Sale Start Date cannot be after 6/5/2079}</value>
    <comment>smalldatetime max value</comment>
  </data>
  <data name="EndDateMaxValue" xml:space="preserve">
    <value>Sale End Date cannot be after 6/5/2079</value>
    <comment>smalldatetime max value</comment>
  </data>
  <data name="ApplyDateNotTooFarInFuture" xml:space="preserve">
    <value>Apply Date cannot be after 6/5/2079</value>
    <comment>smalldatetime max value</comment>
  </data>
</root>