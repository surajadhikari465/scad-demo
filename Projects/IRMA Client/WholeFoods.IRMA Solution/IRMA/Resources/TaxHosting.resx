<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label_header_ExternalTaxGroupCode" xml:space="preserve">
    <value>CCH Group Item Code</value>
    <comment>Group code for external tax management company CCH.</comment>
  </data>
  <data name="label_header_POSID" xml:space="preserve">
    <value>POS ID</value>
    <comment>TaxDefinition.POSID grid column header</comment>
  </data>
  <data name="label_header_storeNo" xml:space="preserve">
    <value>Store No</value>
    <comment>grid column header</comment>
  </data>
  <data name="label_header_taxClass" xml:space="preserve">
    <value>Tax Class</value>
    <comment>TaxClass.TaxClassDesc grid column header</comment>
  </data>
  <data name="label_header_taxFlagKey" xml:space="preserve">
    <value>Flag</value>
    <comment>TaxFlag.TaxFlagKey grid column header</comment>
  </data>
  <data name="label_header_taxFlagValue" xml:space="preserve">
    <value>Active?</value>
    <comment>TaxFlag.TaxFlagValue grid column header</comment>
  </data>
  <data name="label_header_taxJurisdiction" xml:space="preserve">
    <value>Jurisdiction</value>
    <comment>Jurisdiction.TaxJurisdictionDesc grid column header</comment>
  </data>
  <data name="label_header_taxPercent" xml:space="preserve">
    <value>Tax %</value>
    <comment>TaxDefinition.TaxPercent grid column header</comment>
  </data>
  <data name="label_titleBar_taxFlagValueAdd" xml:space="preserve">
    <value>Add Tax Flag</value>
    <comment>Add new TaxFlag title bar label</comment>
  </data>
  <data name="label_titleBar_taxFlagValueEdit" xml:space="preserve">
    <value>Edit Tax Flag</value>
    <comment>Edit existing TaxFlag title bar label</comment>
  </data>
  <data name="label_titleBar_taxOverrideAdd" xml:space="preserve">
    <value>Add Tax Override</value>
    <comment>Add new TaxOverride title bar label</comment>
  </data>
  <data name="label_titleBar_taxOverrideEdit" xml:space="preserve">
    <value>Edit Tax Override</value>
    <comment>Edit existing TaxOverride title bar label</comment>
  </data>
  <data name="msg_confirmDelete" xml:space="preserve">
    <value>You have selected tax flags to be deleted.  Are you sure you want to delete this tax flag data?</value>
    <comment>Confirm delete data pop up msg</comment>
  </data>
  <data name="msg_deleteJurisdiction_store" xml:space="preserve">
    <value>This Jurisdiction is associated to {0} store(s).  You can NOT delete this Jurisdiction.</value>
    <comment>Delete Jurisdiction prevent message; {0} = store count</comment>
  </data>
  <data name="msg_deleteJurisdiction_taxFlag" xml:space="preserve">
    <value>This Jurisdiction is associated to {0} tax flag(s).  These will be deleted as well.  Are you sure you want to continue with this delete?</value>
    <comment>Delete Jurisdiction confirm message; {0} = tax flag count</comment>
  </data>
  <data name="msg_deleteTaxClass_store" xml:space="preserve">
    <value>This Tax Classification is associated to {0} item(s).  You can NOT delete this Tax Classification.</value>
    <comment>Delete Tax Flag prevent message; {0} = item count</comment>
  </data>
  <data name="msg_deleteTaxClass_taxFlag" xml:space="preserve">
    <value>This Tax Class is associated to {0} tax flag(s).  These will be deleted as well.  Are you sure you want to continue with this delete?</value>
    <comment>Delete Tax Class confirm message; {0} = tax flag count</comment>
  </data>
  <data name="msg_deleteTaxFlag_TaxOverrideWarning" xml:space="preserve">
    <value>The {0} you have seleted to delete is overridden by {1} items.  If you continue, these overrides will be deleted.  Do you still wish to delete {0}: {2}</value>
    <comment>{0} = Tax Flag; {1} = Tax Override item count; {2} = Tax Flag Key being deleted</comment>
  </data>
  <data name="msg_duplicateItem" xml:space="preserve">
    <value>Warning: The value you have added/updated already exists.  Please add a new, unique item.</value>
    <comment>warning message when user adds TaxClass/TaxJurisdiction that already exists in the list</comment>
  </data>
  <data name="msg_error_posIDValueRange" xml:space="preserve">
    <value>{0} must be greater than 0</value>
    <comment>{0} = pos id terminology</comment>
  </data>
  <data name="msg_error_taxPercentValueRange" xml:space="preserve">
    <value>{0} must be between 0 and 100</value>
    <comment>defines range for tax percent values; {0} = percent terminology</comment>
  </data>
  <data name="msg_selectTaxClass" xml:space="preserve">
    <value>Please select a {0}</value>
    <comment>{0} = tax classification</comment>
  </data>
  <data name="msg_updateItemBlank" xml:space="preserve">
    <value>Please provide a valid value.  Update has been cancelled.</value>
    <comment>Message when update to tax flag/jurisdiction involves a null value (all chars are deleted)</comment>
  </data>
  <data name="msg_validation_duplicateTaxFlagKey" xml:space="preserve">
    <value>This {0} already exists.  Choose another value.</value>
    <comment>{0} = tax flag key</comment>
  </data>
  <data name="msg_warning_existingTaxFlag_Add" xml:space="preserve">
    <value>Warning: The {0} you are adding is also assigned to a different {1}.  If you wish to proceed, the {2} and {3} values you have entered will be replaced w/ the values from the existing {1} for this {4}.</value>
    <comment>{0} = tax flag; {1} = tax class; {2} = tax percent; {3} = POS ID; {4} = jurisdiction</comment>
  </data>
  <data name="msg_warning_existingTaxFlag_Edit" xml:space="preserve">
    <value>Warning: The {0} you are editing is also assigned to a different {1}.  If you wish to proceed, the {2} and {3} values you have entered will update all existing {0}s for this {4}</value>
    <comment>{0} = tax flag; {1} = tax class; {2} = tax percent; {3} = POS ID; {4} = jurisdiction</comment>
  </data>
  <data name="msg_warning_mustSetupTaxFlags" xml:space="preserve">
    <value>There are no available {0}s to override.  You must configure the {0} data for this item's {1} and this store's {2} before overriding {0} values.</value>
    <comment>{0} = tax flag; {1} = tax class; {2} = jurisdiction</comment>
  </data>
  <data name="msg_warning_taxOverridesWillBeDeleted" xml:space="preserve">
    <value>Warning: If you save the {0} changes to this item, the item's associated tax overrides will be deleted.  Do you wish to save changes to this {0}?</value>
    <comment>{0} = tax class</comment>
  </data>
  <data name="msg_warning_taxPercentDecimalPrecision" xml:space="preserve">
    <value>Warning: The {0} value contains more than 2 digits after the decimal point.  This value will be rounded to 2 places if you wish to proceed.  Do you want to save this rounded data?</value>
    <comment>{0} = tax percent</comment>
  </data>
  <data name="msg_warning_tooManyActiveFlags" xml:space="preserve">
    <value>Warning: Only one {0} can be active at a time.  If you proceed this will become the active {0}.  Do you wish to proceed?</value>
    <comment>Message for UK tax flags informing user only 1 can be active; {0} = tax flag term</comment>
  </data>
</root>