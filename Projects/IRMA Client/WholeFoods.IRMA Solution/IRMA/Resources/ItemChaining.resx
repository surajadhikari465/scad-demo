<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChainDeleted" xml:space="preserve">
    <value>'{0}' Chain was Deleted!</value>
    <comment>0: Chain Name</comment>
  </data>
  <data name="ChainDeletedTitle" xml:space="preserve">
    <value>Chain Deleted</value>
  </data>
  <data name="ChainNotDeleted" xml:space="preserve">
    <value>Could not delete the '{0}' chain!</value>
    <comment>0: Chain Name</comment>
  </data>
  <data name="ChainNotDeletedTitle" xml:space="preserve">
    <value>Chain Deleted Error</value>
  </data>
  <data name="ChainNotSaved" xml:space="preserve">
    <value>Could not save '{0}'! Try a different name.</value>
    <comment>0: Attempted Chain Name</comment>
  </data>
  <data name="ChainNotSavedTitle" xml:space="preserve">
    <value>Could not save</value>
  </data>
  <data name="ChainSaved" xml:space="preserve">
    <value>'{0}' Chain was Saved!</value>
    <comment>0: Chain Name</comment>
  </data>
  <data name="ChainSavedTitle" xml:space="preserve">
    <value>Chain Saved</value>
  </data>
  <data name="ClearSelectedItems" xml:space="preserve">
    <value>Clear Selected Items?{0}You will need to search these items again.</value>
    <comment>0: Newline</comment>
  </data>
  <data name="ClearSelectedItemsTitle" xml:space="preserve">
    <value>Clear Selected Items?</value>
  </data>
  <data name="ConfirmChainDelete" xml:space="preserve">
    <value>Are you sure that you want to Delete the '{0}' Chain?</value>
    <comment>0: Chain Name</comment>
  </data>
  <data name="ConfirmChainDeleteTitle" xml:space="preserve">
    <value>Delete Chain</value>
  </data>
  <data name="ConfirmChainingExit" xml:space="preserve">
    <value>Are you sure that you want to exit the Item Chaining Wizard?</value>
  </data>
  <data name="ConfirmChainingExitTitle" xml:space="preserve">
    <value>Exit Wizard</value>
  </data>
  <data name="ConfirmPriceChangeWizardExit" xml:space="preserve">
    <value>Are you sure that you want to exit the Price Change Wizard?</value>
  </data>
  <data name="ConfirmPriceChangeWizardExitTitle" xml:space="preserve">
    <value>Exit Wizard</value>
  </data>
  <data name="ExistingPromoWithSameStartDate" xml:space="preserve">
    <value>A pending promo price change already exists with the same start date and price change type.</value>
  </data>
  <data name="FoundItemsTitle" xml:space="preserve">
    <value>Found {0}s:</value>
    <comment>0: Item type name</comment>
  </data>
  <data name="ItemInChainWarning" xml:space="preserve">
    <value>FYI: This item is in the {0} chain</value>
    <comment>0: Chain Name</comment>
  </data>
  <data name="LimitSalePriceGreaterThanZero" xml:space="preserve">
    <value>Limit at sale price must be greater than zero.</value>
  </data>
  <data name="MSRPMultipleGreaterThanZero" xml:space="preserve">
    <value>MSRP Multiple must be greater than zero.</value>
  </data>
  <data name="MSRPPriceGreaterThanZero" xml:space="preserve">
    <value>MSRP price must be greater than zero.</value>
  </data>
  <data name="OngoingSale" xml:space="preserve">
    <value>Some items have a sale ongoing on the given start date.</value>
  </data>
  <data name="PendingPromoChanges" xml:space="preserve">
    <value>Some items have pending promo price changes on the given start date.</value>
  </data>
  <data name="PendingRegularPriceChanges" xml:space="preserve">
    <value>Some items have pending regular price changes with the same start date.</value>
  </data>
  <data name="PriceChangeError" xml:space="preserve">
    <value>Price Change Error</value>
  </data>
  <data name="PriceChangesSuccessful" xml:space="preserve">
    <value>Price changes successfully created!</value>
  </data>
  <data name="PriceChangeWizardTitle" xml:space="preserve">
    <value>Price Change Wizard</value>
  </data>
  <data name="PromoPriceChangeDate" xml:space="preserve">
    <value> on {0:D} until {1:D} </value>
    <comment>0: Start Date 1: End Date</comment>
  </data>
  <data name="PromoPriceChangeDescription" xml:space="preserve">
    <value>Will be promoted </value>
  </data>
  <data name="PromoPriceChangeMethodAbsolute" xml:space="preserve">
    <value>at {0} @ {1:c}</value>
    <comment>0: Quantity 1: Price</comment>
  </data>
  <data name="PromoPriceChangeMethodMSRP" xml:space="preserve">
    <value> and their MSRP to {0} @ {1:c}</value>
    <comment>0: Quantity 1: Price</comment>
  </data>
  <data name="PromoPriceChangeMethodPercentageMSRP" xml:space="preserve">
    <value>by {0:P} (From MSRP)</value>
    <comment>0: Percentage</comment>
  </data>
  <data name="PromoPriceChangeMethodPercentageRegular" xml:space="preserve">
    <value>by {0:P} (From Regular)</value>
    <comment>0: Percentage</comment>
  </data>
  <data name="PromoPriceChangeTitle" xml:space="preserve">
    <value>{0} Promo Price Change</value>
    <comment>0: Price change type abbreviation</comment>
  </data>
  <data name="RegularMultipleGreaterThanZero" xml:space="preserve">
    <value>Regular multiple must be greater than zero.</value>
  </data>
  <data name="RegularPriceChangeDate" xml:space="preserve">
    <value> on {0:D}</value>
    <comment>0: date of change</comment>
  </data>
  <data name="RegularPriceChangeDescription" xml:space="preserve">
    <value>Will change their price </value>
  </data>
  <data name="RegularPriceChangeMethodAbsolute" xml:space="preserve">
    <value>to {0} @ {1:c}</value>
    <comment>0: Quantity 1: Price</comment>
  </data>
  <data name="RegularPriceChangeMethodPercentage" xml:space="preserve">
    <value>by {0:P}</value>
    <comment>0: Percentage</comment>
  </data>
  <data name="RegularPriceGreaterThanZero" xml:space="preserve">
    <value>Regular price must be greater than zero.</value>
  </data>
  <data name="RegularPriceQuantityGreaterThanZero" xml:space="preserve">
    <value>Regular price quantity must be greater than zero.</value>
  </data>
  <data name="SaleConflictsWithRegPriceChange" xml:space="preserve">
    <value>A pending regular price change exists with a start date that falls within the sale date range.</value>
  </data>
  <data name="SaleConflictsWithSalePriceChange" xml:space="preserve">
    <value>A pending promo price change exists with an overlapping date range.</value>
  </data>
  <data name="SaleEndDateBeforeStartDate" xml:space="preserve">
    <value>Sale end date cannot preceed start date.</value>
  </data>
  <data name="SaleEndDateTooLarge" xml:space="preserve">
    <value>Sale end date past storage limit.</value>
  </data>
  <data name="SaleMultipleGreaterThanZero" xml:space="preserve">
    <value>Sale multiple must be greater than zero.</value>
  </data>
  <data name="SalePriceChangeTypeRequired" xml:space="preserve">
    <value>Sale price change type is required.</value>
  </data>
  <data name="SalePriceGreaterThanZero" xml:space="preserve">
    <value>Sale price must be greater than zero.</value>
  </data>
  <data name="SalePricingMethodRequired" xml:space="preserve">
    <value>Sale pricing method is required.</value>
  </data>
  <data name="SaleStartAndEndDatesRequired" xml:space="preserve">
    <value>Sale start and end dates are required.</value>
  </data>
  <data name="SaleStartDateInPast" xml:space="preserve">
    <value>Sale start date cannot be in the past.</value>
  </data>
  <data name="SaleWithPriceChangeInBatch" xml:space="preserve">
    <value>A promo price change already exists that has been assigned to a batch for this item-store that has not been processed.</value>
  </data>
  <data name="SelectChainToDelete" xml:space="preserve">
    <value>Select Chain to Delete</value>
  </data>
  <data name="SelectChainToEdit" xml:space="preserve">
    <value>Select Chain to Edit</value>
  </data>
  <data name="SelectClass" xml:space="preserve">
    <value>Select Class First</value>
  </data>
  <data name="SelectedItemsTitle" xml:space="preserve">
    <value>Selected {0}s:</value>
    <comment>0: Item type name</comment>
  </data>
  <data name="SelectLevel3" xml:space="preserve">
    <value>Select Level 3 First</value>
  </data>
  <data name="SelectSubTeam" xml:space="preserve">
    <value>Select Sub-Team First</value>
  </data>
  <data name="StartDateInPast" xml:space="preserve">
    <value>Start date cannot be in the past.</value>
  </data>
  <data name="UnknownValidationError" xml:space="preserve">
    <value>Unknown validation error:{0}{1} {2}</value>
    <comment>0: Newline 1: Validation status 2: Status description</comment>
  </data>
  <data name="UnprocessedPriceChanges" xml:space="preserve">
    <value>Some item-stores already have an unprocessed price change assigned to a batch.</value>
  </data>
</root>