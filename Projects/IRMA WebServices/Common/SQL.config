<?xml version="1.0"?>
<configuration>
	<appSettings>
		   
		<!--Weekly Sales Rollup-->
		<add key="SALES_WEEKLY_ROLLUP" value="dbo.WeeklyRollUp_SalesSumByItem"/>

		<!--WIMP Extract SQL-->
		<add key="WIMP_COST" value="dbo.GetWIMPExtract_COSTDATA"/>
		<add key="WIMP_ITEM" value="dbo.GetWIMPExtract_ITEMDATA"/>
		<add key="WIMP_PLANO" value="dbo.GetWIMPExtract_PLANOSTATUS"/>
		<add key="VIM_STORESET" value="dbo.VIMStoreFile" />
		
		<!--VIM SUPPLEMENTAL FILE EXTRACTS-->
		<add key="VIM_SUPPLEMENT_COST" value="SELECT
				dbo.Price.Item_Key,
				RIGHT('0000000000000' + dbo.ItemIdentifier.Identifier,13) As Identifier,
				RTRIM(dbo.Store.Store_Name) As Store_Name,
				dbo.Store.BusinessUnit_ID,
				dbo.Price.Price,
				dbo.Price.Multiple,
				dbo.Price.Sale_Price, 
				dbo.Price.Sale_Multiple, 
				dbo.PriceChgType.PriceChgTypeDesc,
				dbo.Vendor.CompanyName,
				VCH.UnitCost,
				VCH.Package_Desc1 As VendorPack,
				(SELECT RTRIM(Unit_Name) FROM dbo.ItemUnit WHERE Unit_ID = VCH.CostUnit_ID) As CostUOM,
				dbo.fn_GetCurrentNetCost(dbo.Price.Item_Key,dbo.Price.Store_No) As NetCost,
				CONVERT(varchar, VCH.StartDate, 101) As CostStartDate,
				CONVERT(varchar, VCH.EndDate, 101) As CostEndDate,
				dbo.Vendor.PS_Vendor_ID,
				dbo.Vendor.PS_Location_Code,
				dbo.Vendor.PS_Address_Sequence,
				CONVERT(varchar, dbo.Price.Sale_Start_Date, 101) As Sale_Start_Date,
				CONVERT(varchar, dbo.Price.Sale_End_Date, 101) As Sale_End_Date,
				dbo.VendorDealHistory.CaseQty As DealCaseQty,
				dbo.VendorDealHistory.Package_Desc1 As DealItemPack,
				dbo.VendorDealHistory.CaseAmt As DealCaseAmt,
				CONVERT(varchar, dbo.VendorDealHistory.StartDate, 101) As DealStartDate,
				CONVERT(varchar, dbo.VendorDealHistory.EndDate, 101) As DealEndDate,
				dbo.VendorDealHistory.VendorDealTypeID,
				(SELECT [Description] + [CaseAmtType] FROM VendorDealType WHERE VendorDealTypeID = dbo.VendorDealHistory.VendorDealTypeID) As DealType,
				dbo.VendorDealHistory.FromVendor,
				dbo.VendorDealHistory.CostPromoCodeTypeID,
				(SELECT CostPromoDesc FROM CostPromoCodeType WHERE CostPromoCodeTypeID = dbo.VendorDealHistory.CostPromoCodeTypeID) As CostPromoType,
				dbo.Store.Zone_ID,
				(SELECT Zone_Name FROM Zone WHERE Zone_ID = dbo.Store.Zone_ID) As Zone_Name
			FROM	dbo.Price
				INNER JOIN dbo.ItemIdentifier (NOLOCK) ON dbo.ItemIdentifier.Item_Key = dbo.Price.Item_Key
				INNER JOIN dbo.PriceChgType (NOLOCK) ON dbo.Price.PriceChgTypeId = dbo.PriceChgType.PriceChgTypeID
				INNER JOIN dbo.Store (NOLOCK) ON dbo.Price.Store_No = dbo.Store.Store_No
				INNER JOIN dbo.StoreItemVendor (NOLOCK) ON dbo.Price.Item_Key = dbo.StoreItemVendor.Item_Key AND dbo.Price.Store_No = dbo.StoreItemVendor.Store_No
				INNER JOIN dbo.Vendor (NOLOCK) ON dbo.StoreItemVendor.Vendor_ID = dbo.Vendor.Vendor_ID
				CROSS APPLY dbo.fn_VendorCost(dbo.Price.Item_Key, dbo.Vendor.Vendor_ID, dbo.Price.Store_No, GetDate()) VCH
				LEFT JOIN dbo.VendorDealHistory (NOLOCK) ON dbo.StoreItemVendor.StoreItemVendorID = dbo.VendorDealHistory.StoreItemVendorID AND GetDate() BETWEEN dbo.VendorDealHistory.StartDate AND dbo.VendorDealHistory.EndDate
			WHERE dbo.StoreItemVendor.PrimaryVendor = 1"/>

		<add key="VIM_SUPPLEMENT_ITEM" value="SELECT DISTINCT
				dbo.Item.Item_Key,
				RIGHT('0000000000000' + dbo.ItemIdentifier.Identifier,13) As Identifier,
				CASE WHEN dbo.ItemIdentifier.National_Identifier = 0 THEN 'N' ELSE 'Y' END As National_Identifier,
				dbo.Item.SubTeam_No,
				(SELECT RTRIM(SubTeam_Name) FROM SubTeam WHERE SubTeam_No = dbo.Item.SubTeam_No) As SubTeamName,
				(SELECT Dept_No FROM SubTeam WHERE SubTeam_No = dbo.Item.SubTeam_No) As POSDept,
				(SELECT RTRIM(SubTeam_Name) FROM SubTeam WHERE SubTeam_No = dbo.Item.SubTeam_No) As POSDeptName,
				RTRIM(dbo.Item.Item_Description) As Item_Description,
				dbo.ItemBrand.Brand_Name,
				(SELECT RTRIM(Unit_Name) FROM dbo.ItemUnit WHERE Unit_ID = dbo.Item.Package_Unit_ID) As RetailPack_UOM,
				dbo.Item.Package_Desc2,
				dbo.Item.ClassID As IRMA_CLASS,	
				NIC.NatFamilyID AS NAT_FAM,
				NIF.NatFamilyName As NAT_FAM_NAME,
				NICL.NatCatID AS NAT_CAT,
				NIC.NatCatName AS NAT_CAT_NAME,
				NICL.ClassID AS NAT_CLASS,
				NICL.ClassName AS NAT_CLASS_NAME,
				RTRIM(dbo.Item.Product_Code) As PLANO_CODE,
				dbo.ProdHierarchyLevel4.ProdHierarchyLevel3_ID As MA_Level3,
				dbo.Item.ProdHierarchyLevel4_ID As MA_Level4,
				dbo.ItemAttribute.*,
				case 				
					when dbo.Item.Deleted_Item = 0 Then (REPLACE(dbo.Item.Deleted_Item, 0, 'N'))
					when dbo.Item.Deleted_Item = 1 Then (REPLACE(dbo.Item.Deleted_Item, 1,'Y'))
				end	as Deleted_Item,
			 	case 				
					when dbo.Item.Discontinue_Item = 0 Then (REPLACE(dbo.Item.Discontinue_Item, 0, 'N'))
					when dbo.Item.Discontinue_Item = 1 Then (REPLACE(dbo.Item.Discontinue_Item, 1,'Y'))
				end	as Discontinue_Item,
				case 				
					when dbo.Item.Not_Available = 0 Then (REPLACE(dbo.Item.Not_Available, 0, 'N'))
					when dbo.Item.Not_Available = 1 Then (REPLACE(dbo.Item.Not_Available, 1,'Y'))
				end	as Not_Available,
				case 				
					when dbo.Item.WFM_Item = 0 Then (REPLACE(dbo.Item.WFM_Item, 0, 'N'))
					when dbo.Item.WFM_Item = 1 Then (REPLACE(dbo.Item.WFM_Item, 1,'Y'))
				end	as WFM_Item,							
			 	case 				
					when dbo.Item.Remove_Item = 0 Then (REPLACE(dbo.Item.Remove_Item, 0, 'N'))
					when dbo.Item.Remove_Item = 1 Then (REPLACE(dbo.Item.Remove_Item, 1,'Y'))
				end	as Remove_Item,		
				case 				
					when dbo.Item.Recall_Flag = 0 Then (REPLACE(dbo.Item.Recall_Flag, 0, 'N'))
					when dbo.Item.Recall_Flag = 1 Then (REPLACE(dbo.Item.Recall_Flag, 1,'Y'))
				end	as Recall_Flag,
				CONVERT(varchar, dbo.Item.Insert_Date, 101) As InsertDate,
				dbo.Item.Package_Desc1,
				(SELECT Team_No FROM SubTeam WHERE SubTeam_No = dbo.Item.SubTeam_No) As TeamNo,
				(SELECT RTRIM(Team_Name) FROM Team WHERE Team_No = (SELECT Team_No FROM SubTeam WHERE SubTeam_No = dbo.Item.SubTeam_No)) As TeamName
			FROM	dbo.Item
				INNER JOIN dbo.ItemIdentifier (NOLOCK) ON dbo.Item.Item_Key = dbo.ItemIdentifier.Item_Key 
				INNER JOIN dbo.ItemBrand (NOLOCK) ON dbo.ItemBrand.Brand_ID = dbo.Item.Brand_ID 
				INNER JOIN NatItemClass NICL (NOLOCK) ON NICL.ClassID = Item.ClassID
				INNER JOIN NatItemCat NIC (NOLOCK) ON NIC.NatCatID = NICL.NatCatID
				INNER JOIN NatItemFamily NIF (NOLOCK) ON NIC.NatFamilyID = NIF.NatFamilyID
				INNER JOIN dbo.ItemAttribute (NOLOCK) ON dbo.ItemAttribute.Item_Key = dbo.Item.Item_Key
				LEFT JOIN dbo.ProdHierarchyLevel4 (NOLOCK) ON dbo.ProdHierarchyLevel4.ProdHierarchyLevel4_ID = dbo.Item.ProdHierarchyLevel4_ID
				WHERE Item.Item_Key > 0				
				ORDER BY Item.Item_Key"/>
		
	</appSettings>
</configuration>
