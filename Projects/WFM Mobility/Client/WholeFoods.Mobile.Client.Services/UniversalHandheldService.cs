//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5483
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IUniversalHandheldService
{
    
    string AuthenticateUser(string Username, string Password, bool EncryptedPassword, string RegionCode, string PluginName);
    
    Plugin[] GetRegionConfiguration(Region Region);
    
    Region[] GetRegions();
    
    ConfigurationKey[] GetConfigurationKeys();
    
    DeviceUpdate[] GetDeviceUpdates();
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="AuthenticateUser", Namespace="http://tempuri.org/")]
public partial class AuthenticateUserRequest
{
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=0)]
    public string Username;
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=1)]
    public string Password;
    
    [System.Xml.Serialization.XmlElementAttribute(Namespace="http://tempuri.org/", Order=2)]
    public bool EncryptedPassword;
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=3)]
    public string RegionCode;
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=4)]
    public string PluginName;
    
    public AuthenticateUserRequest()
    {
    }
    
    public AuthenticateUserRequest(string Username, string Password, bool EncryptedPassword, string RegionCode, string PluginName)
    {
        this.Username = Username;
        this.Password = Password;
        this.EncryptedPassword = EncryptedPassword;
        this.RegionCode = RegionCode;
        this.PluginName = PluginName;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="AuthenticateUserResponse", Namespace="http://tempuri.org/")]
public partial class AuthenticateUserResponse
{
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=0)]
    public string AuthenticateUserResult;
    
    public AuthenticateUserResponse()
    {
    }
    
    public AuthenticateUserResponse(string AuthenticateUserResult)
    {
        this.AuthenticateUserResult = AuthenticateUserResult;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("NetCFSvcUtil", "3.5.0.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/UniversalHandheldServiceLibrary")]
public enum Region
{
    
    /// <remarks/>
    FL,
    
    /// <remarks/>
    MA,
    
    /// <remarks/>
    MW,
    
    /// <remarks/>
    NA,
    
    /// <remarks/>
    NC,
    
    /// <remarks/>
    NE,
    
    /// <remarks/>
    PN,
    
    /// <remarks/>
    RM,
    
    /// <remarks/>
    SO,
    
    /// <remarks/>
    SP,
    
    /// <remarks/>
    SW,
    
    /// <remarks/>
    EU,

    /// <remarks/>
    TS,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("NetCFSvcUtil", "3.5.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/UniversalHandheldServiceLibrary")]
public partial class Plugin
{
    
    private string assemblyEntryPointField;
    
    private string assemblyFileField;
    
    private string assemblyNameField;
    
    private string assemblyVersionField;
    
    private bool authenticateUserField;
    
    private bool authenticateUserFieldSpecified;
    
    private string descriptionField;
    
    private string exePathField;
    
    private string exeVersionField;
    
    private bool hasServiceField;
    
    private bool hasServiceFieldSpecified;
    
    private bool isAuthorizedField;
    
    private bool isAuthorizedFieldSpecified;
    
    private string nameField;
    
    private string servicePathField;
    
    private string serviceVersionField;
    
    private string typeField;
    
    private bool updateEnabledField;
    
    private bool updateEnabledFieldSpecified;
    
    private string updateFileField;
    
    private string updateURIField;
    
    private string updateVersionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
    public string AssemblyEntryPoint
    {
        get
        {
            return this.assemblyEntryPointField;
        }
        set
        {
            this.assemblyEntryPointField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
    public string AssemblyFile
    {
        get
        {
            return this.assemblyFileField;
        }
        set
        {
            this.assemblyFileField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
    public string AssemblyName
    {
        get
        {
            return this.assemblyNameField;
        }
        set
        {
            this.assemblyNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
    public string AssemblyVersion
    {
        get
        {
            return this.assemblyVersionField;
        }
        set
        {
            this.assemblyVersionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public bool AuthenticateUser
    {
        get
        {
            return this.authenticateUserField;
        }
        set
        {
            this.authenticateUserField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AuthenticateUserSpecified
    {
        get
        {
            return this.authenticateUserFieldSpecified;
        }
        set
        {
            this.authenticateUserFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
    public string Description
    {
        get
        {
            return this.descriptionField;
        }
        set
        {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
    public string ExePath
    {
        get
        {
            return this.exePathField;
        }
        set
        {
            this.exePathField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
    public string ExeVersion
    {
        get
        {
            return this.exeVersionField;
        }
        set
        {
            this.exeVersionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=8)]
    public bool HasService
    {
        get
        {
            return this.hasServiceField;
        }
        set
        {
            this.hasServiceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HasServiceSpecified
    {
        get
        {
            return this.hasServiceFieldSpecified;
        }
        set
        {
            this.hasServiceFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=9)]
    public bool IsAuthorized
    {
        get
        {
            return this.isAuthorizedField;
        }
        set
        {
            this.isAuthorizedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IsAuthorizedSpecified
    {
        get
        {
            return this.isAuthorizedFieldSpecified;
        }
        set
        {
            this.isAuthorizedFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=10)]
    public string Name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=11)]
    public string ServicePath
    {
        get
        {
            return this.servicePathField;
        }
        set
        {
            this.servicePathField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=12)]
    public string ServiceVersion
    {
        get
        {
            return this.serviceVersionField;
        }
        set
        {
            this.serviceVersionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=13)]
    public string Type
    {
        get
        {
            return this.typeField;
        }
        set
        {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=14)]
    public bool UpdateEnabled
    {
        get
        {
            return this.updateEnabledField;
        }
        set
        {
            this.updateEnabledField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool UpdateEnabledSpecified
    {
        get
        {
            return this.updateEnabledFieldSpecified;
        }
        set
        {
            this.updateEnabledFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=15)]
    public string UpdateFile
    {
        get
        {
            return this.updateFileField;
        }
        set
        {
            this.updateFileField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=16)]
    public string UpdateURI
    {
        get
        {
            return this.updateURIField;
        }
        set
        {
            this.updateURIField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=17)]
    public string UpdateVersion
    {
        get
        {
            return this.updateVersionField;
        }
        set
        {
            this.updateVersionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("NetCFSvcUtil", "3.5.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/UniversalHandheldServiceLibrary")]
public partial class DeviceUpdate
{
    
    private string updateDevicePathField;
    
    private bool updateEnabledField;
    
    private bool updateEnabledFieldSpecified;
    
    private string updateFileField;
    
    private string updateNameField;
    
    private string updateURIField;
    
    private string updateVersionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
    public string UpdateDevicePath
    {
        get
        {
            return this.updateDevicePathField;
        }
        set
        {
            this.updateDevicePathField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public bool UpdateEnabled
    {
        get
        {
            return this.updateEnabledField;
        }
        set
        {
            this.updateEnabledField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool UpdateEnabledSpecified
    {
        get
        {
            return this.updateEnabledFieldSpecified;
        }
        set
        {
            this.updateEnabledFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
    public string UpdateFile
    {
        get
        {
            return this.updateFileField;
        }
        set
        {
            this.updateFileField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
    public string UpdateName
    {
        get
        {
            return this.updateNameField;
        }
        set
        {
            this.updateNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
    public string UpdateURI
    {
        get
        {
            return this.updateURIField;
        }
        set
        {
            this.updateURIField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
    public string UpdateVersion
    {
        get
        {
            return this.updateVersionField;
        }
        set
        {
            this.updateVersionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("NetCFSvcUtil", "3.5.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/UniversalHandheldServiceLibrary")]
public partial class ConfigurationKey
{
    
    private string keyField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
    public string Key
    {
        get
        {
            return this.keyField;
        }
        set
        {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
    public string Value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetRegionConfiguration", Namespace="http://tempuri.org/")]
public partial class GetRegionConfigurationRequest
{
    
    [System.Xml.Serialization.XmlElementAttribute(Namespace="http://tempuri.org/", Order=0)]
    public Region Region;
    
    public GetRegionConfigurationRequest()
    {
    }
    
    public GetRegionConfigurationRequest(Region Region)
    {
        this.Region = Region;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetRegionConfigurationResponse", Namespace="http://tempuri.org/")]
public partial class GetRegionConfigurationResponse
{
    
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/UniversalHandheldServiceLibrary")]
    public Plugin[] GetRegionConfigurationResult;
    
    public GetRegionConfigurationResponse()
    {
    }
    
    public GetRegionConfigurationResponse(Plugin[] GetRegionConfigurationResult)
    {
        this.GetRegionConfigurationResult = GetRegionConfigurationResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetRegions", Namespace="http://tempuri.org/")]
public partial class GetRegionsRequest
{
    
    public GetRegionsRequest()
    {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetRegionsResponse", Namespace="http://tempuri.org/")]
public partial class GetRegionsResponse
{
    
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/UniversalHandheldServiceLibrary", IsNullable=false)]
    public Region[] GetRegionsResult;
    
    public GetRegionsResponse()
    {
    }
    
    public GetRegionsResponse(Region[] GetRegionsResult)
    {
        this.GetRegionsResult = GetRegionsResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetConfigurationKeys", Namespace="http://tempuri.org/")]
public partial class GetConfigurationKeysRequest
{
    
    public GetConfigurationKeysRequest()
    {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetConfigurationKeysResponse", Namespace="http://tempuri.org/")]
public partial class GetConfigurationKeysResponse
{
    
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/UniversalHandheldServiceLibrary")]
    public ConfigurationKey[] GetConfigurationKeysResult;
    
    public GetConfigurationKeysResponse()
    {
    }
    
    public GetConfigurationKeysResponse(ConfigurationKey[] GetConfigurationKeysResult)
    {
        this.GetConfigurationKeysResult = GetConfigurationKeysResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetDeviceUpdates", Namespace="http://tempuri.org/")]
public partial class GetDeviceUpdatesRequest
{
    
    public GetDeviceUpdatesRequest()
    {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.Xml.Serialization.XmlRootAttribute(ElementName="GetDeviceUpdatesResponse", Namespace="http://tempuri.org/")]
public partial class GetDeviceUpdatesResponse
{
    
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/UniversalHandheldServiceLibrary")]
    public DeviceUpdate[] GetDeviceUpdatesResult;
    
    public GetDeviceUpdatesResponse()
    {
    }
    
    public GetDeviceUpdatesResponse(DeviceUpdate[] GetDeviceUpdatesResult)
    {
        this.GetDeviceUpdatesResult = GetDeviceUpdatesResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class UniversalHandheldServiceClient : Microsoft.Tools.ServiceModel.CFClientBase<IUniversalHandheldService>, IUniversalHandheldService
{
    
    public static System.ServiceModel.EndpointAddress EndpointAddress = new System.ServiceModel.EndpointAddress("http://wfmmobilesvc-tst/UHS.svc/basic");
    
    public UniversalHandheldServiceClient() : 
            this(CreateDefaultBinding(), EndpointAddress)
    {
    }
    
    public UniversalHandheldServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
        addProtectionRequirements(binding);
    }
    
    private AuthenticateUserResponse AuthenticateUser(AuthenticateUserRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "http://tempuri.org/IUniversalHandheldService/AuthenticateUser";
        info.RequestIsWrapped = true;
        info.ReplyAction = "http://tempuri.org/IUniversalHandheldService/AuthenticateUserResponse";
        info.ResponseIsWrapped = true;
        AuthenticateUserResponse retVal = base.Invoke<AuthenticateUserRequest, AuthenticateUserResponse>(info, request);
        return retVal;
    }
    
    public string AuthenticateUser(string Username, string Password, bool EncryptedPassword, string RegionCode, string PluginName)
    {
        AuthenticateUserRequest request = new AuthenticateUserRequest(Username, Password, EncryptedPassword, RegionCode, PluginName);
        AuthenticateUserResponse response = this.AuthenticateUser(request);
        return response.AuthenticateUserResult;
    }
    
    private GetRegionConfigurationResponse GetRegionConfiguration(GetRegionConfigurationRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "http://tempuri.org/IUniversalHandheldService/GetRegionConfiguration";
        info.RequestIsWrapped = true;
        info.ReplyAction = "http://tempuri.org/IUniversalHandheldService/GetRegionConfigurationResponse";
        info.ResponseIsWrapped = true;
        GetRegionConfigurationResponse retVal = base.Invoke<GetRegionConfigurationRequest, GetRegionConfigurationResponse>(info, request);
        return retVal;
    }
    
    public Plugin[] GetRegionConfiguration(Region Region)
    {
        GetRegionConfigurationRequest request = new GetRegionConfigurationRequest(Region);
        GetRegionConfigurationResponse response = this.GetRegionConfiguration(request);
        return response.GetRegionConfigurationResult;
    }
    
    private GetRegionsResponse GetRegions(GetRegionsRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "http://tempuri.org/IUniversalHandheldService/GetRegions";
        info.RequestIsWrapped = true;
        info.ReplyAction = "http://tempuri.org/IUniversalHandheldService/GetRegionsResponse";
        info.ResponseIsWrapped = true;
        GetRegionsResponse retVal = base.Invoke<GetRegionsRequest, GetRegionsResponse>(info, request);
        return retVal;
    }
    
    public Region[] GetRegions()
    {
        GetRegionsRequest request = new GetRegionsRequest();
        GetRegionsResponse response = this.GetRegions(request);
        return response.GetRegionsResult;
    }
    
    private GetConfigurationKeysResponse GetConfigurationKeys(GetConfigurationKeysRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "http://tempuri.org/IUniversalHandheldService/GetConfigurationKeys";
        info.RequestIsWrapped = true;
        info.ReplyAction = "http://tempuri.org/IUniversalHandheldService/GetConfigurationKeysResponse";
        info.ResponseIsWrapped = true;
        GetConfigurationKeysResponse retVal = base.Invoke<GetConfigurationKeysRequest, GetConfigurationKeysResponse>(info, request);
        return retVal;
    }
    
    public ConfigurationKey[] GetConfigurationKeys()
    {
        GetConfigurationKeysRequest request = new GetConfigurationKeysRequest();
        GetConfigurationKeysResponse response = this.GetConfigurationKeys(request);
        return response.GetConfigurationKeysResult;
    }
    
    private GetDeviceUpdatesResponse GetDeviceUpdates(GetDeviceUpdatesRequest request)
    {
        CFInvokeInfo info = new CFInvokeInfo();
        info.Action = "http://tempuri.org/IUniversalHandheldService/GetDeviceUpdates";
        info.RequestIsWrapped = true;
        info.ReplyAction = "http://tempuri.org/IUniversalHandheldService/GetDeviceUpdatesResponse";
        info.ResponseIsWrapped = true;
        GetDeviceUpdatesResponse retVal = base.Invoke<GetDeviceUpdatesRequest, GetDeviceUpdatesResponse>(info, request);
        return retVal;
    }
    
    public DeviceUpdate[] GetDeviceUpdates()
    {
        GetDeviceUpdatesRequest request = new GetDeviceUpdatesRequest();
        GetDeviceUpdatesResponse response = this.GetDeviceUpdates(request);
        return response.GetDeviceUpdatesResult;
    }
    
    public static System.ServiceModel.Channels.Binding CreateDefaultBinding()
    {
        System.ServiceModel.Channels.CustomBinding binding = new System.ServiceModel.Channels.CustomBinding();
        binding.Elements.Add(new System.ServiceModel.Channels.TextMessageEncodingBindingElement(System.ServiceModel.Channels.MessageVersion.Soap11, System.Text.Encoding.UTF8));
        binding.Elements.Add(new System.ServiceModel.Channels.HttpTransportBindingElement());
        return binding;
    }
    
    private void addProtectionRequirements(System.ServiceModel.Channels.Binding binding)
    {
        if ((IsSecureMessageBinding(binding) == false))
        {
            return;
        }
        System.ServiceModel.Security.ChannelProtectionRequirements cpr = new System.ServiceModel.Security.ChannelProtectionRequirements();
        ApplyProtection("http://tempuri.org/IUniversalHandheldService/AuthenticateUser", cpr.IncomingSignatureParts, true);
        ApplyProtection("http://tempuri.org/IUniversalHandheldService/AuthenticateUser", cpr.IncomingEncryptionParts, true);
        ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetRegionConfiguration", cpr.IncomingSignatureParts, true);
        ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetRegionConfiguration", cpr.IncomingEncryptionParts, true);
        ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetRegions", cpr.IncomingSignatureParts, true);
        ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetRegions", cpr.IncomingEncryptionParts, true);
        ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetConfigurationKeys", cpr.IncomingSignatureParts, true);
        ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetConfigurationKeys", cpr.IncomingEncryptionParts, true);
        ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetDeviceUpdates", cpr.IncomingSignatureParts, true);
        ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetDeviceUpdates", cpr.IncomingEncryptionParts, true);
        if ((binding.MessageVersion.Addressing == System.ServiceModel.Channels.AddressingVersion.None))
        {
            ApplyProtection("*", cpr.OutgoingSignatureParts, true);
            ApplyProtection("*", cpr.OutgoingEncryptionParts, true);
        }
        else
        {
            ApplyProtection("http://tempuri.org/IUniversalHandheldService/AuthenticateUserResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("http://tempuri.org/IUniversalHandheldService/AuthenticateUserResponse", cpr.OutgoingEncryptionParts, true);
            ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetRegionConfigurationResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetRegionConfigurationResponse", cpr.OutgoingEncryptionParts, true);
            ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetRegionsResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetRegionsResponse", cpr.OutgoingEncryptionParts, true);
            ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetConfigurationKeysResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetConfigurationKeysResponse", cpr.OutgoingEncryptionParts, true);
            ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetDeviceUpdatesResponse", cpr.OutgoingSignatureParts, true);
            ApplyProtection("http://tempuri.org/IUniversalHandheldService/GetDeviceUpdatesResponse", cpr.OutgoingEncryptionParts, true);
        }
        this.Parameters.Add(cpr);
    }
}
