'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
'
Namespace IRMAWebServices
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="IRMA ServicesSoap", [Namespace]:="http://wholefoodsmarket.com/IRMA/")>  _
    Partial Public Class IRMAServices
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetVIMExtractsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetWIMPExtractOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInventoryFileExtractOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPOSPushLogsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateSalesSubByWeeklyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidateStringTextOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTlogErrorsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.WholeFoods.IRMAServices.My.MySettings.Default.WebServiceURL
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetVIMExtractsCompleted As GetVIMExtractsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetWIMPExtractCompleted As GetWIMPExtractCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInventoryFileExtractCompleted As GetInventoryFileExtractCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPOSPushLogsCompleted As GetPOSPushLogsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateSalesSubByWeeklyCompleted As UpdateSalesSubByWeeklyCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidateStringTextCompleted As ValidateStringTextCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTlogErrorsCompleted As GetTlogErrorsCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wholefoodsmarket.com/IRMA/GetVIMExtracts", RequestNamespace:="http://wholefoodsmarket.com/IRMA/", ResponseNamespace:="http://wholefoodsmarket.com/IRMA/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVIMExtracts(ByVal FTPParams As FTPBO) As ServiceResponse
            Dim results() As Object = Me.Invoke("GetVIMExtracts", New Object() {FTPParams})
            Return CType(results(0),ServiceResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVIMExtractsAsync(ByVal FTPParams As FTPBO)
            Me.GetVIMExtractsAsync(FTPParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVIMExtractsAsync(ByVal FTPParams As FTPBO, ByVal userState As Object)
            If (Me.GetVIMExtractsOperationCompleted Is Nothing) Then
                Me.GetVIMExtractsOperationCompleted = AddressOf Me.OnGetVIMExtractsOperationCompleted
            End If
            Me.InvokeAsync("GetVIMExtracts", New Object() {FTPParams}, Me.GetVIMExtractsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVIMExtractsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVIMExtractsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVIMExtractsCompleted(Me, New GetVIMExtractsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wholefoodsmarket.com/IRMA/GetWIMPExtract", RequestNamespace:="http://wholefoodsmarket.com/IRMA/", ResponseNamespace:="http://wholefoodsmarket.com/IRMA/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWIMPExtract(ByVal FTPParams As FTPBO, ByVal WIMPType As SupportedMethod) As ServiceResponse
            Dim results() As Object = Me.Invoke("GetWIMPExtract", New Object() {FTPParams, WIMPType})
            Return CType(results(0),ServiceResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWIMPExtractAsync(ByVal FTPParams As FTPBO, ByVal WIMPType As SupportedMethod)
            Me.GetWIMPExtractAsync(FTPParams, WIMPType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWIMPExtractAsync(ByVal FTPParams As FTPBO, ByVal WIMPType As SupportedMethod, ByVal userState As Object)
            If (Me.GetWIMPExtractOperationCompleted Is Nothing) Then
                Me.GetWIMPExtractOperationCompleted = AddressOf Me.OnGetWIMPExtractOperationCompleted
            End If
            Me.InvokeAsync("GetWIMPExtract", New Object() {FTPParams, WIMPType}, Me.GetWIMPExtractOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWIMPExtractOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWIMPExtractCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWIMPExtractCompleted(Me, New GetWIMPExtractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wholefoodsmarket.com/IRMA/GetInventoryFileExtract", RequestNamespace:="http://wholefoodsmarket.com/IRMA/", ResponseNamespace:="http://wholefoodsmarket.com/IRMA/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInventoryFileExtract(ByVal FTPParams As FTPBO) As ServiceResponse
            Dim results() As Object = Me.Invoke("GetInventoryFileExtract", New Object() {FTPParams})
            Return CType(results(0),ServiceResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInventoryFileExtractAsync(ByVal FTPParams As FTPBO)
            Me.GetInventoryFileExtractAsync(FTPParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInventoryFileExtractAsync(ByVal FTPParams As FTPBO, ByVal userState As Object)
            If (Me.GetInventoryFileExtractOperationCompleted Is Nothing) Then
                Me.GetInventoryFileExtractOperationCompleted = AddressOf Me.OnGetInventoryFileExtractOperationCompleted
            End If
            Me.InvokeAsync("GetInventoryFileExtract", New Object() {FTPParams}, Me.GetInventoryFileExtractOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInventoryFileExtractOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInventoryFileExtractCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInventoryFileExtractCompleted(Me, New GetInventoryFileExtractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wholefoodsmarket.com/IRMA/GetPOSPushLogs", RequestNamespace:="http://wholefoodsmarket.com/IRMA/", ResponseNamespace:="http://wholefoodsmarket.com/IRMA/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPOSPushLogs(ByVal Recipient As String) As ServiceResponse
            Dim results() As Object = Me.Invoke("GetPOSPushLogs", New Object() {Recipient})
            Return CType(results(0),ServiceResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPOSPushLogsAsync(ByVal Recipient As String)
            Me.GetPOSPushLogsAsync(Recipient, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPOSPushLogsAsync(ByVal Recipient As String, ByVal userState As Object)
            If (Me.GetPOSPushLogsOperationCompleted Is Nothing) Then
                Me.GetPOSPushLogsOperationCompleted = AddressOf Me.OnGetPOSPushLogsOperationCompleted
            End If
            Me.InvokeAsync("GetPOSPushLogs", New Object() {Recipient}, Me.GetPOSPushLogsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPOSPushLogsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPOSPushLogsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPOSPushLogsCompleted(Me, New GetPOSPushLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wholefoodsmarket.com/IRMA/UpdateSalesSubByWeekly", RequestNamespace:="http://wholefoodsmarket.com/IRMA/", ResponseNamespace:="http://wholefoodsmarket.com/IRMA/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateSalesSubByWeekly() As ServiceResponse
            Dim results() As Object = Me.Invoke("UpdateSalesSubByWeekly", New Object(-1) {})
            Return CType(results(0),ServiceResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateSalesSubByWeeklyAsync()
            Me.UpdateSalesSubByWeeklyAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSalesSubByWeeklyAsync(ByVal userState As Object)
            If (Me.UpdateSalesSubByWeeklyOperationCompleted Is Nothing) Then
                Me.UpdateSalesSubByWeeklyOperationCompleted = AddressOf Me.OnUpdateSalesSubByWeeklyOperationCompleted
            End If
            Me.InvokeAsync("UpdateSalesSubByWeekly", New Object(-1) {}, Me.UpdateSalesSubByWeeklyOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateSalesSubByWeeklyOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateSalesSubByWeeklyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateSalesSubByWeeklyCompleted(Me, New UpdateSalesSubByWeeklyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wholefoodsmarket.com/IRMA/ValidateStringText", RequestNamespace:="http://wholefoodsmarket.com/IRMA/", ResponseNamespace:="http://wholefoodsmarket.com/IRMA/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateStringText(ByVal strToValidate As String) As Boolean
            Dim results() As Object = Me.Invoke("ValidateStringText", New Object() {strToValidate})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidateStringTextAsync(ByVal strToValidate As String)
            Me.ValidateStringTextAsync(strToValidate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidateStringTextAsync(ByVal strToValidate As String, ByVal userState As Object)
            If (Me.ValidateStringTextOperationCompleted Is Nothing) Then
                Me.ValidateStringTextOperationCompleted = AddressOf Me.OnValidateStringTextOperationCompleted
            End If
            Me.InvokeAsync("ValidateStringText", New Object() {strToValidate}, Me.ValidateStringTextOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidateStringTextOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidateStringTextCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidateStringTextCompleted(Me, New ValidateStringTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wholefoodsmarket.com/IRMA/GetTlogErrors", RequestNamespace:="http://wholefoodsmarket.com/IRMA/", ResponseNamespace:="http://wholefoodsmarket.com/IRMA/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTlogErrors(ByVal strDate As String, ByVal Recipient As String) As ServiceResponse
            Dim results() As Object = Me.Invoke("GetTlogErrors", New Object() {strDate, Recipient})
            Return CType(results(0),ServiceResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTlogErrorsAsync(ByVal strDate As String, ByVal Recipient As String)
            Me.GetTlogErrorsAsync(strDate, Recipient, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTlogErrorsAsync(ByVal strDate As String, ByVal Recipient As String, ByVal userState As Object)
            If (Me.GetTlogErrorsOperationCompleted Is Nothing) Then
                Me.GetTlogErrorsOperationCompleted = AddressOf Me.OnGetTlogErrorsOperationCompleted
            End If
            Me.InvokeAsync("GetTlogErrors", New Object() {strDate, Recipient}, Me.GetTlogErrorsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTlogErrorsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTlogErrorsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTlogErrorsCompleted(Me, New GetTlogErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://wholefoodsmarket.com/IRMA/")>  _
    Partial Public Class FTPBO
        
        Private fTP_IPField As String
        
        Private fTP_DIRField As String
        
        Private fTP_UIDField As String
        
        Private fTP_PWDField As String
        
        Private fTP_SECUREField As Boolean
        
        Private fTP_DELIMField As String
        
        Private fTP_PORTField As Integer
        
        '''<remarks/>
        Public Property FTP_IP() As String
            Get
                Return Me.fTP_IPField
            End Get
            Set
                Me.fTP_IPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FTP_DIR() As String
            Get
                Return Me.fTP_DIRField
            End Get
            Set
                Me.fTP_DIRField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FTP_UID() As String
            Get
                Return Me.fTP_UIDField
            End Get
            Set
                Me.fTP_UIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FTP_PWD() As String
            Get
                Return Me.fTP_PWDField
            End Get
            Set
                Me.fTP_PWDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FTP_SECURE() As Boolean
            Get
                Return Me.fTP_SECUREField
            End Get
            Set
                Me.fTP_SECUREField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FTP_DELIM() As String
            Get
                Return Me.fTP_DELIMField
            End Get
            Set
                Me.fTP_DELIMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FTP_PORT() As Integer
            Get
                Return Me.fTP_PORTField
            End Get
            Set
                Me.fTP_PORTField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://wholefoodsmarket.com/IRMA/")>  _
    Public Enum ServiceResponse
        
        '''<remarks/>
        Success
        
        '''<remarks/>
        FTPError
        
        '''<remarks/>
        ADOError
        
        '''<remarks/>
        FileBuilderError
        
        '''<remarks/>
        MailError
        
        '''<remarks/>
        ShareAccessError
        
        '''<remarks/>
        ValidationError
        
        '''<remarks/>
        FileNotFound
        
        '''<remarks/>
        RecipientError
        
        '''<remarks/>
        NotSupported
        
        '''<remarks/>
        UnknownError
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://wholefoodsmarket.com/IRMA/")>  _
    Public Enum SupportedMethod
        
        '''<remarks/>
        COST_FILE
        
        '''<remarks/>
        ITEM_FILE
        
        '''<remarks/>
        PLANO_FILE
        
        '''<remarks/>
        INVENTORY_SERVICE_FILE
        
        '''<remarks/>
        AUTO_PUSH_LOGS
        
        '''<remarks/>
        WEEKLY_ROLLUP
        
        '''<remarks/>
        TLOG_ERROR_PULL
        
        '''<remarks/>
        VIM_SUPPLEMENT_EXTRACT
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetVIMExtractsCompletedEventHandler(ByVal sender As Object, ByVal e As GetVIMExtractsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVIMExtractsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ServiceResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ServiceResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetWIMPExtractCompletedEventHandler(ByVal sender As Object, ByVal e As GetWIMPExtractCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWIMPExtractCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ServiceResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ServiceResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetInventoryFileExtractCompletedEventHandler(ByVal sender As Object, ByVal e As GetInventoryFileExtractCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInventoryFileExtractCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ServiceResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ServiceResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetPOSPushLogsCompletedEventHandler(ByVal sender As Object, ByVal e As GetPOSPushLogsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPOSPushLogsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ServiceResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ServiceResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateSalesSubByWeeklyCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateSalesSubByWeeklyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateSalesSubByWeeklyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ServiceResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ServiceResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ValidateStringTextCompletedEventHandler(ByVal sender As Object, ByVal e As ValidateStringTextCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidateStringTextCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetTlogErrorsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTlogErrorsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTlogErrorsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ServiceResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ServiceResponse)
            End Get
        End Property
    End Class
End Namespace
