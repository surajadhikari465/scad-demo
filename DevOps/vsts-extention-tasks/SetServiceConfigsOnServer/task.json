{
  "id": "97552DD2-0E3B-4960-B517-823E453F5180",
  "name": "SetServiceConfigsOnServer",
  "friendlyName": "Set Service Configs On Server",
  "description": "Sets Config Values for Services that change behavior based on the config (like ApiController). works with values found in the AppSettings part of a config file.",
  "helpMarkDown": "",
  "category": "Deploy",
  "visibility": [
    "Release",
    "Build"  
  ],
  "author": "WFM IRMA/ICON Team",
  "version": {
    "Major": 1,
    "Minor": 0,
    "Patch": 12
  },
  "demands": [
  ],
  "minimumAgentVersion": "1.96.2",
  "groups": [
  ],
  "inputs": [
    {
      "name": "machineList",
      "type": "multiLine",
      "label": "Machines",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Provide a comma separated list of the machine(s) IP addresses or FQDNs. <br>For example, dbserver.fabrikam.com, dbserver_int.fabrikam.com, 192.168.12.34"
    },
    {
      "name": "AdminUserName",
      "type": "string",
      "label": "Admin Login",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Provide the administrator's login of the target machines."
    },
    {
      "name": "AdminPassword",
      "type": "string",
      "label": "Password",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Provide the administrator's password of the target machines. <br>The best practice is to create a variable in the Build or Release definition, and mark it as 'Secret' to secure it, and then use it here, like '$(adminPassword)'."
    },
    {
      "name": "installPath",
      "type": "string",
      "label": "App Install Path",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The folder that the App/web.config and the transformations can be found"
    },
    {
      "name": "configName",
      "type": "string",
      "label": "App/Web Config Name",
      "defaultValue": "web.config",
      "required": true,
      "helpMarkDown": "Name of the Application config (or web.config if its a web project) to be replaced"
    },
    {
      "name": "replacementValues",
      "type": "multiLine",
      "label": "Replacement Values",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Place one Replacement Key and value on each line with a | between them (example: InstanceID|1 or ServiceDescription|This is a cool service)"
    }
  ],
  "instanceNameFormat": "Replace appSettings values in $(configName)",
  "execution": {
    "PowerShell": {
      "target": "$(currentDirectory)\\Main.ps1",
      "argumentFormat": "",
      "workingDirectory": "$(currentDirectory)"
    }
  }
}