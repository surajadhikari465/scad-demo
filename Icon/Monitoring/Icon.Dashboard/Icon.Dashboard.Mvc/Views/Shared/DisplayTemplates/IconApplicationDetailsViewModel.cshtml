@model Icon.Dashboard.Mvc.ViewModels.IconApplicationViewModel

<div class="row">
    <hr />

    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-xs-3" })
        <div class="col-xs-9">
            @Html.DisplayFor(model => model.Name)
        </div>
    </div>

    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.Server, htmlAttributes: new { @class = "control-label col-xs-3" })
        <div class="col-xs-9">
            @Html.DisplayFor(model => model.Server)
        </div>
    </div>

    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.TypeOfApplication, htmlAttributes: new { @class = "control-label col-xs-3" })
        <div class="col-xs-9">
            @Html.DisplayFor(model => model.TypeOfApplication)
        </div>
    </div>

    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-xs-3" })
        <div class="col-xs-9">
            @Html.DisplayFor(model => model.DisplayName)
        </div>
    </div>

    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.Environment, htmlAttributes: new { @class = "control-label col-xs-3" })
        <div class="col-xs-9">
            @Html.DisplayFor(model => model.Environment)
        </div>
    </div>

    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.ConfigFilePath, htmlAttributes: new { @class = "control-label col-xs-3" })
        <div class="col-xs-9">
            @Html.DisplayFor(model => model.ConfigFilePath)
        </div>
    </div>

    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.DataFlowFrom, htmlAttributes: new { @class = "control-label col-xs-3" })
        <div class="col-xs-9">
            @Html.DisplayFor(model => model.DataFlowFrom)
        </div>
    </div>

    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.DataFlowTo, htmlAttributes: new { @class = "control-label col-xs-3" })
        <div class="col-xs-9">
            @Html.DisplayFor(model => model.DataFlowTo)
        </div>
    </div>

    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.LoggingName, htmlAttributes: new { @class = "control-label col-xs-3" })
        <div class="col-xs-9">
            @Html.DisplayFor(model => model.LoggingName)
        </div>
    </div>

    @if (!String.IsNullOrWhiteSpace(Model.CurrentEsbEnvironment))
    {
    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.CurrentEsbEnvironment, htmlAttributes: new { @class = "control-label col-xs-3" })
        <div class="col-xs-9">
            @Html.DisplayFor(model => model.CurrentEsbEnvironment)
        </div>
    </div>
    }

@{
    if (Model.TypeOfApplication == Icon.Dashboard.DataFileAccess.Models.ApplicationTypeEnum.ScheduledTask)
    {
        Html.RenderAction("TaskPartial", "Home", new { application = Model.Name, server = Model.Server });
    }
}

    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-xs-2" })
        <div class="col-xs-5">
            @{string statusColor = Model.StatusIsGreen ? "btn-success" : "btn-danger"; }
            <button class="btn @statusColor btn-sm btn-block disabled" type="button">Currently @Model.Status</button>
        </div>
        <div class="col-xs-5">
            @{Html.RenderPartial("_CommandsPartial", Model);}
        </div>
    </div>

@{
    if (Model.TypeOfApplication == Icon.Dashboard.DataFileAccess.Models.ApplicationTypeEnum.WindowsService
        && Model.Name == "API Controller")
    {
        Html.RenderAction("TaskPartial", "Home", new { application = Model.Name, server = Model.Server });
    }
}

    <div class="col-xs-offset-1 col-xs-10">
        @Html.ActionLink("Edit " + Model.DisplayName, "Edit", "Home", new { application = Model.Name, server = Model.Server }, new { @class = "btn btn-primary btn-block margin-top-10" })
    </div>

    <div class="col-xs-offset-1 col-xs-10">
        @Html.ActionLink("Edit Configuration", "Configure", "Home", new { application = Model.Name, server = Model.Server }, new { @class = "btn btn-default btn-block margin-top-10" })
    </div>

</div>