@model Icon.Dashboard.Mvc.ViewModels.IconApplicationViewModel

@if (Model != null)
{
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string rowColorClass = Model.StatusIsGreen ? "success" : "danger";
    string rowTargetId = "target" + Model.Name + Model.Server;
    string logController = Model.Family.Equals("Mammoth", Icon.Dashboard.Mvc.Helpers.Utils.StrcmpOption) ? "MammothLogs" : "IconLogs";

<tr id="@rowTargetId" class="@rowColorClass">
    <td>
        @Html.DisplayFor(model => model.Server) (@Html.DisplayFor(model => model.HostName))
    </td>
    <td>
        @if (!string.IsNullOrWhiteSpace(Model.LoggingName))
        {
            @Html.ActionLink(Model.LoggingName + " Log Viewer", "Index", logController, new { appName = Model.LoggingName }, null)
        }
    </td>
    <td>
        @Html.ActionLink(Model.DisplayName, "Edit", new { server = Model.Server, application = Model.Name }, null)
    </td>
    <td class="hidden-xs hidden-sm text-left breakText" style="max-width:50%;@(Model.ConfigFilePathIsValid ? "" : "background-color:#ffff99;")">
        @if (!String.IsNullOrWhiteSpace(Model.ConfigFilePath))
        {
            @Html.ActionLink(Model.ConfigFilePath, "Edit", controllerName, new { server = Model.Server, application = Model.Name }, null)
        }
    </td>
    <td class="hidden-xs hidden-sm">
        @Html.DisplayFor(model => model.CurrentEsbEnvironment)
    </td>
    <td>
        @Html.DisplayFor(model => model.Status)
    </td>
    <td class="hidden-xs hidden-sm hidden-md breakText">
        @Html.DisplayFor(model => model.AccountName)
    </td>
    <td class="hidden-xs hidden-sm"> 
        @Html.DisplayFor(model => model.DatabaseSummary)
    </td>
    @if (Model.CommandsEnabled)
    {
        <td>
            @{Html.RenderPartial("_CommandsPartial", Model);}
        </td>
    }
</tr>
}