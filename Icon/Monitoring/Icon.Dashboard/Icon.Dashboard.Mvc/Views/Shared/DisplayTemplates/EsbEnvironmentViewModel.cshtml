@model Icon.Dashboard.Mvc.ViewModels.EsbEnvironmentViewModel

<div class="row">

    <div class="form-group col-xs-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title text-center">
                    <a data-toggle="collapse" href="#collapsibleEsbEnvironment@(Model.Name)">
                        @(ViewBag.Title ?? Model.Name + " ESB Environment Details")
                    </a>
                </h4>
            </div>
            <div id="collapsibleEsbEnvironment@(Model.Name)" class="panel-collapse collapse in">
                <div class="panel-body">

                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.Name)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.ServerUrl, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.ServerUrl)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.TargetHostName, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.TargetHostName)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.JmsUsername, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.JmsUsername)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.JmsPassword, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.JmsPassword)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.JndiUsername, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.JndiUsername)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.JndiPassword, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.JndiPassword)
                        </div>
                    </div>
                    @*<div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.ConnectionFactoryName, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.ConnectionFactoryName)
                        </div>
                    </div>*@
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.SslPassword, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.SslPassword)
                        </div>
                    </div>
                    @*<div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.QueueName, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.QueueName)
                        </div>
                    </div>*@
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.SessionMode, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.SessionMode)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.CertificateName, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.CertificateName)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.CertificateStoreName, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.CertificateStoreName)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.CertificateStoreLocation, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.CertificateStoreLocation)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.ReconnectDelay, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.ReconnectDelay)
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                        @Html.LabelFor(model => model.NumberOfListenerThreads, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.NumberOfListenerThreads)
                        </div>
                    </div>

                    <div class="form-group col-xs-12">
                        <div class="panel panel-info">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    <a data-toggle="collapse" href="#collapsibleApplications@(Model.Name)">@Html.DisplayNameFor(model => model.AppsInEnvironment)</a>
                                </h4>
                            </div>
                            <div id="collapsibleApplications@(Model.Name)" class="panel-collapse collapse in">
                                <div class="panel-body">
                                    @if (Model.AppsInEnvironment != null)
                                    {
                                        foreach (var associatedApplication in Model.AppsInEnvironment)
                                        {
                                            @Html.DisplayFor(model => associatedApplication, "IconEsbAppSummaryViewModel")
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                 </div>
            </div>
        </div>
    </div>
</div>

