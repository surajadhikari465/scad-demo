@model Icon.Dashboard.Mvc.ViewModels.EsbEnvironmentViewModel

@Html.ValidationSummary(true, "", new { @class = "text-danger" })


<div class="form-group col-xs-12">
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h4 class="panel-title text-center">
                <a data-toggle="collapse" href="#collapsibleEsbEnvironment@(Model.Name)">
                    @(ViewBag.Title ?? Model.Name + " ESB Environment Details")
                </a>
            </h4>
        </div>
        <div id="collapsibleEsbEnvironment@(Model.Name)" class="panel-collapse collapse in">
            <div class="panel-body">

                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.ServerUrl, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.ServerUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ServerUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.TargetHostName, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.TargetHostName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TargetHostName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JmsUsernameIcon, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JmsUsernameIcon, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JmsUsernameIcon, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JmsPasswordIcon, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JmsPasswordIcon, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JmsPasswordIcon, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JndiUsernameIcon, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JndiUsernameIcon, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JndiUsernameIcon, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JndiPasswordIcon, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JndiPasswordIcon, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JndiPasswordIcon, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JmsUsernameMammoth, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JmsUsernameMammoth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JmsUsernameMammoth, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JmsPasswordMammoth, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JmsPasswordMammoth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JmsPasswordMammoth, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JndiUsernameMammoth, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JndiUsernameMammoth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JndiUsernameMammoth, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JndiPasswordMammoth, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JndiPasswordMammoth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JndiPasswordMammoth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JmsUsernameEwic, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JmsUsernameEwic, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JmsUsernameEwic, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JmsPasswordEwic, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JmsPasswordEwic, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JmsPasswordEwic, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JndiUsernameEwic, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JndiUsernameEwic, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JndiUsernameEwic, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-lg-4">
                    @Html.LabelFor(model => model.JndiPasswordEwic, htmlAttributes: new { @class = "control-label col-xs-4" })
                    <div class="col-xs-8">
                        @Html.EditorFor(model => model.JndiPasswordEwic, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JndiPasswordEwic, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12">
                    <div class="panel panel-info">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#collapsibleApplications@(Model.Name)">
                                    @Html.DisplayNameFor(model => model.AppsInEnvironment) Configured for @(Model.Name)
                                </a>
                            </h4>
                        </div>
                        <div id="collapsibleApplications@(Model.Name)" class="panel-collapse collapse">
                            <div id="applicationsPanelBody" class="panel-body">
                                @if (Model.AppsInEnvironment != null)
                                {
                                    foreach (var associatedApplication in Model.AppsInEnvironment)
                                    {
                                        @Html.DisplayFor(model => associatedApplication, "IconEsbAppSummaryViewModel")
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>