@model IEnumerable<Icon.Dashboard.Mvc.ViewModels.IconApplicationViewModel>
@{
    ViewBag.Title = "ICON Dashboard";
    var btnClass = Icon.Dashboard.Mvc.Helpers.Utils.GetBootstrapClassForEnvironment() ?? "primary";
}
@Scripts.Render("~/bundles/jqueryTable")
@Scripts.Render("~/Content/Table/css")

<p></p>
@* initialize the datatable and set page size to 25 *@
<script type="text/javascript">
    $(document).ready(function() {
        $('#Config').DataTable({ "iDisplayLength": 25 });
    } );
</script>
<div class="container-wide">
    <table class="table table-bordered table-condensed no-bottom-margin table-striped "  id="Config">
        <thead>
            <tr>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.Server)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.DisplayName)
                </th>
                <th class="text-center hidden-xs hidden-sm">
                    @Html.DisplayNameFor(model => model.ConfigFilePath)
                </th>
                <th class="text-center hidden-xs hidden-sm">
                    @Html.DisplayNameFor(model => model.CurrentEsbEnvironment)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                @if (ViewBag.CommandsEnabled)
                {
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.ValidCommands)
                </th>
                }
            </tr>
        </thead>
        <tbody class="text-center">
            @Html.DisplayForModel()
        </tbody>
    </table>
    @Html.ActionLink(
        "Add New Application Definition",
        "Create",
        "Home",
        null,
        new { @class = "btn btn-warning btn-block" })
</div>
