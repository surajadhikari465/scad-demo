@model Icon.Dashboard.Mvc.ViewModels.IconApplicationViewModel
@{
    var action = ViewContext.RouteData.Values["action"].ToString();
    var controller = ViewContext.RouteData.Values["controller"].ToString();
    ViewBag.Title = String.Format("Configuration for \"{0}: {1}\"", Model.Server, Model.DisplayName);

    bool isMultiline = false;
    const int tooManyCharsForSingleLine = 33;
    int rowsForTextArea = 2;
}
<h3 class="text-center">@ViewBag.Title</h3>

<div class="container-fluid">
    <hr />
    @using (Html.BeginForm(action, controller, new { application = Model.Name, server = Model.Server }, FormMethod.Post, null))
    {
        @Html.HiddenFor(m => m.Name);
        @Html.HiddenFor(m => m.Server);
        @Html.HiddenFor(m => m.TypeOfApplication);
        @Html.HiddenFor(m => m.ConfigFilePath);

        <div class="row">
            <div class="col-xs-offset-1 col-xs-10">
                <div class="form-group">
                    <div class="col-xs-2">
                        @Html.LabelFor(model => model.ConfigFilePath, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-xs-10">
                        @Html.DisplayFor(model => model.ConfigFilePath)
                    </div>
                </div>
            </div>
        </div>
        <p></p>

        <div class="row">
            <div class="col-xs-offset-1 col-xs-10">
                <div class="row">
                    <div class="panel panel-danger">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#collapsibleAppSettings">
                                    General App Settings
                                </a>
                            </h4>
                        </div>

                        <div id="collapsibleAppSettings" class="panel-collapse collapse in">
                            <div class="panel-body">

                                @foreach (var entry in Model.AppSettings ?? new Dictionary<string, string>())
                                {
                                <div class="col-xs-12 col-sm-6 col-md-4">
                                    @Html.Label(entry.Key, htmlAttributes: new { @class = "control-label col-xs-12" })
                                    <div class="col-xs-12">
                                        @{
                                                if (Model.AppSettings[entry.Key] != null)
                                                {
                                                    int valueStringLength = Model.AppSettings[entry.Key].ToString().Length;
                                                    isMultiline = valueStringLength > tooManyCharsForSingleLine;
                                                    if (isMultiline && tooManyCharsForSingleLine > 0)
                                                    {
                                                        rowsForTextArea = ((valueStringLength - 1) / tooManyCharsForSingleLine) + 1;
                                                    }
                                                }
                                                isMultiline = ((Model.AppSettings[entry.Key] != null) && (Model.AppSettings[entry.Key].ToString().Length > tooManyCharsForSingleLine));
                                                if (isMultiline)
                                                {
                                            @Html.TextAreaFor(m => m.AppSettings[entry.Key], rowsForTextArea, 0, new { @class = "form-control full-width" })
                                                }
                                                else
                                                {
                                            @Html.EditorFor(m => m.AppSettings[entry.Key], new { htmlAttributes = new { @class = "form-control full-width" } })
                                                }
                                        }
                                    </div>
                                </div>
                                                } @* close foreach *@
                                            </div>
                                        </div>
                    </div>
                </div>
            </div>
        </div>
        <p></p>

        if (Model.EsbConnectionSettings.Count > 0)
        {
        <div class="row">
            <div class="col-xs-offset-1 col-xs-10">
                <div class="row">
                    <div class="panel panel-success">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#collapsibleEsbEnv">
                                    App Settings for ESB Environment
                                </a>
                            </h4>
                        </div>

                        <div id="collapsibleEsbEnv" class="panel-collapse collapse in">
                            <div class="panel-body">
                                @foreach (var keyValuePair in Model.EsbConnectionSettings.Where(kvp => kvp.Key != null))
                                {
                                    <div class="col-xs-12 col-sm-6 col-md-4">
                                        @Html.Label(keyValuePair.Key, htmlAttributes: new { @class = "control-label col-xs-12" })
                                        <div class="col-xs-12">
                                            @if ((Model.EsbConnectionSettings[keyValuePair.Key].ToString().Length > tooManyCharsForSingleLine) && (tooManyCharsForSingleLine > 0))
                                            {
                                                rowsForTextArea = ((Model.EsbConnectionSettings[keyValuePair.Key].ToString().Length - 1) / tooManyCharsForSingleLine) + 1;
                                            }
                                            @if (Model.EsbConnectionSettings[keyValuePair.Key].ToString().Length > tooManyCharsForSingleLine)
                                            {
                                                @Html.TextAreaFor(m => m.EsbConnectionSettings[keyValuePair.Key], rowsForTextArea, 0, new { @class = "form-control full-width" })
                                            }
                                            else
                                            {
                                                @Html.EditorFor(m => m.EsbConnectionSettings[keyValuePair.Key], new { htmlAttributes = new { @class = "form-control full-width" } })
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        }
        <hr />

        <div class="row">
                <div class="col-xs-offset-2 col-xs-8">
                    <button type="submit" value="@("Save")" class="btn btn-warning btn-block margin-top-10">@("Save")</button>
                </div>
            </div>

        Html.RenderPartial("_BackToListPartial", Model);
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/dashboardCustomConfigFileSelectAlls.js")
}
