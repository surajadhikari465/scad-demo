<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns3="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:pfx4="http://schemas.wfm.com/Mammoth/MammothPrices.xsd" xmlns:pfx3="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx2="http://schemas.wfm.com/Mammoth/Error.xsd" xmlns:pfx="http://schemas.wfm.com/Mammoth/mammothDbPrice.xsd">
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://schemas.wfm.com/Mammoth/mammothDbPrice.xsd" schemaLocation="/SharedResources/Schemas/Application/MammothDbPrice.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://schemas.wfm.com/Mammoth/Error.xsd" schemaLocation="/SharedResources/Schemas/Application/Error.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://schemas.wfm.com/Mammoth/MammothPrices.xsd" schemaLocation="/SharedResources/Schemas/Mammoth/MammothPrices.xsd"/>
    <pd:name>Processes/ArchivePrices.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx4:MammothPrices"/>
    <pd:startX>44</pd:startX>
    <pd:startY>191</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>483</pd:endX>
    <pd:endY>444</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1502127828895</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>319</pd:x>
        <pd:y>43</pd:y>
        <pd:width>323</pd:width>
        <pd:height>259</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>retryIndex</pd:indexSlot>
            <pd:errorCondition>$retryIndex &lt; $_globalVariables/ns:GlobalVariables/Application/ArchivePricesMaxRetryCount</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>JDBC Update</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JDBC Update</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JDBC Update</pd:from>
            <pd:to>Java Code</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-52429</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Java Code</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-52429</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="JDBC Update">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>491</pd:x>
            <pd:y>106</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/SharedResources/Connections/Mammoth.sharedjdbc</jdbcSharedConfig>
                <statement>INSERT INTO gpm.ActivePriceSentArchive (Region, PriceID, InsertDateUtc)
VALUES (?, ?, SYSUTCDATETIME())</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>Region</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>PriceID</parameterName>
                        <dataType>BIGINT</dataType>
                    </parameter>
                </Prepared_Param_DataType>
                <batchUpdate>true</batchUpdate>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <xsl:for-each select="$Start/pfx4:MammothPrices/pfx4:MammothPrice">
                        <xsl:if test="exists($Start/pfx4:MammothPrices/pfx4:MammothPrice/pfx4:PriceID)">
                            <Record>
                                <Region>
                                    <xsl:value-of select="pfx4:Region"/>
                                </Region>
                                <PriceID>
                                    <xsl:value-of select="pfx4:PriceID"/>
                                </PriceID>
                            </Record>
                        </xsl:if>
                    </xsl:for-each>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>574</pd:x>
            <pd:y>226</pd:y>
            <config/>
            <pd:inputBindings>
                <ns0:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="round($Java-Code/javaCodeActivityOutput/exponentialDelayInSeconds)"/>
                    </IntervalInMillisec>
                </ns0:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Java Code">
            <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
            <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
            <pd:description>Determines how long to sleep based on an exponential backoff formula.</pd:description>
            <pd:x>463</pd:x>
            <pd:y>223</pd:y>
            <config>
                <fileName>ArchivePricesJavaCode</fileName>
                <packageName>Processes.ArchivePrices</packageName>
                <fullsource>package Processes.ArchivePrices;
import java.util.*;
import java.io.*;
public class ArchivePricesJavaCode{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected int retryCount = 0;
	protected double maxDelayInSeconds = 0.0d;
	protected double exponentialDelayInSeconds = 0.0d;
	public int getretryCount() {
		return retryCount;
	}
	public void setretryCount(int val) {
		retryCount = val;
	}
	public double getmaxDelayInSeconds() {
		return maxDelayInSeconds;
	}
	public void setmaxDelayInSeconds(double val) {
		maxDelayInSeconds = val;
	}
	public double getexponentialDelayInSeconds() {
		return exponentialDelayInSeconds;
	}
	public void setexponentialDelayInSeconds(double val) {
		exponentialDelayInSeconds = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public ArchivePricesJavaCode() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : int retryCount
	In  : double maxDelayInSeconds
	Out : double exponentialDelayInSeconds
* Available Variables: DO NOT MODIFY *****/
double delayInSeconds = ((1d / 2d) * (Math.pow(2d, retryCount) - 1d));
exponentialDelayInSeconds = maxDelayInSeconds &lt; delayInSeconds ? Integer.valueOf((int) Math.round(maxDelayInSeconds)) : Integer.valueOf((int) Math.round(delayInSeconds));
}
}
</fullsource>
                <inputData>
                    <row>
                        <fieldName>retryCount</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>required</fieldRequired>
                    </row>
                    <row>
                        <fieldName>maxDelayInSeconds</fieldName>
                        <fieldType>double</fieldType>
                        <fieldRequired>required</fieldRequired>
                    </row>
                </inputData>
                <outputData>
                    <row>
                        <fieldName>exponentialDelayInSeconds</fieldName>
                        <fieldType>double</fieldType>
                        <fieldRequired>required</fieldRequired>
                    </row>
                </outputData>
                <byteCode>
                    <class>
                        <name>ArchivePricesJavaCode</name>
                        <byteCode>yv66vgAAADMAQAkADQAqCQANACsJAA0ALAoADgAtBj/gAAAAAAAABkAAAAAAAAAACgAuAC8KAC4AMAoAMQAyCgAxADMHADQHADUBAApyZXRyeUNvdW50AQABSQEAEW1heERlbGF5SW5TZWNvbmRzAQABRAEAGWV4cG9uZW50aWFsRGVsYXlJblNlY29uZHMBAA1nZXRyZXRyeUNvdW50AQADKClJAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEADXNldHJldHJ5Q291bnQBAAQoSSlWAQAUZ2V0bWF4RGVsYXlJblNlY29uZHMBAAMoKUQBABRzZXRtYXhEZWxheUluU2Vjb25kcwEABChEKVYBABxnZXRleHBvbmVudGlhbERlbGF5SW5TZWNvbmRzAQAcc2V0ZXhwb25lbnRpYWxEZWxheUluU2Vjb25kcwEABjxpbml0PgEAAygpVgEABmludm9rZQEADVN0YWNrTWFwVGFibGUHADQHADYBAApFeGNlcHRpb25zBwA3AQAKU291cmNlRmlsZQEAGkFyY2hpdmVQcmljZXNKYXZhQ29kZS5qYXZhDAAPABAMABEAEgwAEwASDAAgACEHADgMADkAOgwAOwA8BwA2DAA9AD4MAD8AFQEALVByb2Nlc3Nlcy9BcmNoaXZlUHJpY2VzL0FyY2hpdmVQcmljZXNKYXZhQ29kZQEAEGphdmEvbGFuZy9PYmplY3QBABFqYXZhL2xhbmcvSW50ZWdlcgEAE2phdmEvbGFuZy9FeGNlcHRpb24BAA5qYXZhL2xhbmcvTWF0aAEAA3BvdwEABShERClEAQAFcm91bmQBAAQoRClKAQAHdmFsdWVPZgEAFihJKUxqYXZhL2xhbmcvSW50ZWdlcjsBAAhpbnRWYWx1ZQAhAA0ADgAAAAMABAAPABAAAAAEABEAEgAAAAQAEwASAAAACAABABQAFQABABYAAAAdAAEAAQAAAAUqtAABrAAAAAEAFwAAAAYAAQAAAAoAAQAYABkAAQAWAAAAIgACAAIAAAAGKhu1AAGxAAAAAQAXAAAACgACAAAADQAFAA4AAQAaABsAAQAWAAAAHQACAAEAAAAFKrQAAq8AAAABABcAAAAGAAEAAAAQAAEAHAAdAAEAFgAAACIAAwADAAAABiontQACsQAAAAEAFwAAAAoAAgAAABMABQAUAAEAHgAbAAEAFgAAAB0AAgABAAAABSq0AAOvAAAAAQAXAAAABgABAAAAFgABAB8AHQABABYAAAAiAAMAAwAAAAYqJ7UAA7EAAAABABcAAAAKAAIAAAAZAAUAGgABACAAIQABABYAAAA8AAMAAQAAABQqtwAEKgO1AAEqDrUAAioOtQADsQAAAAEAFwAAABYABQAAABwABAAGAAkABwAOAAgAEwAdAAEAIgAhAAIAFgAAAIEABgADAAAAOhQABRQAByq0AAGHuAAJD2drSCoqtAACJ5icABEqtAACuAAKiLgAC6cACye4AAqIuAALtgAMh7UAA7EAAAACABcAAAAOAAMAAAAkABIAJQA5ACYAIwAAACEAAv8AKgACBwAkAwABBwAk/wAHAAIHACQDAAIHACQHACUAJgAAAAQAAQAnAAEAKAAAAAIAKQ==</byteCode>
                    </class>
                </byteCode>
            </config>
            <pd:inputBindings>
                <javaCodeActivityInput>
                    <retryCount>
                        <xsl:value-of select="$retryIndex"/>
                    </retryCount>
                    <maxDelayInSeconds>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Application/ArchivePricesMaxDelayInSeconds"/>
                    </maxDelayInSeconds>
                </javaCodeActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>158</pd:x>
        <pd:y>188</pd:y>
        <config>
            <element ref="pfx4:MammothPrices"/>
        </config>
        <pd:inputBindings>
            <pfx4:MammothPrices>
                <xsl:for-each select="$Start/pfx4:MammothPrices/pfx4:MammothPrice">
                    <xsl:if test="exists(current()/pfx4:PriceID)">
                        <pfx4:MammothPrice>
                            <pfx4:Region>
                                <xsl:value-of select="pfx4:Region"/>
                            </pfx4:Region>
                            <xsl:if test="pfx4:PriceID">
                                <pfx4:PriceID>
                                    <xsl:value-of select="pfx4:PriceID"/>
                                </pfx4:PriceID>
                            </xsl:if>
                            <pfx4:BusinessUnit>
                                <xsl:value-of select="pfx4:BusinessUnit"/>
                            </pfx4:BusinessUnit>
                            <pfx4:ItemId>
                                <xsl:value-of select="pfx4:ItemId"/>
                            </pfx4:ItemId>
                            <pfx4:GpmId>
                                <xsl:value-of select="pfx4:GpmId"/>
                            </pfx4:GpmId>
                            <pfx4:Multiple>
                                <xsl:value-of select="pfx4:Multiple"/>
                            </pfx4:Multiple>
                            <pfx4:Price>
                                <xsl:value-of select="pfx4:Price"/>
                            </pfx4:Price>
                            <pfx4:StartDate>
                                <xsl:value-of select="pfx4:StartDate"/>
                            </pfx4:StartDate>
                            <xsl:if test="pfx4:EndDate">
                                <pfx4:EndDate>
                                    <xsl:value-of select="pfx4:EndDate"/>
                                </pfx4:EndDate>
                            </xsl:if>
                            <pfx4:PriceType>
                                <xsl:value-of select="pfx4:PriceType"/>
                            </pfx4:PriceType>
                            <pfx4:PriceTypeAttribute>
                                <xsl:value-of select="pfx4:PriceTypeAttribute"/>
                            </pfx4:PriceTypeAttribute>
                            <pfx4:SellableUom>
                                <xsl:value-of select="pfx4:SellableUom"/>
                            </pfx4:SellableUom>
                            <pfx4:CurrencyCode>
                                <xsl:value-of select="pfx4:CurrencyCode"/>
                            </pfx4:CurrencyCode>
                            <xsl:if test="pfx4:NewTagExpiration">
                                <pfx4:NewTagExpiration>
                                    <xsl:value-of select="pfx4:NewTagExpiration"/>
                                </pfx4:NewTagExpiration>
                            </xsl:if>
                            <pfx4:Action>
                                <xsl:value-of select="pfx4:Action"/>
                            </pfx4:Action>
                            <pfx4:ItemTypeCode>
                                <xsl:value-of select="pfx4:ItemTypeCode"/>
                            </pfx4:ItemTypeCode>
                            <pfx4:StoreName>
                                <xsl:value-of select="pfx4:StoreName"/>
                            </pfx4:StoreName>
                            <pfx4:ScanCode>
                                <xsl:value-of select="pfx4:ScanCode"/>
                            </pfx4:ScanCode>
                        </pfx4:MammothPrice>
                    </xsl:if>
                </xsl:for-each>
            </pfx4:MammothPrices>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>Group</pd:to>
        <pd:xpathDescription>PricesHavePriceID</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>count($Map-Data/pfx4:MammothPrices/pfx4:MammothPrice) &gt; 0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>