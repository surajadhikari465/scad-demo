<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx10="http://schemas.wfm.com/Mammoth/MammothPrices.xsd" xmlns:ns5="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pfx="http://schemas.wfm.com/Enterprise/PriceMgmt/Price/V2" xmlns:WFM.UID="java://UID" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/CommonLE/Client/Schema/ClientInterface.xsd" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://services.wfm.com/Enterprise/DeadLetterException/V1" xmlns:ns3="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://www.tibco.com/schemas/PriceListener/Shared Resources/Schemas/Application/Schema.xsd" xmlns:pfx4="http://www.tibco.com/pe/EngineTypes" xmlns:pfx3="http://schemas.wfm.com/Mammoth/Error.xsd" xmlns:pfx2="http://schemas.wfm.com/Enterprise/ItemMgmt/Item/V1" xmlns:pfx9="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx8="http://schemas.wfm.com/Mammoth/IrmaDbPrice.xsd" xmlns:pfx7="http://www.tibco.com/schemas/IrmaQueueListener/Shared Resources/Schemas/Application/Schema.xsd" xmlns:pfx6="http://schemas.wfm.com/Mammoth/mammothDbPrice.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://schemas.wfm.com/Enterprise/PriceMgmt/Price/V2"/>
    <xsd:import namespace="http://schemas.wfm.com/Enterprise/PriceMgmt/Price/V2" schemaLocation="/Shared Resources/Schemas/wfm-2.3.0.1800/WholeFoodsMarket/Price/Price.xsd"/>
    <xsd:import namespace="http://schemas.wfm.com/Enterprise/ItemMgmt/Item/V1" schemaLocation="/Shared Resources/Schemas/wfm-2.3.0.1800/WholeFoodsMarket/Item/Item.xsd"/>
    <xsd:import namespace="http://schemas.wfm.com/Mammoth/Error.xsd" schemaLocation="/Shared Resources/Schemas/Application/Error.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/SharedResources/Schemas/Public/Exception/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://schemas.wfm.com/Mammoth/MammothPrices.xsd" schemaLocation="/SharedResources/Schemas/Application/MammothDbPrice.xsd"/>
    <xsd:import namespace="http://schemas.wfm.com/Mammoth/IrmaDbPrice.xsd" schemaLocation="/SharedResources/Schemas/Application/IrmaPrice.xsd"/>
    <pd:name>Processes/IrmaPriceUpdateInsertToTempTableFirst.process</pd:name>
    <pd:startName>IrmaPriceMessageReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="IrmaPriceMessageReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>68</pd:x>
        <pd:y>37</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>23</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%Destinations/Queues/IrmaSourceQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/Connections/IRMA Source Connection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/SharedResources/Properties/JMS Application Properties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>929</pd:endX>
    <pd:endY>211</pd:endY>
    <pd:errorSchemas>
        <Error ref="pfx9:ExceptionRequest"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <transactionId>
            <xsd:element name="UID" type="xsd:string"/>
        </transactionId>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1495053049862</pd:targetNamespace>
    <pd:activity name="Parse Price Message">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>394</pd:x>
        <pd:y>47</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx8:IrmaPrices"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$IrmaPriceMessageReceiver/ns:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Confirm">
        <pd:type>com.tibco.pe.core.ConfirmActivity</pd:type>
        <pd:resourceType>activity.confirm</pd:resourceType>
        <pd:x>882</pd:x>
        <pd:y>56</pd:y>
        <config>
            <ConfirmEvent>IrmaPriceMessageReceiver</ConfirmEvent>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Catch-All-Exceptions">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>255</pd:x>
        <pd:y>212</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Dead Letter Queue Exception">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>604</pd:x>
        <pd:y>220</pd:y>
        <config>
            <processName>/Processes/Common/JMS/PublishOntoDeadLetterQ.process</processName>
        </config>
        <pd:inputBindings>
            <DeadLetterInput>
                <ns4:request>
                    <ns4:applicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Application/ApplicationID"/>
                    </ns4:applicationID>
                    <ns4:transactionID>
                        <xsl:value-of select="$IrmaPriceMessageReceiver/ns:ActivityOutput/JMSHeaders/ns:JMSMessageID"/>
                    </ns4:transactionID>
                    <ns4:correlationID>
                        <xsl:value-of select="$IrmaPriceMessageReceiver/ns:ActivityOutput/JMSHeaders/ns:JMSCorrelationID"/>
                    </ns4:correlationID>
                    <ns4:failedSystemName>
                        <xsl:value-of select="&quot;IrmaQueueListener&quot;"/>
                    </ns4:failedSystemName>
                    <ns4:timeInterval>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/DLQ/TimeInterval"/>
                    </ns4:timeInterval>
                    <xsl:if test="$_error/pfx4:ErrorReport/MsgCode">
                        <ns4:errorCode>
                            <xsl:value-of select="$_error/pfx4:ErrorReport/MsgCode"/>
                        </ns4:errorCode>
                    </xsl:if>
                    <ns4:errorMessage>
                        <xsl:value-of select="$_error/pfx4:ErrorReport/Msg"/>
                    </ns4:errorMessage>
                    <xsl:if test="$_error/pfx4:ErrorReport/StackTrace">
                        <ns4:stackTrace>
                            <xsl:value-of select="$_error/pfx4:ErrorReport/StackTrace"/>
                        </ns4:stackTrace>
                    </xsl:if>
                    <ns4:currentTimestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns4:currentTimestamp>
                    <ns4:exception>
                        <ns4:system>
                            <ns4:payload>
                                <xsl:value-of select="$IrmaPriceMessageReceiver/ns:ActivityOutput/Body"/>
                            </ns4:payload>
                            <ns4:destinationQueue>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Destinations/Queues/IrmaSourceQueue"/>
                            </ns4:destinationQueue>
                            <ns4:isEncrypted>
                                <xsl:value-of select="&quot;false&quot;"/>
                            </ns4:isEncrypted>
                            <ns4:toRecipient>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Application/Notification/To"/>
                            </ns4:toRecipient>
                            <ns4:ccRecipient>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Application/Notification/cC"/>
                            </ns4:ccRecipient>
                        </ns4:system>
                    </ns4:exception>
                </ns4:request>
                <OtherProperties/>
            </DeadLetterInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Confirm-Error">
        <pd:type>com.tibco.pe.core.ConfirmActivity</pd:type>
        <pd:resourceType>activity.confirm</pd:resourceType>
        <pd:x>779</pd:x>
        <pd:y>220</pd:y>
        <config>
            <ConfirmEvent>IrmaPriceMessageReceiver</ConfirmEvent>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Batch Insert To Temp Table">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>515</pd:x>
        <pd:y>48</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connections/IRMA.sharedjdbc</jdbcSharedConfig>
            <statement>INSERT INTO infor.IrmaPrice(TransactionId, Item_Key, Store_No, Multiple, Price, PriceChgTypeId, Sale_Multiple, Sale_Price,
	Sale_Start_Date, Sale_End_Date, Retail_Unit_ID)
	VALUES (?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?)</statement>
            <batchUpdate>true</batchUpdate>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>TransactionId</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Item_Key</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>Store_No</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>Multiple</parameterName>
                    <dataType>TINYINT</dataType>
                </parameter>
                <parameter>
                    <parameterName>Price</parameterName>
                    <dataType>DECIMAL</dataType>
                </parameter>
                <parameter>
                    <parameterName>PriceChgTypeId</parameterName>
                    <dataType>TINYINT</dataType>
                </parameter>
                <parameter>
                    <parameterName>Sale_Multiple</parameterName>
                    <dataType>TINYINT</dataType>
                </parameter>
                <parameter>
                    <parameterName>Sale_Price</parameterName>
                    <dataType>DECIMAL</dataType>
                </parameter>
                <parameter>
                    <parameterName>Sale_Start_Date</parameterName>
                    <dataType>TIMESTAMP</dataType>
                </parameter>
                <parameter>
                    <parameterName>Sale_End_Date</parameterName>
                    <dataType>TIMESTAMP</dataType>
                </parameter>
                <parameter>
                    <parameterName>Unit_Id</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <xsl:for-each select="$Parse-Price-Message/pfx8:IrmaPrices/pfx8:IrmaPrice">
                    <Record>
                        <TransactionId>
                            <xsl:value-of select="$transactionId/UID"/>
                        </TransactionId>
                        <Item_Key>
                            <xsl:value-of select="pfx8:Item_Key"/>
                        </Item_Key>
                        <Store_No>
                            <xsl:value-of select="pfx8:Store_No"/>
                        </Store_No>
                        <xsl:choose>
                            <xsl:when test="(exists(pfx8:Multiple) and string-length(pfx8:Multiple) > 0)">
                                <Multiple>
                                    <xsl:value-of select="pfx8:Multiple"/>
                                </Multiple>
                            </xsl:when>
                            <xsl:otherwise>
                                <Multiple xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="(exists(pfx8:Price) and string-length(pfx8:Price) > 0)">
                                <Price>
                                    <xsl:value-of select="pfx8:Price"/>
                                </Price>
                            </xsl:when>
                            <xsl:otherwise>
                                <Price xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <PriceChgTypeId>
                            <xsl:value-of select="pfx8:PricingChgTypeId"/>
                        </PriceChgTypeId>
                        <xsl:choose>
                            <xsl:when test="(exists(pfx8:Sale_Multiple) and string-length(pfx8:Sale_Multiple) > 0)">
                                <Sale_Multiple>
                                    <xsl:value-of select="pfx8:Sale_Multiple"/>
                                </Sale_Multiple>
                            </xsl:when>
                            <xsl:otherwise>
                                <Sale_Multiple xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="(exists(pfx8:Sale_Price)  and string-length(pfx8:Sale_Price) > 0)">
                                <Sale_Price>
                                    <xsl:value-of select="pfx8:Sale_Price"/>
                                </Sale_Price>
                            </xsl:when>
                            <xsl:otherwise>
                                <Sale_Price xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="(exists(pfx8:Sale_StartDate) and string-length(pfx8:Sale_StartDate) > 0)">
                                <Sale_Start_Date>
                                    <xsl:choose>
                                        <xsl:when test="exists(pfx8:Sale_StartDate)">
                                            <xsl:value-of select="pfx8:Sale_StartDate"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </Sale_Start_Date>
                            </xsl:when>
                            <xsl:otherwise>
                                <Sale_Start_Date xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="(exists(pfx8:Sale_EndDate) and string-length(pfx8:Sale_EndDate) > 0)">
                                <Sale_End_Date>
                                    <xsl:choose>
                                        <xsl:when test="exists(pfx8:Sale_EndDate)">
                                            <xsl:value-of select="pfx8:Sale_EndDate"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </Sale_End_Date>
                            </xsl:when>
                            <xsl:otherwise>
                                <Sale_End_Date xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <Unit_Id>
                            <xsl:value-of select="pfx8:Unit_Id"/>
                        </Unit_Id>
                    </Record>
                </xsl:for-each>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Batch Update Price">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>695</pd:x>
        <pd:y>45</pd:y>
        <config>
            <timeout>10</timeout>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connections/IRMA.sharedjdbc</jdbcSharedConfig>
            <schema>dbo</schema>
            <ProcedureName>BatchUpdatePriceFromMammoth</ProcedureName>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@transactionId</colName>
                    <colType>1</colType>
                    <dataType>1</dataType>
                    <typeName>uniqueidentifier</typeName>
                </parameter>
                <parameter>
                    <colName>@PriceUpdated</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <transactionId>
                        <xsl:value-of select="$transactionId/UID"/>
                    </transactionId>
                    <PriceUpdated>
                        <xsl:value-of select="0"/>
                    </PriceUpdated>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>239</pd:x>
        <pd:y>42</pd:y>
        <config>
            <variableName>transactionId</variableName>
        </config>
        <pd:inputBindings>
            <UID>
                <xsl:value-of select="WFM.UID:UID()"/>
            </UID>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>IrmaPriceMessageReceiver</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Confirm</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Dead Letter Queue Exception</pd:from>
        <pd:to>Confirm-Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Confirm-Error</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch-All-Exceptions</pd:from>
        <pd:to>Dead Letter Queue Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Price Message</pd:from>
        <pd:to>Batch Insert To Temp Table</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Batch Insert To Temp Table</pd:from>
        <pd:to>Batch Update Price</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Batch Update Price</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>Parse Price Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>