<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://schemas.wfm.com/Enterprise/InventoryMgmt/PurchaseOrder/V1" xmlns:pfx2="http://schemas.wfm.com/Enterprise/InventoryMgmt/OrderReceipt/V1" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx3="http://schemas.wfm.com/IrmaHoneycrisp/Events.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://schemas.wfm.com/Enterprise/InventoryMgmt/CommonRefTypes/V1" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://schemas.wfm.com/Enterprise/UnitOfMeasureMgmt/UnitOfMeasure/V2" xmlns:ns4="http://schemas.wfm.com/Mammoth/ErrorMessage.xsd" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns02="http://schemas.wfm.com/Enterprise/TransactionMgmt/CommonRefTypes/V1" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns12="http://www.tibco.com/namespaces/tnt/plugins/jms">
    <xsd:import namespace="http://schemas.wfm.com/Enterprise/InventoryMgmt/OrderReceipt/V1" schemaLocation="/SharedResources/Schemas/WholeFoodsMarket/Inventory/OrderReceipt.xsd"/>
    <xsd:import namespace="http://schemas.wfm.com/IrmaHoneycrisp/Events.xsd" schemaLocation="/SharedResources/Schemas/Irma Honeycrisp/EventQueue.xsd"/>
    <xsd:import namespace="http://schemas.wfm.com/Enterprise/InventoryMgmt/PurchaseOrder/V1" schemaLocation="/SharedResources/Schemas/WholeFoodsMarket_v3.0.0.0010/Inventory/PurchaseOrder.xsd"/>
    <pd:name>Processes/PublishPurchaseOrderService.process</pd:name>
    <pd:startName>Purchase Order Event Reciever</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="Purchase Order Event Reciever">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>62</pd:x>
        <pd:y>186</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>%%Destinations/PriceEslQueue%%231<destination>%%Application/IrmaPurchaseOrderQueue%%</destination>
                <acknowledgeMode>23</acknowledgeMode>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/SharedResources/Connections/SB1.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/SharedResources/Properties/JMS-Application-Properties-InventoryManagement.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>817</pd:endX>
    <pd:endY>309</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1539792159152</pd:targetNamespace>
    <pd:activity name="Parse Event Message">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>189</pd:x>
        <pd:y>186</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx3:Events"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Purchase-Order-Event-Reciever/ns12:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetIrmaData">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>324</pd:x>
        <pd:y>176</pd:y>
        <config>
            <processName>/Processes/GetIrmaData.process</processName>
        </config>
        <pd:inputBindings>
            <pfx3:Events>
                <pfx3:EventType>
                    <pfx3:QueueID>
                        <xsl:value-of select="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:QueueID"/>
                    </pfx3:QueueID>
                    <pfx3:EventTypeCode>
                        <xsl:value-of select="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:EventTypeCode"/>
                    </pfx3:EventTypeCode>
                    <pfx3:MessageType>
                        <xsl:value-of select="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:MessageType"/>
                    </pfx3:MessageType>
                    <pfx3:KeyID>
                        <xsl:value-of select="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:KeyID"/>
                    </pfx3:KeyID>
                    <xsl:if test="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:SecondaryKeyID">
                        <pfx3:SecondaryKeyID>
                            <xsl:value-of select="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:SecondaryKeyID"/>
                        </pfx3:SecondaryKeyID>
                    </xsl:if>
                    <pfx3:InsertDate>
                        <xsl:value-of select="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:InsertDate"/>
                    </pfx3:InsertDate>
                    <pfx3:MessageTimestampUtc>
                        <xsl:value-of select="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:MessageTimestampUtc"/>
                    </pfx3:MessageTimestampUtc>
                </pfx3:EventType>
            </pfx3:Events>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Purchase Order Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>325</pd:x>
        <pd:y>316</pd:y>
        <config>
            <element ref="pfx:PurchaseOrders"/>
        </config>
        <pd:inputBindings>
            <pfx:PurchaseOrders>
                <xsl:choose>
                    <xsl:when test="contains($Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:EventTypeCode, &quot;DEL&quot;)">
                        <xsl:for-each select="$GetIrmaData/Output/POData[1]">
                            <pfx:PurchaseOrderDelete>
                                <pfx:purchaseOrderNumber>
                                    <xsl:value-of select="OrderHeader_ID"/>
                                </pfx:purchaseOrderNumber>
                                <xsl:if test="ExternalOrder_Id">
                                    <pfx:externalPurchaseOrderNumber>
                                        <xsl:value-of select="ExternalOrder_Id"/>
                                    </pfx:externalPurchaseOrderNumber>
                                </xsl:if>
                                <xsl:if test="exists(ExternalOrder_Id)">
                                    <xsl:if test="ExternalSource">
                                        <pfx:externalSource>
                                            <xsl:value-of select="ExternalSource"/>
                                        </pfx:externalSource>
                                    </xsl:if>
                                </xsl:if>
                                <pfx:eventType>
                                    <xsl:value-of select="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:EventTypeCode"/>
                                </pfx:eventType>
                                <pfx:messageNumber>
                                    <xsl:value-of select="$Purchase-Order-Event-Reciever/ns12:ActivityOutput/OtherProperties/MessageNumber"/>
                                </pfx:messageNumber>
                                <pfx:locationNumber>
                                    <xsl:value-of select="LocationNumber"/>
                                </pfx:locationNumber>
                                <pfx:locationName>
                                    <xsl:value-of select="LocationName"/>
                                </pfx:locationName>
                                <pfx:cancelUserInfo>
                                    <ns0:idNumber>
                                        <xsl:value-of select="if (current()/UserId > 0) then current()/UserId else &quot;&quot;"/>
                                    </ns0:idNumber>
                                    <ns0:name>
                                        <xsl:value-of select="if (current()/UserId > 0) then current()/UserName else &quot;&quot;"/>
                                    </ns0:name>
                                </pfx:cancelUserInfo>
                                <xsl:for-each select="$GetIrmaData/Output/POData">
                                    <pfx:purchaseOrderDeletionDetail>
                                        <xsl:if test="OrderHeader_ID">
                                            <pfx:PurchaseOrderDetailNumber>
                                                <xsl:value-of select="OrderHeader_ID"/>
                                            </pfx:PurchaseOrderDetailNumber>
                                        </xsl:if>
                                        <pfx:sourceItemKey>
                                            <xsl:value-of select="SourceItemKey"/>
                                        </pfx:sourceItemKey>
                                        <pfx:defaultScanCode>
                                            <xsl:value-of select="DefaultScanCode"/>
                                        </pfx:defaultScanCode>
                                    </pfx:purchaseOrderDeletionDetail>
                                </xsl:for-each>
                            </pfx:PurchaseOrderDelete>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$GetIrmaData/Output/POData[1]">
                            <pfx:PurchaseOrder>
                                <pfx:purchaseOrderNumber>
                                    <xsl:value-of select="OrderHeader_ID"/>
                                </pfx:purchaseOrderNumber>
                                <xsl:if test="ExternalOrder_Id">
                                    <pfx:externalPurchaseOrderNumber>
                                        <xsl:value-of select="ExternalOrder_Id"/>
                                    </pfx:externalPurchaseOrderNumber>
                                </xsl:if>
                                <xsl:if test="exists(ExternalOrder_Id)">
                                    <xsl:if test="ExternalSource">
                                        <pfx:externalSource>
                                            <xsl:value-of select="ExternalSource"/>
                                        </pfx:externalSource>
                                    </xsl:if>
                                </xsl:if>
                                <pfx:eventType>
                                    <xsl:value-of select="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:EventTypeCode"/>
                                </pfx:eventType>
                                <pfx:messageNumber>
                                    <xsl:value-of select="$Purchase-Order-Event-Reciever/ns12:ActivityOutput/OtherProperties/MessageNumber"/>
                                </pfx:messageNumber>
                                <pfx:purchaseType>
                                    <xsl:value-of select="PurchaseType"/>
                                </pfx:purchaseType>
                                <pfx:supplierNumber>
                                    <xsl:value-of select="SupplierNumber"/>
                                </pfx:supplierNumber>
                                <pfx:locationNumber>
                                    <xsl:value-of select="LocationNumber"/>
                                </pfx:locationNumber>
                                <pfx:locationName>
                                    <xsl:value-of select="LocationName"/>
                                </pfx:locationName>
                                <pfx:OrderSubTeam>
                                    <pfx:orderSubTeamNumber>
                                        <xsl:value-of select="OrderSubTeam_No"/>
                                    </pfx:orderSubTeamNumber>
                                    <pfx:orderSubTeamName>
                                        <xsl:value-of select="OrderSubTeam_Name"/>
                                    </pfx:orderSubTeamName>
                                    <pfx:orderTeamNumber>
                                        <xsl:value-of select="OrderTeam_No"/>
                                    </pfx:orderTeamNumber>
                                    <pfx:orderTeamName>
                                        <xsl:value-of select="OrderTeam_Name"/>
                                    </pfx:orderTeamName>
                                </pfx:OrderSubTeam>
                                <pfx:status>
                                    <xsl:value-of select="Status"/>
                                </pfx:status>
                                <pfx:userInfo>
                                    <ns0:idNumber>
                                        <xsl:value-of select="UserId"/>
                                    </ns0:idNumber>
                                    <ns0:name>
                                        <xsl:value-of select="UserName"/>
                                    </ns0:name>
                                </pfx:userInfo>
                                <pfx:createDateTime>
                                    <xsl:value-of select="CreateDateTime"/>
                                </pfx:createDateTime>
                                <xsl:if test="ApproveDateTime">
                                    <pfx:approveDateTime>
                                        <xsl:value-of select="ApproveDateTime"/>
                                    </pfx:approveDateTime>
                                </xsl:if>
                                <xsl:if test="CloseDateTime">
                                    <pfx:closeDateTime>
                                        <xsl:value-of select="CloseDateTime"/>
                                    </pfx:closeDateTime>
                                </xsl:if>
                                <xsl:if test="PurchaseOrderComments">
                                    <pfx:purchaseOrderComments>
                                        <xsl:value-of select="PurchaseOrderComments"/>
                                    </pfx:purchaseOrderComments>
                                </xsl:if>
                                <xsl:for-each select="$GetIrmaData/Output/POData">
                                    <pfx:PurchaseOrderDetail>
                                        <pfx:PurchaseOrderDetailNumber>
                                            <xsl:value-of select="PurchaseOrderDetailNumber"/>
                                        </pfx:PurchaseOrderDetailNumber>
                                        <pfx:sourceItemKey>
                                            <xsl:value-of select="SourceItemKey"/>
                                        </pfx:sourceItemKey>
                                        <pfx:locationId>
                                            <xsl:value-of select="LocationNumber"/>
                                        </pfx:locationId>
                                        <pfx:SubTeam>
                                            <ns0:subTeamNumber>
                                                <xsl:value-of select="OrderSubTeam_No"/>
                                            </ns0:subTeamNumber>
                                            <xsl:if test="OrderSubTeam_Name">
                                                <ns0:subTeamName>
                                                    <xsl:value-of select="OrderSubTeam_Name"/>
                                                </ns0:subTeamName>
                                            </xsl:if>
                                            <ns0:hostSubTeamNumber>
                                                <xsl:value-of select="HostSubTeam_No"/>
                                            </ns0:hostSubTeamNumber>
                                            <xsl:if test="HostSubTeam_Name">
                                                <ns0:hostSubTeamName>
                                                    <xsl:value-of select="HostSubTeam_Name"/>
                                                </ns0:hostSubTeamName>
                                            </xsl:if>
                                        </pfx:SubTeam>
                                        <pfx:defaultScanCode>
                                            <xsl:value-of select="DefaultScanCode"/>
                                        </pfx:defaultScanCode>
                                        <pfx:quantities>
                                            <ns02:quantity>
                                                <xsl:if test="QuantityOrdered">
                                                    <ns02:value>
                                                        <xsl:value-of select="QuantityOrdered"/>
                                                    </ns02:value>
                                                </xsl:if>
                                                <ns02:units>
                                                    <ns02:uom>
                                                        <ns1:code>
                                                            <xsl:value-of select="upper-case(OrderedUnitCode)"/>
                                                        </ns1:code>
                                                    </ns02:uom>
                                                </ns02:units>
                                            </ns02:quantity>
                                        </pfx:quantities>
                                        <pfx:packSize1>
                                            <xsl:value-of select="PackSize1"/>
                                        </pfx:packSize1>
                                        <pfx:packSize2>
                                            <xsl:value-of select="PackSize2"/>
                                        </pfx:packSize2>
                                        <pfx:itemCost>
                                            <xsl:value-of select="ItemCost"/>
                                        </pfx:itemCost>
                                        <xsl:if test="EarliestArrivalDate">
                                            <pfx:earliestArrivalDate>
                                                <xsl:value-of select="EarliestArrivalDate"/>
                                            </pfx:earliestArrivalDate>
                                        </xsl:if>
                                        <xsl:if test="ExpectedArrivalDate">
                                            <pfx:expectedArrivalDate>
                                                <xsl:value-of select="ExpectedArrivalDate"/>
                                            </pfx:expectedArrivalDate>
                                        </xsl:if>
                                    </pfx:PurchaseOrderDetail>
                                </xsl:for-each>
                            </pfx:PurchaseOrder>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx:PurchaseOrders>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Confirm-NoData">
        <pd:type>com.tibco.pe.core.ConfirmActivity</pd:type>
        <pd:resourceType>activity.confirm</pd:resourceType>
        <pd:x>323</pd:x>
        <pd:y>58</pd:y>
        <config>
            <ConfirmEvent>Purchase Order Event Reciever</ConfirmEvent>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Send to Esb">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>477</pd:x>
        <pd:y>307</pd:y>
        <config>
            <processName>/Processes/SendtoEsb.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <RegionCode>
                    <xsl:value-of select="$Purchase-Order-Event-Reciever/ns12:ActivityOutput/OtherProperties/RegionCode"/>
                </RegionCode>
                <EventType>
                    <xsl:value-of select="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:EventTypeCode"/>
                </EventType>
                <BusinessUnitID>
                    <xsl:value-of select="$GetIrmaData/Output/POData[1]/LocationNumber"/>
                </BusinessUnitID>
                <KeyID>
                    <xsl:value-of select="$Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:KeyID"/>
                </KeyID>
                <MessageNumber>
                    <xsl:value-of select="$Purchase-Order-Event-Reciever/ns12:ActivityOutput/OtherProperties/MessageNumber"/>
                </MessageNumber>
                <xsl:copy-of select="$Map-Purchase-Order-Data/pfx:PurchaseOrders"/>
                <TransactionId>
                    <xsl:value-of select="concat($GetIrmaData/Output/POData[1]/LocationNumber, $Parse-Event-Message/pfx3:Events/pfx3:EventType[1]/pfx3:EventTypeCode,$Purchase-Order-Event-Reciever/ns12:ActivityOutput/OtherProperties/MessageNumber)"/>
                </TransactionId>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Confirm">
        <pd:type>com.tibco.pe.core.ConfirmActivity</pd:type>
        <pd:resourceType>activity.confirm</pd:resourceType>
        <pd:x>620</pd:x>
        <pd:y>305</pd:y>
        <config>
            <ConfirmEvent>Purchase Order Event Reciever</ConfirmEvent>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>80</pd:x>
        <pd:y>487</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Confirm After Max Attempts">
        <pd:type>com.tibco.pe.core.ConfirmActivity</pd:type>
        <pd:resourceType>activity.confirm</pd:resourceType>
        <pd:x>319</pd:x>
        <pd:y>405</pd:y>
        <config>
            <ConfirmEvent>Purchase Order Event Reciever</ConfirmEvent>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogDataMapperError">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>502</pd:x>
        <pd:y>491</pd:y>
        <config>
            <processName>/SharedResources/Processes/LogPublisher.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <LogElement>
                <LogDate>
                    <xsl:value-of select="current-dateTime()"/>
                </LogDate>
                <ApplicationID>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Application/InstanceGUID"/>
                </ApplicationID>
                <HostName>
                    <xsl:value-of select="BW:getHostName()"/>
                </HostName>
                <UserName>
                    <xsl:value-of select="$_processContext/ns3:ProcessContext/ProjectName"/>
                </UserName>
                <Thread>
                    <xsl:value-of select="$_processContext/ns3:ProcessContext/ProcessId"/>
                </Thread>
                <Level>
                    <xsl:value-of select="&quot;ERROR&quot;"/>
                </Level>
                <Logger>
                    <xsl:value-of select="$_error/ns3:ErrorReport/ProcessStack"/>
                </Logger>
                <Message>
                    <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                </Message>
                <InsertedDate>
                    <xsl:value-of select="current-dateTime()"/>
                </InsertedDate>
            </LogElement>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="PublishErrorMessage">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>491</pd:x>
        <pd:y>401</pd:y>
        <config>
            <processName>/SharedResources/Processes/PublishErrorMessage.process</processName>
        </config>
        <pd:inputBindings>
            <ns4:ErrorMessage>
                <ns4:Application>
                    <xsl:value-of select="$_processContext/ns3:ProcessContext/ProjectName"/>
                </ns4:Application>
                <ns4:MessageID>
                    <xsl:value-of select="$Purchase-Order-Event-Reciever/ns12:ActivityOutput/OtherProperties/MessageNumber"/>
                </ns4:MessageID>
                <ns4:MessageProperties>
                    <ns4:NameValuePair>
                        <xsl:attribute name="name">
                            <xsl:value-of select="local-name(current())"/>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                            <xsl:value-of select="current()"/>
                        </xsl:attribute>
                    </ns4:NameValuePair>
                </ns4:MessageProperties>
                <ns4:Message>
                    <xsl:value-of select="$Purchase-Order-Event-Reciever/ns12:ActivityOutput/Body"/>
                </ns4:Message>
                <ns4:ErrorCode>
                    <xsl:value-of select="$_error/ns3:ErrorReport/MsgCode"/>
                </ns4:ErrorCode>
                <ns4:ErrorDetails>
                    <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                </ns4:ErrorDetails>
                <xsl:choose>
                    <xsl:when test="contains($_error/ns3:ErrorReport/MsgCode, &quot;Connection is closed&quot;)">
                        <ns4:ErrorSeverity>
                            <xsl:value-of select="&quot;Fatal&quot;"/>
                        </ns4:ErrorSeverity>
                    </xsl:when>
                    <xsl:when test="contains($_error/ns3:ErrorReport/MsgCode, &quot;com.microsoft.sqlserver.jdbc.SQLServerException:&quot;)">
                        <ns4:ErrorSeverity>
                            <xsl:value-of select="&quot;Fatal&quot;"/>
                        </ns4:ErrorSeverity>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns4:ErrorSeverity>
                            <xsl:value-of select="&quot;Error&quot;"/>
                        </ns4:ErrorSeverity>
                    </xsl:otherwise>
                </xsl:choose>
            </ns4:ErrorMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Purchase Order Event Reciever</pd:from>
        <pd:to>Parse Event Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Event Message</pd:from>
        <pd:to>GetIrmaData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetIrmaData</pd:from>
        <pd:to>Map Purchase Order Data</pd:to>
        <pd:xpathDescription>Data Exists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>count($GetIrmaData/Output/POData) &gt; 0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetIrmaData</pd:from>
        <pd:to>Confirm-NoData</pd:to>
        <pd:xpathDescription>No Data Pulled</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Confirm-NoData</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Purchase Order Data</pd:from>
        <pd:to>Send to Esb</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send to Esb</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Confirm</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Confirm After Max Attempts</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Purchase-Order-Event-Reciever/ns12:ActivityOutput/JMSProperties/ns12:JMSXDeliveryCount)
and ($Purchase-Order-Event-Reciever/ns12:ActivityOutput/JMSProperties/ns12:JMSXDeliveryCount = $_globalVariables/ns:GlobalVariables/Application/MaxRedeliveryCount)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>LogDataMapperError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogDataMapperError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Confirm After Max Attempts</pd:from>
        <pd:to>PublishErrorMessage</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PublishErrorMessage</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>