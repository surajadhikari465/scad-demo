@using Infragistics.Web.Mvc
@model Icon.Web.Mvc.Models.BarcodeTypeGridViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{Html.RenderPartial("_HeaderPartial", "PLU Range Management");}

<div class="search-alert page-subsection"></div>
<hr />
<div id="barcodeTypesView" class="page-section">
    @if (Model.BarcodeTypes != null && Model.BarcodeTypes.Count() > 0)
    {
        @(Html.Infragistics().Grid(Model.BarcodeTypes.AsQueryable())
            .ID("barcodeTypeGrid")
                .PrimaryKey("BarcodeTypeId")
            .Width("100%")
            .Columns(columns =>
            {
                columns.For(c => c.BarcodeTypeId).Hidden(true);
                columns.For(c => c.BarcodeType).HeaderText("Barcode Type").DataType("string").Width("35%");
                columns.For(c => c.BeginRange).HeaderText("Start").DataType("string").Width("15%");
                columns.For(c => c.EndRange).HeaderText("End").DataType("string").Width("15%");
                columns.For(c => c.ScalePlu).HeaderText("Scale PLU").DataType("string").FormatterFunction("function(val) { return val ? 'Yes' : 'No'; }").Width("10%");
            })
            .Features(features =>
            {
                features.Sorting().Inherit(true);
                features.Paging().PageSize(50).Inherit(true);
                features.Filtering().Inherit(true);
                features.Updating()
                    .EditMode(GridEditMode.None)
                    .EnableDeleteRow(false)
                    .EnableAddRow(false);
            })
                .DataSource(Model.BarcodeTypes.AsQueryable())
            .UpdateUrl(Url.Action("SaveChangesInGrid"))
            .AggregateTransactions(true)
            .DataBind()
            .Render()
        );
        <input type="button" id="export" class="btn btn-light form-submit" value="Export Barcode Types" />
    }
    else
    {
        <h4>No data was found.</h4>
    }   
</div>

@Scripts.Render("~/Scripts/Plu/barcodetype-view.js")
@Scripts.Render("~/Scripts/common-search.js")
@Scripts.Render("~/Scripts/jquery.fileDownload.js")
