@using Icon.Framework
@model Icon.Web.Mvc.Models.HierarchyClassViewModel

@{ string hierarchyName = Model.HierarchyName; }

@{
	ViewBag.Title = String.Format("New {0}", Model.HierarchyLevelName);
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@{Html.RenderPartial("_HeaderPartial", "Hierarchy Class Management");}

<div class="page-section">
	@using (Html.BeginForm("Create", "HierarchyClass", FormMethod.Post, new { @class = "begin-form" }))
	{
		@Html.AntiForgeryToken()
		@Html.ValidationSummary(true)

		@Html.HiddenFor(model => model.HierarchyId)
		@Html.HiddenFor(model => model.HierarchyName)
		@Html.HiddenFor(model => model.HierarchyClassId)
		@Html.HiddenFor(model => model.HierarchyLevel)
		@Html.HiddenFor(model => model.HierarchyParentClassId)
		@Html.HiddenFor(model => model.HierarchyParentClassName)
        @Html.HiddenFor(model => model.HierarchyLevelName)

		<fieldset>
			<legend>@ViewBag.Title</legend>

			<div class="form-group">
				@Html.LabelFor(model => model.HierarchyName, new { @class = "form-label" })
					@Html.TextBoxFor(model => model.HierarchyName, new { @disabled = "disabled", @class = "form-control form-input" })
			</div>

			@if (!String.IsNullOrEmpty(Model.HierarchyParentClassName))
			{
				<div class="form-group">
					@Html.LabelFor(model => model.HierarchyParentClassName, new { @class = "form-label" })
						@Html.TextBoxFor(model => model.HierarchyParentClassName, new { @disabled = "disabled", @class = "form-control form-input" })
				</div>
			}

			<div class="form-group">
				@Html.LabelFor(model => model.HierarchyClassName, "New Class Name", new { @class = "form-label" })
					@Html.TextBoxFor(model => model.HierarchyClassName, new { @class = "form-control form-input" })
					@Html.ValidationMessageFor(model => model.HierarchyClassName, null, new { @class = "form-property-val" })
			</div>
			<br />
			@if (hierarchyName == HierarchyNames.Tax)
			{
				<div class="form-group">
					@Html.LabelFor(model => model.TaxAbbreviation, new { @class = "form-label" })
						@Html.TextBoxFor(model => model.TaxAbbreviation, new { @class = "form-control form-input" })
						@Html.ValidationMessageFor(model => model.TaxAbbreviation)
				</div>
                <div class="form-group">
					@Html.LabelFor(model => model.TaxRomance, new { @class = "form-label" })
						@Html.TextBoxFor(model => model.TaxRomance, new { @class = "form-control form-input" })
						@Html.ValidationMessageFor(model => model.TaxRomance)
				</div>
			}
			else if (hierarchyName == HierarchyNames.Merchandise)
			{
				if (Model.HierarchyLevel == 5)
				{
					<div class="form-group">
						@Html.LabelFor(model => model.SubTeam, new { @class = "form-label" })
							@Html.DropDownListFor(model => model.SelectedSubTeam, Model.SubTeamList, "--Select Sub-Team--", new { @class = "form-control form-input" })
							@Html.ValidationMessageFor(model => model.SelectedSubTeam, null, new { @class = "form-property-val" })
					</div>  
                    <div class="form-group">
						@Html.LabelFor(model => model.NonMerchandiseTrait, new { @class = "form-label" })
							@Html.DropDownListFor(model => model.SelectedNonMerchandiseTrait, Model.NonMerchandiseTraitList, new { @class = "form-control form-input" })
							@Html.ValidationMessageFor(model => model.SelectedNonMerchandiseTrait, null, new { @class = "form-property-val" })
					</div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SubBrickCode, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.SubBrickCode, null, new { @class = "form-control form-input" })
                            @Html.ValidationMessageFor(model => model.SubBrickCode, null, new { @class = "form-property-val" })
                    </div>     
                }
			}
		</fieldset>

		<div class="form-group">
			<input type="submit" value="Create" class="btn btn-light form-submit" />
		</div>

		<div class="validation-section page-subsection">
			@if (ViewData["ErrorMessage"] != null)
			{
				<div class="alert alert-danger alert-dismissable">
					<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
					<strong>@ViewData["ErrorMessage"].ToString()</strong>
				</div>
			}
		</div>
	}
</div>

<div class="form-footer">
    @Html.ActionLink("Back to Hierarchy Search", "Index", "Hierarchy", new { SelectedHierarchyId = Model.HierarchyId }, null)
</div>