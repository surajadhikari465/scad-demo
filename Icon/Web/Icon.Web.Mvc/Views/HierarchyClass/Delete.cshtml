@using Icon.Framework;
@model Icon.Web.Mvc.Models.HierarchyClassViewModel

@{
    ViewBag.Title = "Delete Hierarchy Class";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{Html.RenderPartial("_HeaderPartial", "Hierarchy Class Management");}

<div class="page-section">
    @using (Html.BeginForm("Delete", "HierarchyClass", FormMethod.Post, new { @class = "begin-form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.HierarchyId)
        @Html.HiddenFor(model => model.HierarchyName)
        @Html.HiddenFor(model => model.HierarchyClassId)
        @Html.HiddenFor(model => model.HierarchyClassName)
        @Html.HiddenFor(model => model.HierarchyLevel)
        @Html.HiddenFor(model => model.HierarchyParentClassId)
        @Html.HiddenFor(model => model.HierarchyParentClassName)
        @Html.HiddenFor(model => model.SubTeam)
        @Html.HiddenFor(model => model.TaxAbbreviation)
        @Html.HiddenFor(model => model.NonMerchandiseTrait)

        <fieldset>
            <legend>Delete Hierarchy Class</legend>

            <div class="form-group">
                @Html.LabelFor(model => model.HierarchyName, "Hierarchy", new { @class = "form-label" })
                @Html.TextBoxFor(model => model.HierarchyName, new { @disabled = "disabled", @class = "form-control form-input" })
            </div>

            @if (!String.IsNullOrEmpty(Model.HierarchyParentClassName))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.HierarchyParentClassName, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.HierarchyParentClassName, new { @disabled = "disabled", @class = "form-control form-input" })
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.HierarchyClassName, "Deleted Class Name", new { @class = "form-label" })
                @Html.TextBoxFor(model => model.HierarchyClassName, new { @disabled = "disabled", @class = "form-control form-input" })
            </div>
            <br />
            @* Display Appropriate Hierarchy Class Traits where available *@
            @if (!String.IsNullOrEmpty(Model.TaxAbbreviation))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.TaxAbbreviation, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.TaxAbbreviation, new { @disabled = "disabled", @class = "form-control form-input" })
                </div>
            }
            @if (!String.IsNullOrEmpty(Model.TaxRomance))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.TaxRomance, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.TaxRomance, new { @disabled = "disabled", @class = "form-control form-input" })
                </div>
            }

            @if (!String.IsNullOrEmpty(Model.SubTeam))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.SubTeam, new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.SelectedSubTeam, Model.SubTeamList, new { @disabled = "disabled", @class = "form-control form-input" })
                </div>
            }

        </fieldset>

        <div class="form-group">
            <input type="submit" value="Delete" class="btn btn-danger form-submit" />
        </div>

        <div class="validation-section page-subsection">
            @if (ViewData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissable">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <strong>@ViewData["ErrorMessage"].ToString()</strong>
                </div>
            }

        </div>
    }
</div>

<div class="form-footer">
    @if (Model.HierarchyId == Hierarchies.Brands)
    {
        @Html.ActionLink("Back to Hierarchy", "Index", "Brand")
    }
    else if (Model.HierarchyId == Hierarchies.Manufacturer)
    {
        @Html.ActionLink("Back to Hierarchy", "Index", Model.HierarchyName)
    }
    else
    {
        @Html.ActionLink("Back to Hierarchy", "Index", "Hierarchy", new { SelectedHierarchyId = Model.HierarchyId }, null)
    }
</div>

<div id="divBlock" class="block" style="display: none;">
    <div class="block-message">
        <img src="\Content\Infragistics\css\structure\images\igLoadingSmall.gif" style="max-width: 35px; max-height: 35px; margin: 25px 0 0 10px;" />
        <label class="block-label">Please wait... <br /> &nbsp Processing request...</label>
    </div>
</div>

@section scripts
{
    <script src="~/Scripts/HierarchyClass/hierarchy-class-edit.js" type="module"></script>
}