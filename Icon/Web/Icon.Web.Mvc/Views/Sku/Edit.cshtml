@model Icon.Web.Mvc.Models.SkuEditViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{Html.RenderPartial("_HeaderPartial", "Edit SKU");}

<div class="page-section">
    @using (Html.BeginForm("Edit", "SKU", FormMethod.Post, new { @class = "begin-form", id = "SkuForm" }))
    {
        @Html.AntiForgeryToken()

        <div class=" ">
            @if (ViewData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissable">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <strong>@ViewData["SuccessMessage"].ToString()</strong>
                </div>
            }
            @if (ViewData["ErrorMessages"] != null)
            {
                <div class="alert alert-danger alert-dismissable">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <ul>
                        @foreach (var message in ViewData["ErrorMessages"] as List<string>)
                        {
                            <li>@Html.Raw(message)</li>
                        }
                    </ul>
                </div>
            }
        </div>

        <div class="read-only-container">
            <div class="read-only-attribute">
                <span class="read-only-attribute-label"><span class="badge badge-info">Created on @DateTime.Parse(Model.CreatedDate).ToString("g") by @Model.CreatedBy</span></span>
                <span class="read-only-attribute-value"></span>
            </div>
            <div class="read-only-attribute">
                <span class="read-only-attribute-label"><span class="badge badge-info">Modified on @DateTime.Parse(Model.LastModifiedDate).ToString("g") by @Model.LastModifiedBy</span></span>
                <span class="read-only-attribute-value"></span>
            </div>

        </div>
        <br />
        <fieldset>

            <div class="form-group">
                @Html.LabelFor(model => model.SkuId, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.SkuId, new { @class = "form-control form-input", @id = "SkuId", @disabled = "disabled" })
                @Html.HiddenFor(model => model.SkuId)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SkuDescription, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.SkuDescription, new { @class = "form-control form-input", @id = "SkuId" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CountOfItems, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.CountOfItems, new { @class = "form-control form-input", @id = "SkuId", @disabled = "disabled" })
                @Html.HiddenFor(model => model.CountOfItems)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PrimaryItemUpc, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.PrimaryItemUpc, new { @class = "form-control form-input", @id = "SkuId", @disabled = "disabled" })
                @Html.HiddenFor(model => model.PrimaryItemUpc)
                @Html.HiddenFor(model => model.LastModifiedDate)
                @Html.HiddenFor(model => model.CreatedDate)
                @Html.HiddenFor(model => model.LastModifiedBy)
                @Html.HiddenFor(model => model.CreatedBy)
            </div>

            <div class="form-group">
                <input type="submit" class="form-control btn-success" value="Save" id="btnSubmit" />
            </div>
        </fieldset>

        <div class="form-footer">
            @Html.ActionLink("Back to SKU Management", "Index")
        </div>
    }
</div>
