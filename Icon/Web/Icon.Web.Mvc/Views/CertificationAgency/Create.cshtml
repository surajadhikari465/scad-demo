@model Icon.Web.Mvc.Models.CertificationAgencyViewModel

@{
    ViewBag.Title = "Add Certification Agency";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{Html.RenderPartial("_HeaderPartial", "Certification Agency Management");}

<div class="page-section">
    @using (Html.BeginForm("Create", "CertificationAgency", FormMethod.Post, new { @class = "begin-form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <div class="form-groupp">
                @Html.LabelFor(model => model.AgencyName, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.AgencyName, new { @class = "form-control form-input", @id = "agencyName" })
                @Html.ValidationMessageFor(model => model.AgencyName, null, new { @class = "form-property-val" })
            </div>
            <div class="form-groupp">
                @Html.LabelFor(model => model.GlutenFree, new { @class = "form-label" })
                @Html.CheckBoxFor(model => model.GlutenFree, new { @class = "col-checkbox" })
            </div>
            <div class="form-groupp">
                @Html.LabelFor(model => model.Kosher, new { @class = "form-label" })
                @Html.CheckBoxFor(model => model.Kosher, new { @class = "col-checkbox" })
            </div>
            <div class="form-groupp">
                @Html.LabelFor(model => model.NonGMO, new { @class = "form-label" })
                @Html.CheckBoxFor(model => model.NonGMO, new { @class = "col-checkbox" })
            </div>
            <div class="form-groupp">
                @Html.LabelFor(model => model.Organic, new { @class = "form-label" })
                @Html.CheckBoxFor(model => model.Organic, new { @class = "col-checkbox" })
            </div>
            <div class="form-groupp">
                @Html.LabelFor(model => model.Vegan, new { @class = "form-label" })
                @Html.CheckBoxFor(model => model.Vegan, new { @class = "col-checkbox" })
            </div>
        </fieldset>

        <div class="form-groupp">
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" id="createButton" value="Create" class="btn btn-light form-submit" />
            </div>
        </div>

        <div class="validation-section page-subsection">
            @if (ViewData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissable">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <strong>@ViewData["SuccessMessage"].ToString()</strong>
                </div>
            }
            @if (ViewData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissable">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <strong>@ViewData["ErrorMessage"].ToString()</strong>
                </div>
            }
        </div>
    }
</div>

<div class="form-footer">@Html.ActionLink("Back to Certification Agency Management", "Index")</div>

@section scripts
{
    @Scripts.Render("~/Scripts/CertificationAgency/CertificationAgency-create.js")
    @Scripts.Render("~/Scripts/jquery-disable.js")
}
