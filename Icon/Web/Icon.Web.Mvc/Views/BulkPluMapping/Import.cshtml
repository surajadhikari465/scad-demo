@using Infragistics.Web.Mvc
@model Icon.Web.Mvc.Models.BulkPluMappingViewModel

@{
    ViewBag.Title = "Import";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{Html.RenderPartial("_HeaderPartial", "Bulk PLU Import");}

<div class="page-section">
    <hr />
    @if (Model.ValidItemsCount == 0)
    {
        <h4>No PLUs have been mapped.</h4>
        <div>@Html.ActionLink("Back To Bulk PLU Mapping", "Index") | @Html.ActionLink("Back To Single PLU Search", "Index", "PluMapping", null, null)</div>
    }
    else
    {
        <h4>Successfully imported @Model.ValidItemsCount mappings.</h4>
        <div>@Html.ActionLink("Back To Bulk PLU Mapping", "Index") | @Html.ActionLink("Back To Single PLU Search", "Index", "PluMapping", null, null)</div>
    }
</div>

@if (Model.ErrorItems.Count > 0)
{
    <div class="page-section">
        <hr />
        <div class="page-subsection">
            <h4>Errors were found for the following mappings.  You may export these mappings, make corrections, and attempt the import again.</h4>
            <h5>Common errors include invalid PLU length, duplicate regional PLUs, and national PLUs that don't currently exist in Icon. </h5>
        </div>

        <div class="page-subsection">
            @(Html.Infragistics().Grid(Model.ErrorItems.AsQueryable())
            .ID("pluErrorsGrid")
            .Width("100$%")
            .AutoGenerateColumns(false)
            .Columns(column =>
                {
                    column.For(item => item.BrandName).HeaderText("Brand").Width("10%");
                    column.For(item => item.ProductDescription).HeaderText("Product Description").Width("12%");
                    column.For(item => item.NationalPlu).HeaderText("National PLU").Width("6%")
                        .Template("<div style='text-align:right'>${NationalPlu}</div>");
                    column.For(item => item.flPLU).HeaderText("FL").Width("6%")
                        .Template("<div style='text-align:right'>${flPLU}</div>");
                    column.For(item => item.maPLU).HeaderText("MA").Width("6%")
                        .Template("<div style='text-align:right'>${maPLU}</div>");
                    column.For(item => item.mwPLU).HeaderText("MW").Width("6%")
                        .Template("<div style='text-align:right'>${mwPLU}</div>");
                    column.For(item => item.naPLU).HeaderText("NA").Width("6%")
                        .Template("<div style='text-align:right'>${naPLU}</div>");
                    column.For(item => item.ncPLU).HeaderText("NC").Width("6%")
                        .Template("<div style='text-align:right'>${ncPLU}</div>");
                    column.For(item => item.nePLU).HeaderText("NE").Width("6%")
                        .Template("<div style='text-align:right'>${nePLU}</div>");
                    column.For(item => item.pnPLU).HeaderText("PN").Width("6%")
                        .Template("<div style='text-align:right'>${pnPLU}</div>");
                    column.For(item => item.rmPLU).HeaderText("RM").Width("6%")
                        .Template("<div style='text-align:right'>${rmPLU}</div>");
                    column.For(item => item.soPLU).HeaderText("SO").Width("6%")
                        .Template("<div style='text-align:right'>${soPLU}</div>");
                    column.For(item => item.spPLU).HeaderText("SP").Width("6%")
                        .Template("<div style='text-align:right'>${spPLU}</div>");
                    column.For(item => item.swPLU).HeaderText("SW").Width("6%")
                        .Template("<div style='text-align:right'>${swPLU}</div>");
                    column.For(item => item.ukPLU).HeaderText("UK").Width("6%")
                        .Template("<div style='text-align:right'>${ukPLU}</div>");
                })
            .Features(features =>
                {
                    features.Paging().PageSize(20);
                    features.Sorting().ApplyColumnCss(false);
                    features.Tooltips()
                        .Visibility(TooltipsVisibility.Overflow);
                })
            .DataBind()
            .Render()
            )
        </div>

        @Html.ActionLink("Export", "BulkPluExport", "Excel", null, new { @class = "btn btn-light form-submit" })
    </div>
}

@if (Model.RemapRows.Count > 0)
{
    <div class="page-section">
        <hr />
        <div class="page-subsection">
            <h4>The following regional PLUs are already mapped to a national PLU.</h4>
            <h5>You may choose to submit these mappings and overwrite the mapping that currently exists for these regional PLUs.</h5>
        </div>

        <div class="page-subsection">
            @(Html.Infragistics().Grid(Model.RemapRows.AsQueryable())
            .ID("pluRemapGrid")
            .Width("100%")
            .AutoGenerateColumns(false)
            .Columns(column =>
                {
                    column.For(item => item.Region).HeaderText("Region").Width("5%").FormatterFunction("remapRegionFormatter");
                    column.For(item => item.RegionalPlu).HeaderText("Regional PLU").Width("15%")
                        .Template("<div style='text-align:right'>${RegionalPlu}</div>");
                    column.For(item => item.CurrentNationalPlu).HeaderText("Current National PLU").Width("15%")
                        .Template("<div style='text-align:right'>${CurrentNationalPlu}</div>");
                    column.For(item => item.CurrentNationalPluDescription).HeaderText("Description").Width("25%");
                    column.For(item => item.NewNationalPlu).HeaderText("New National PLU").Width("15%")
                        .Template("<div style='text-align:right'>${NewNationalPlu}</div>");
                    column.For(item => item.NewNationalPluDescription).HeaderText("Description").Width("25%");
                })
            .Features(features =>
                {
                    features.Paging().PageSize(20);
                    features.Sorting().ApplyColumnCss(false);
                })
            .DataBind()
            .Render()
            )

            @using (Ajax.BeginForm("Remapping", "BulkPluMapping", null, new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "alert", OnBegin = "beginOverwrite", OnSuccess = "applyBootstrapAlert" }, null))
            {
                for (int i = 0; i < Model.RemapRows.Count; i++)
                {
                    @Html.HiddenFor(model => model.RemapRows[i].NewNationalPlu);
                    @Html.HiddenFor(model => model.RemapRows[i].NewNationalPluId);
                    @Html.HiddenFor(model => model.RemapRows[i].CurrentNationalPlu);
                    @Html.HiddenFor(model => model.RemapRows[i].CurrentNationalPluId);
                    @Html.HiddenFor(model => model.RemapRows[i].Region);
                    @Html.HiddenFor(model => model.RemapRows[i].RegionalPlu);
                }

                <input type="submit" value="Overwrite Mappings" id="overwriteButton" class="btn btn-light form-submit" />
            }

            <div class="validation-section page-subsection">
                <div id="alert" style="font-weight:bold">

                </div>
            </div>

        </div>
    </div>
}

@section scripts
{
    @Scripts.Render("~/Scripts/common-search.js")
    @Scripts.Render("~/Scripts/bulk-plu-import-results.js")
}