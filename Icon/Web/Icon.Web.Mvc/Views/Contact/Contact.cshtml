@using Icon.Web.Mvc.Utility
@using Infragistics.Web.Mvc
@model Icon.Web.Mvc.Models.HierarchyClassViewModel


@{
    ViewBag.Title = "Contact Info";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{Html.RenderPartial("_HeaderPartial", "Contact Management: " + (Model == null ? "" : Model.HierarchyLevelName + ": " + Model.HierarchyClassName));}

<div class="page-section">
    @Html.HiddenFor(model => model.HierarchyClassId)

    <div id="divLinks">
        @*@Html.ActionLink("Export Contacts", "Export", "Contact", null, new { @class = "btn btn-light" })*@
        @if (ViewHelpers.HasWriteAccess(Request, User))
        {
            <span style="margin-right: 10px">@Html.ActionLink("Back To " + Model.HierarchyLevelName + "s", "Index", Model.HierarchyLevelName)</span>
            <span style="margin-right: 10px">@Html.ActionLink("Back To " + Model.HierarchyLevelName, "Edit", Model.HierarchyLevelName, new { hierarchyClassId = Model.HierarchyClassId }, null)</span>
            <span style="margin-right: 10px">@Html.ActionLink("Add New Contact", "Manage", "Contact", new { hierarchyClassId = Model.HierarchyClassId, contactId = 0 }, null)</span>
        }
    </div>

    @(Html.Infragistics().Grid<Icon.Web.Mvc.Models.ContactViewModel>()
        .ID("contactGrid")
        .PrimaryKey("ContactId")
        .AvgRowHeight("20px")
        .Height("700px")
        .Width("100%")
        .AutoGenerateColumns(false)
        .Columns(columns =>
        {
        columns.For(c => c.ContactId).HeaderText("Contact ID").DataType("number").Width("1%").Hidden(true);
        columns.For(c => c.ContactTypeName).HeaderText("Contact Type").DataType("string").Width("15%");
        columns.For(c => c.ContactName).HeaderText("Name").DataType("string").Width("25%");
        columns.For(c => c.Email).HeaderText("Email").DataType("string").Width("15%");
        columns.For(c => c.Title).HeaderText("Title").DataType("string").Width("10%");
        columns.For(c => c.AddressLine1).HeaderText("Address 1").DataType("string").Width("5%");
        columns.For(c => c.AddressLine2).HeaderText("Address 2").DataType("string").Width("5%");
        columns.For(c => c.City).HeaderText("City").DataType("string").Width("5%");
        columns.For(c => c.State).HeaderText("State").DataType("string").Width("5%");
        columns.For(c => c.ZipCode).HeaderText("Zip Code").DataType("string").Width("5%");
        columns.For(c => c.Country).HeaderText("Country").DataType("string").Width("5%");
        columns.For(c => c.PhoneNumber1).HeaderText("Phone 1").DataType("string").Width("5%");
        columns.For(c => c.PhoneNumber2).HeaderText("Phone 2").DataType("string").Width("5%");
        columns.For(c => c.WebsiteURL).HeaderText("Phone 1").DataType("string").Width("5%");
        columns.Unbound("Action").Template("&nbsp&nbsp&nbsp&nbsp <a href='/Contact/Manage?hierarchyClassId=${HierarchyClassId}&amp;ContactId=${ContactId}' class='btn btn-link'>Edit</a> &nbsp&nbsp&nbsp&nbsp <input type='button' class='btn btn-link' hidden='hidden' value='Delete' style='color:darkred;' onclick='deleteRow(${ContactId})' />").Width("10%").HeaderText("").Hidden(Model == null ? true : (ViewBag.UserWriteAccess != Icon.Web.Common.Enums.WriteAccess.Full));
        })
        .Features(features =>
        {
            features.Paging().PageSize(25);
            features.Sorting().Inherit(true);
            features.Filtering().Inherit(true);
            features.Resizing();
        })
        .DataSourceUrl(Url.Action("ContactAll", "Contact", new { hierarchyClassId = Model.HierarchyClassId }, null))
        .DataBind()
        .Render())
</div>
