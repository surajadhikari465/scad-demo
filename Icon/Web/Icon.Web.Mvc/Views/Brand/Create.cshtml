@model Icon.Web.Mvc.Models.BrandViewModel

@{
  /**/

  ViewBag.Title = "New Brand";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

@{Html.RenderPartial("_HeaderPartial", "Brand Management");}

<div class="page-section">
  @using(Html.BeginForm("Create", "Brand", FormMethod.Post, new { @class = "begin-form" }))
  {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Add New Brand</legend>

        <div class="form-group">
            @Html.LabelFor(model => model.BrandName, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.BrandName, new { @class = "form-control form-input", @id = "brandName" })
            @Html.ValidationMessageFor(model => model.BrandName, null, new { @class = "form-property-val" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrandAbbreviation, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.BrandAbbreviation, new { @class = "form-control form-input", @id = "brandAbbreviation" })
            @Html.ValidationMessageFor(model => model.BrandAbbreviation, null, new { @class = "form-property-val" })
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Designation, new { @class = "form-label" })
            @Html.DropDownListFor(model => model.Designation, new SelectList(Icon.Web.Mvc.Models.BrandViewModel.DesignationList), "Select a Designation... (Optional)", new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentCompany, new { @class = "form-label" })
            @Html.DropDownListFor(model => model.ParentCompany, new SelectList(Model == null || Model.BrandList == null ? new string[] { } : Model.BrandList), "Select a Brand... (Optional)", new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.ZipCode, new { @class = "form-control form-input", @id = "brandAbbreviation" })
            @Html.ValidationMessageFor(model => model.ZipCode, null, new { @class = "form-property-val" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Locality, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.Locality, new { @class = "form-control form-input", @id = "brandAbbreviation" })
            @Html.ValidationMessageFor(model => model.Locality, null, new { @class = "form-property-val" })
        </div>
    </fieldset>

      <div class="form-group">
          <input type="submit" id="createButton" value="Create" class="btn btn-light form-submit" />
      </div>

    <div class="validation-section page-subsection">
      @if(ViewData["SuccessMessage"] != null)
      {
        <div class="alert alert-success alert-dismissable">
          <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
          <strong>@ViewData["SuccessMessage"].ToString()</strong>
        </div>
      }
      @if(ViewData["ErrorMessage"] != null)
      {
        <div class="alert alert-danger alert-dismissable">
          <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
          <strong>@ViewData["ErrorMessage"].ToString()</strong>
        </div>
      }
    </div>
  }
</div>

<div class="form-footer">@Html.ActionLink("Back to Brands", "Index")</div>

@section scripts
{
  @Scripts.Render("~/Scripts/Brand/brand-create.js")
  @Scripts.Render("~/Scripts/jquery-disable.js")
}
