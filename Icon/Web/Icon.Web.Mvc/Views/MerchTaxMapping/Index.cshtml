@using Infragistics.Web.Mvc
@model Icon.Web.Mvc.Models.MerchTaxMappingIndexViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Scripts.Render("~/Scripts/Infragistics/js/infragistics.loader.js")

@(Html.Infragistics().Loader()
    .ScriptPath(Url.Content("~/Scripts/Infragistics/js/"))
    .CssPath(Url.Content("~/Content/Infragistics/css/"))
    .Render()
)

@{Html.RenderPartial("_HeaderPartial", "Merchandise Tax Association Management");}

<div class="search-alert page-subsection"></div>

<hr />

<div class="page-section">
    @using (Html.BeginForm("Import", "MerchTaxMapping", null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "begin-form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Import tax class corrections.</legend>

            @Html.LabelFor(model => Model.ExcelAttachment)
            <input type="file" name="ExcelAttachment" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
            <p class="help-block">Only the Excel .xlsx file format is currently supported.</p>
            <div class="validation-section">
                @Html.ValidationMessageFor(model => Model.ExcelAttachment)
            </div>
        </fieldset>

        <input type="submit" value="Import Spreadsheet" id="importButton" class="btn btn-default" />
        @Html.ActionLink("Export Tax Mismatches", "DefaultTaxMismatchExport", "Excel", null, new { @class = "btn btn-default", @id = "exportButton" })
    }
</div>

<div class="page-subsection">
    @if (ViewData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissable">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <strong>@ViewData["SuccessMessage"].ToString()</strong>
        </div>
    }

    @if (ViewData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissable">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <strong>@ViewData["ErrorMessage"].ToString()</strong>
        </div>
    }
</div>

<hr />

<div class="page-section">
    @Html.ActionLink("Add New Mapping", "Create")
</div>

<div id="merchTaxMappingView" class="page-subsection">
    @if (Model.GridViewModel.MerchTaxMappingList != null && Model.GridViewModel.MerchTaxMappingList.Count() > 0)
    {
        @(Html.Infragistics().Grid(Model.GridViewModel.MerchTaxMappingList.AsQueryable())
            .ID("MerchTaxMappingGrid")
            .PrimaryKey("MerchandiseHierarchyClassId")
            .Width("100%")
            .AutoGenerateColumns(false)
            .Columns(columns =>
                {
                    columns.For(c => c.MerchandiseHierarchyClassId).Hidden(true);
                    columns.For(c => c.MerchandiseHierarchyClassLineage).HeaderText("Merchandise").DataType("string").Width("35%");
                    columns.For(c => c.TaxHierarchyClassId).Hidden(true);
                    columns.For(c => c.TaxHierarchyClassLineage).HeaderText("Tax").DataType("string").Width("10%");
                    columns.Unbound("Edit").Template("<a href='/MerchTaxMapping/Edit?MerchandiseHierarchyClassId=${MerchandiseHierarchyClassId}'>Edit</a>").Width("20%").HeaderText("Edit Link");
                    columns.Unbound("Delete").Template("<a href='/MerchTaxMapping/Delete?MerchandiseHierarchyClassId=${MerchandiseHierarchyClassId}'>Delete</a>").Width("20%").HeaderText("Delete Link");
                })
            .Features(features =>
                {
                    features.Sorting().Inherit(true);
                    features.Paging().PageSize(50).Inherit(true);
                    features.Filtering().Inherit(true);
                })
            .DataSource(Model.GridViewModel.MerchTaxMappingList.AsQueryable())
            .DataBind()
            .Render()
        );
    }
    else
    {
        <h4>No data was found.</h4>
    }
</div>

@Scripts.Render("~/Scripts/jquery-disable.js")
@Scripts.Render("~/Scripts/jquery.fileDownload.js")
@Scripts.Render("~/Scripts/MerchTaxMapping/index.js")
