@model Icon.Web.Mvc.Models.ProductSelectionGroupCreateViewModel

@{
    ViewBag.Title = "Create PSG";
}

@{Html.RenderPartial("_HeaderPartial", "Product Selection Group Management");}

<div class="page-section">

    <div id="psgAlert">
        @if (ViewData["Error"] != null)
        {
            <div id="createItemAlert" class="alert alert-danger alert-dismissable">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <strong>@ViewData["Error"].ToString()</strong>
            </div>
        }
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <fieldset>
            <legend>Create Product Selection Group</legend>

            <div class="form-group">
                @Html.LabelFor(model => model.ProductSelectionGroupName, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.ProductSelectionGroupName, new { @class = "form-control form-input" })
                @Html.ValidationMessageFor(model => model.ProductSelectionGroupName, null, new { @class = "form-property-val" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedProductSelectionGroupTypeId, new { @class = "form-label" })
                @Html.DropDownListFor(model => model.SelectedProductSelectionGroupTypeId, Model.ProductSelectionGroupTypes, String.Empty, new { @class = "form-control form-input" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedTraitId, new { @class = "form-label" })
                @Html.DropDownListFor(model => model.SelectedTraitId, Model.Traits, String.Empty, new { @class = "form-control form-input" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TraitValue, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.TraitValue, new { @class = "form-control form-input" })
                @Html.ValidationMessageFor(model => model.TraitValue, null, new { @class = "form-property-val" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedMerchandiseHierarchyClassId, new { @class = "form-label" })
                @Html.DropDownListFor(model => model.SelectedMerchandiseHierarchyClassId, Model.MerchandiseHierarchyClasses, String.Empty, new { @class = "form-control form-input" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedAttributeId, new { @class = "form-label" })
                @Html.DropDownListFor(model => model.SelectedAttributeId, Model.Attributes, String.Empty, new { @class = "form-control form-input" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AttributeValue, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.AttributeValue, new { @class = "form-control form-input" })
                @Html.ValidationMessageFor(model => model.AttributeValue, null, new { @class = "form-property-val" })
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-light form-submit" />
            </div>
        </fieldset>
    }

</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
