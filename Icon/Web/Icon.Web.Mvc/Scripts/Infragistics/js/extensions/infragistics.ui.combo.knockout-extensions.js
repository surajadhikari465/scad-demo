/*!@license
* Infragistics.Web.ClientUI igCombo KnockoutJS extension 14.2.20142.2140
*
* Copyright (c) 2012-2014 Infragistics Inc.
*
* http://www.infragistics.com/
*
* Depends on:
*	jquery-1.7.2.js
*	ig.util.js
*	ig.dataSource.js
*/
(function($){ko.bindingHandlers.igCombo={init:function(element,valueAccessor,allBindingsAccessor,viewModel){var combo=$(element),options=$.isEmptyObject(valueAccessor())?{}:$.extend({},valueAccessor()),enableTextChangedUpdate=options.enableTextChangedUpdate,enableSelectionChangedUpdate=options.enableSelectionChangedUpdate;if(valueAccessor().text!==undefined){options.text=ko.utils.unwrapObservable(valueAccessor().text)}delete options.enableTextChangedUpdate;delete options.enableSelectionChangedUpdate;combo.igCombo(options);ko.applyBindingsToNode(element,{igComboText:{text:valueAccessor().text}},valueAccessor().text);ko.applyBindingsToNode(element,{igComboList:{options:options,dataSource:valueAccessor().dataSource,cascadingDataSource:valueAccessor().cascadingDataSource}});ko.applyBindingsToNode(element,{igComboSelectedItems:{selectedItems:valueAccessor().selectedItems}});if(enableTextChangedUpdate){ko.utils.registerEventHandler(element,"igcombotextchanged",function(evt,ui){if(ui.text!==ui.oldText){if(ko.isObservable(valueAccessor().text)){combo.attr("data-text-mutating",true);valueAccessor().text(ui.text)}else{updatePropertyValue(element,"text",viewModel,ui.text)}if(ko.isObservable(valueAccessor().value)){combo.attr("data-value-mutating",true);valueAccessor().value(ui.owner.value())}else{updatePropertyValue(element,"value",viewModel,ui.owner.value())}}})}if(enableSelectionChangedUpdate){ko.utils.registerEventHandler(element,"igcomboselectionchanged",function(evt,ui){var selectedText="",comboSeperator=ui.owner.element.igCombo("option","itemSeparator"),selectedValue=ui.owner.element.igCombo("value"),i;if(ui.items!==null){for(i=0;i<ui.items.length;i++){selectedText+=ui.items[i].text+comboSeperator}}selectedText=selectedText.substring(0,selectedText.length-comboSeperator.length);if(ko.isObservable(valueAccessor().text)){combo.attr("data-text-mutating",true);valueAccessor().text(selectedText)}else{updatePropertyValue(element,"text",viewModel,selectedText)}if(ko.isObservable(valueAccessor().value)){combo.attr("data-value-mutating",true);valueAccessor().value(selectedValue)}else{updatePropertyValue(element,"value",viewModel,selectedValue)}})}ko.utils.registerEventHandler($(element).data("igCombo").fieldElem,"blur",function(e){var newValue=e.target.value,combo=$(e.target).closest(":ui-igCombo");if(ko.isObservable(valueAccessor().text)){combo.attr("data-text-mutating",true);valueAccessor().text(newValue)}else{updatePropertyValue(element,"text",viewModel,newValue)}newValue=combo.igCombo("value");if(ko.isObservable(valueAccessor().value)){combo.attr("data-value-mutating",true);valueAccessor().value(newValue)}else{updatePropertyValue(element,"value",viewModel,newValue)}})}};ko.bindingHandlers.igComboText={init:function(element,valueAccessor){var combo=$(element);if(ko.isObservable(valueAccessor().text)&&valueAccessor().text===undefined){valueAccessor().text(combo.igCombo("text"))}},update:function(element,valueAccessor){var combo=$(element),oldText=combo.igCombo("text"),newText=ko.utils.unwrapObservable(valueAccessor().text),flag,cascChildCombo;if(newText!==undefined&&newText!==null&&newText!==oldText){flag=combo.attr("data-value-mutating");if(flag){combo.removeAttr("data-value-mutating");valueAccessor(oldText)}else{combo.igCombo("text",newText);if(ko.isObservable(valueAccessor().value)){valueAccessor().value(combo.igCombo("value"))}}}cascChildCombo=combo.data("igCombo")._cascFire;while(cascChildCombo!==undefined){if(cascChildCombo[0]!==undefined){cascChildCombo[0].fieldElem.blur();cascChildCombo=cascChildCombo[0]._cascFire}}}};ko.bindingHandlers.igComboList={init:function(element,valueAccessor){var options=valueAccessor().options,dataSource=valueAccessor().dataSource,dsArray,i;if(ko.isObservable(dataSource)){dsArray=dataSource()}else{dsArray=dataSource}if(dsArray){for(i=0;i<dsArray.length;i++){ko.applyBindingsToNode($(element).data("igCombo").mainElem[0],{igComboItem:{combo:element,value:dsArray[i],index:i,textKey:options.textKey,valueKey:options.valueKey}},dsArray[i])}}},update:function(element,valueAccessor){var combo=$(element),oldText=combo.igCombo("text"),cascadingDataSources=valueAccessor().cascadingDataSource,newText,cascChildCombo,isCascading;isCascading=cascadingDataSources!==undefined&&cascadingDataSources!==null&&typeof cascadingDataSources!=="string";combo.one("igcombodatabound",function(){combo.igCombo("text",oldText).blur()});combo.igCombo("dataBind");if(isCascading){combo.igCombo("text",oldText).data("igCombo").fieldElem.blur()}newText=combo.igCombo("text");if(oldText!==newText){cascChildCombo=combo.data("igCombo")._cascFire;while(cascChildCombo!==undefined){if(cascChildCombo[0]!==undefined){cascChildCombo[0].fieldElem.blur();cascChildCombo=cascChildCombo[0]._cascFire}}}}};ko.bindingHandlers.igComboItem={update:function(element,valueAccessor,allBindingsAccessor,viewModel){var combo,ds,index,dsItem,textKey=valueAccessor().textKey,valueKey=valueAccessor().valueKey;if(valueKey===undefined&&textKey===undefined){return}combo=$(valueAccessor().combo);index=valueAccessor().index;ds=ko.utils.unwrapObservable(combo.igCombo("getDataSource").data());dsItem=ko.utils.unwrapObservable(ds[index]);if(dsItem&&dsItem!==viewModel){if(dsItem[textKey+"_"]!==undefined){dsItem[textKey+"_"]=viewModel[textKey]}combo.data("igCombo")._renderRow(index,true)}}};ko.bindingHandlers.igComboSelectedItems={update:function(element,valueAccessor){var combo=$(element),comboObj=combo.data("igCombo"),selectedItems=valueAccessor().selectedItems;if(selectedItems){if(typeof selectedItems==="function"){selectedItems=selectedItems()}combo.igCombo("option","selectedItems",selectedItems);comboObj._initSel(comboObj.options);comboObj._updateFromList(null,1);comboObj._fixNull()}}};ko.bindingHandlers.igComboVisible={update:function(element,valueAccessor){var visible=valueAccessor(),combo=$(element);if(!ko.isObservable(visible)){return}combo.css("display",visible()?"inline-block":"none")}};function updatePropertyValue(element,option,viewModel,newValue){var reg=new RegExp("igCombo\\s*:\\s*(?:{.*,?\\s*"+option+"\\s*:\\s*)?([^{},\\s]+)"),key,res=$(element).attr("data-bind").match(reg);if(res){key=res[1];if(viewModel[key]){viewModel[key]=newValue}}}})(jQuery);