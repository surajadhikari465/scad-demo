@using WebSupport.Helpers
@using WebSupport.Models
@using System.Data

@model WebSupport.ViewModels.MessageExportViewModel
@{ ViewBag.Title = "Message Export"; }

<h2>Requeue InStock Messages/Events</h2>
<br />

@using (Html.BeginForm("Index", "MessageExport", null, FormMethod.Post, new { @class = "" }))
{
	<table class="table-borderless">
		<tr>
			<td class="col-sm-offset-0 col-sm-1" style="font-size:small; color:gray" align="left">
				@Html.LabelFor(x => x.RegionIndex, new { @class = "control-label" })

				@Html.DropDownListFor(x => x.RegionIndex, Model.OptionsForRegion, new { @class = "form-control", id = "Region", onchange = "HideElement()" })
				@Html.ValidationMessageFor(x => x.RegionIndex, "", new { @class = "text-danger" })
			</td>

			<td class="col-sm-offset-0 col-sm-1" style="font-size:small; color:gray" align="left">
				@Html.LabelFor(x => x.StoreIndex, new { @class = "control-label" })

				@Html.DropDownListFor(x => x.StoreIndex, Model.OptionsForStores, new { @class = "form-control", id = "Store", onchange = "HideElement()" })
				@Html.ValidationMessageFor(x => x.StoreIndex, "", new { @class = "text-danger" })
			</td>
			<td class="col-sm-2" style="width:auto" colspan="2" align="left">
				<input type="submit" value="Search" class="btn btn-primary form-submit col-md-offset-3" name="btnRefresh" id="btnSearch" />
			</td>
		</tr>
		<tr>
			<td class="col-sm-offset-0 col-sm-1" style="font-size:small; color:gray; width:90px;" align="left">
				@Html.LabelFor(x => x.QueueIndex, new { @class = "control-label" })

				@Html.DropDownListFor(x => x.QueueIndex, Model.Queues, new { @class = "form-control", id = "Queue", onchange = "HideElement()" })
				@Html.ValidationMessageFor(x => x.QueueIndex, "", new { @class = "text-danger" })
			</td>

			<td class="col-sm-offset-0 col-sm-1" style="font-size:small; color:gray;" align="left">
				@Html.LabelFor(x => x.MessageTypeIndex, new { @class = "control-label" })<br />

				@Html.DropDownListFor(x => x.MessageTypeIndex, Model.MessageTypes, new { @class = "form-control", id = "messageType", onchange = "HideElement()" })
			</td>

			<td class="col-sm-offset-0 col-sm-1" style="font-size:small; color:gray;" align="left">
				@Html.LabelFor(x => x.EventType, new { @class = "control-label" })<br />

				@Html.DropDownListFor(x => x.EventType, Model.EventTypes, new { @class = "form-control", id = "eventType", onchange = "HideElement()" })
			</td>

			<td class="col-sm-offset-0 col-sm-1" style="font-size:small; color:gray;" align="left">
				@Html.LabelFor(x => x.StatusIndex, new { @class = "control-label" })<br />

				@Html.DropDownListFor(x => x.StatusIndex, Model.Status, new { @class = "form-control", id = "status", onchange = "HideElement()" })
			</td>
		</tr>
		<tr>
			<td class="col-sm-offset-0 col-sm-1" style="font-size:small; color:gray" align="left">
				@Html.LabelFor(x => x.KeyID, new { @class = "control-label" })<br />

				@Html.TextBoxFor(model => Model.KeyID, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.KeyID, "", new { @class = "text-danger" })
			</td>

			<td class="col-sm-offset-0 col-sm-1" style="font-size:small; color:gray" align="left">
				@Html.LabelFor(x => x.SecondaryKeyID, new { @class = "control-label" })<br />

				@Html.TextBoxFor(model => Model.SecondaryKeyID, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.SecondaryKeyID, "", new { @class = "text-danger" })
			</td>

			<td class="col-sm-3" style="font-size:small; color:gray; width:80px;" align="left">
				@Html.LabelFor(x => x.StartDatetime, new { @class = "control-label" })<br />

				<div class="input-group date" id="dtpStartDatetime" style="width:180px" align="left">
					@Html.TextBoxFor(model => Model.StartDatetime, new { @class = "form-control" })
				</div>

				<script type="text/javascript">
					$(function () {
						$('#dtpStartDatetime').datetimepicker();
					});
				</script>
			</td>

			<td class="col-sm-3" style="font-size:small; color:gray; width:80px;" align="left">
				@Html.LabelFor(x => x.EndDatetime, new { @class = "control-label" })

				<div class="input-group date" id="dtpEndDatetime" style="width:180px">
					@Html.TextBoxFor(model => Model.EndDatetime, new { @class = "form-control" })
				</div>

				<script type="text/javascript">
					$(function () {
						$('#dtpEndDatetime').datetimepicker();
					});
				</script>
			</td>
		</tr>
	</table>
	<br />
	<br />
	<hr />
	<div id="divView" class="col-sm-12" style="overflow-x:auto">
		@{if (!Model.IsSuccess)
			{
				<div style="background-color:lightyellow; border:2px solid; padding:15px">
					<h2 style="text-align:center; color:darkred">Processing error</h2>
					<p>@Model.Error</p>
					<hr />
					<p style="font-style:italic; font-weight:600">Please contact your System Administrator if the issue persist.</p>
				</div>
			}
			else
			{
				if (Model.ResultTable != null && Model.ResultTable.Rows.Count == 0)
				{
					<p style="color:lightgray; text-align:center; font-size:xx-large">No records found...</p>
				}
			}
		}

		@{if (Model.IsSuccess && Model.ResultTable != null && Model.ResultTable.Rows.Count > 0)
			{
				if (Model.ResultTable.Rows.Count > int.Parse(System.Configuration.ConfigurationManager.AppSettings["MaxEntriesForInStockReq"]))
				{
					<div style="background-color:lightyellow; border:1px solid; padding:2px">
						<p style="font-style:italic; font-weight:600">Search result returns more than @System.Configuration.ConfigurationManager.AppSettings["MaxEntriesForInStockReq"] rows. Please refine your search criteria.</p>
					</div>
					<br />
				}
				else
				{
					<div style="background-color:lightyellow; border:1px solid; padding:2px">
						@if (Model.RequeueSuccess ?? false)
						{
							<p style="font-style:italic; font-weight:600">Records requeued successfully.</p>
						}
						else
						{
							<p style="font-style:italic; font-weight:600">@Model.ResultTable.Rows.Count rows returned.</p>
						}
					</div>
					<br />
					<div class="form-group col-sm-offset-2">
						<input type="button" value="Select All" class="btn btn-primary form-submit col-md-offset-0" id="btnSelect" name="btnSelectAll" style="background-color:#4CAF50" />
						<input type="submit" value="Requeue" class="btn btn-primary form-submit col-md-offset-0" id="cmdSend" name="btnSend" style="background-color:#4CAF50" />
					</div>
					<br />

					<table>
						<tr>
							<th style="align-items:center; height:30px; width:40px; background:rgb(220, 218, 218)" />

							@foreach (DataColumn column in Model.ResultTable.Columns)
							{
								<th style="text-align:left; height:30px; background:rgb(220, 218, 218)">@column.Caption.Replace("_", " ")</th>
							}
						</tr>

						@foreach (DataRow row in Model.ResultTable.Rows)
						{
							<tr>
								<td align="left" style="padding-left:5px">
									<input type="checkbox" name="cbIsSelected" id="cbIsSelected" value="@row["ArchiveID"]" onclick="" />
								</td>

								@foreach (var val in row.ItemArray)
								{
									if (val.GetType() != typeof(String))
									{
										<td align="right" style="padding-right:15px">@val</td> }
									else
									{
										<td align="left">@val</td>}
								}
							</tr>
						}
					</table>
				}
			}
		}
	</div>
}


@section Scripts
{
	<script type="text/javascript">
	$(document).on('change', '#Region,#Queue', function () {
			var e = document.getElementById("divView");
			if (e != null) e.style.display = "none";
		}
	)

	var getStoresSuccessCallback = function (data, textStatus, xhr) {
        var storesControl = $("#Store");
		storesControl.empty();
		storesControl.append(
			$("<option />",
				{
					value: 0,
					text: '0: -- All Stores --'
				}))
        $.each(data,
            function (index, store) {
                storesControl.append(
                    $("<option />",
                        {
                            value: store.BusinessUnit,
                            text: store.BusinessUnit + ": " + store.Name
                        }))
            });
    }

    var getStoresErrorCallback = function (xhr, textStatus, errorThrown) {
        responseHTML = $.parseHTML(xhr.responseText);

    var errorInfo = "Error attempting to load store data for region.\n"
            + "url: \"@(Url.Action("Stores", "MessageExport"))\"\n"
            + "data: \"" + $("#RegionIndex :selected").text() + "\" (" + $("#RegionIndex").val() + ")\n"
            + "call state: \"" + xhr.state() + "\".\n"
            + "response: \"" + errorThrown + "\" (" + xhr.status + ")\n"
            + "server error: \"" + $(responseHTML).find('h2').text() + "\"\n";
        console.log(errorInfo);
        console.log(xhr.responseText);
        alert(errorInfo)

        $("#Stores").empty();
		}

		$("#btnSelect").click(function () {
			var btnSelectControl = document.getElementById("btnSelect");
			var chk = $('[id^=cbIsSelected]');

			if (btnSelectControl.value == "Select All"){
				for (i = 0; i < chk.length; i++)
					chk[i].checked = true;
				btnSelectControl.value = "Deselect All";
			}else {
				for (i = 0; i < chk.length; i++)
					chk[i].checked = false;
				btnSelectControl.value  = "Select All";
			}
		})

		$("#Region").change(function () {
			var url = "@(Url.Action("Stores", "MessageExport"))";
			var data = { regionCode: $(this).val() };

			var storesControl = $("#Stores");

			$.getJSON(url, data, getStoresSuccessCallback)
				.fail(getStoresErrorCallback);
		});
	</script>
}
