@using WebSupport.Helpers
@using WebSupport.Models
@model WebSupport.ViewModels.PriceRefreshViewModel

@{
    ViewBag.Title = "Send GPM Price Refresh Message";
}
<h3 class="text-center">@ViewBag.Title</h3>

<div class="row container-fluid">
    @using (Html.BeginForm("Index", "PriceRefresh", null, FormMethod.Post, new { @class = "", id = "priceRefresh" }))
    {
        <div class="form-group">
            <div class="col-sm-offset-0 col-sm-2">
                @Html.LabelFor(m => m.RegionIndex, new { @class = "control-label" })
            </div>
            <div class="col-sm-4">
                @Html.DropDownListFor(m => m.RegionIndex, Model.OptionsForRegion, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RegionIndex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-0 col-sm-2">
                @Html.LabelFor(m => m.DownstreamSystems, new { @class = "control-label" })
            </div>
            <div class="col-sm-4">
                @Html.ListBoxFor(m => m.DownstreamSystems, Model.OptionsForDestinationSystem, new { @class = "form-control", size = Model.OptionsForDestinationSystem.Count(), id = "lbSystems" })
                @Html.ValidationMessageFor(model => model.DownstreamSystems, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-0 col-sm-2">
                @Html.LabelFor(m => m.Stores, new { @class = "control-label" })
            </div>
            <div class="col-sm-4">
                <div id="storesDiv" class="hidden">
                    <image src="@(Url.Content("~/Content/loading.gif"))" alt="Loading, please wait"></image>
                </div>
                @{
                    int storeBoxSize = 20;
                    if (Model.OptionsForStores != null && Model.OptionsForStores.Count() > 1)
                    {
                        storeBoxSize = (Model.OptionsForStores.Count() <= 40) ? Model.OptionsForStores.Count() : 40;
                    }
                }
                @Html.ListBoxFor(m => m.Stores, Model.OptionsForStores, new { @class = "form-control", size = storeBoxSize })
                @Html.ValidationMessageFor(model => model.Stores, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-0 col-sm-2">
                @Html.LabelFor(m => m.Items, new { @class = "control-label" })
            </div>
            <div class="col-sm-4">
                @{
                    int itemBoxSize = 20;
                    if (Model.Items != null && Model.Items.Count() > 20)
                    {
                        itemBoxSize = (Model.Items.Count() <= 40) ? Model.Items.Count() : 40;
                    }
                }

                <div class="radio-inline"><label>@Html.RadioButtonFor(m => m.IsItemId, "false") Scan Codes </label></div>
                <div class="radio-inline"><label>@Html.RadioButtonFor(m => m.IsItemId, "true") Item IDs </label></div>
                @Html.TextAreaFor(model => Model.Items, itemBoxSize, 20, new { @class = "form-control", @placeholder = "To send ALL prices enter *", @id = "Items" })
                @Html.ValidationMessageFor(model => model.Items, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row"></div>
        <br />
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-2">
                <button class="btn btn-primary" id="btnSubmit" data-toggle="modal" data-backdrop="static" data-keyboard="false" data-target="#dlgConfirm">Send Messages</button>
            </div>
        </div>

        <div class="row"></div>
        <br />
        if (Model.Errors != null && Model.Errors.Count > 0)
        {
            <div class="form-group">
                <div class="alert alert-danger alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <strong>@string.Join("|", Model.Errors)</strong>
                </div>
            </div>
        }
        if (Model.Success.HasValue && Model.Success.Value)
        {
            <div class="form-group">
                <div class="alert alert-success alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <strong>All prices successfully sent.</strong>
                </div>
            </div>
        }
    }
</div>

<div id="dlgConfirm" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content confirm">
            <div id="dlgHeader" class="modal-header bg-info confirm-header">
                <span id="headerText">User Confirmation Required</span>
                <button id="dlgX" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="dlgText" class="float-left" />
                <hr />
                <p class="fine-print text-info">FYI: The number of records can be very high and will require time to extract and process data.</p>
                <p id="dlgWarning" class="dlgWarning"><b>Warning:<font color="darkred"> &nbsp&nbspRequest cannot be canceled after submit.</font></b></p>
                <p id="dlgR10Warning" class="dlgWarning" style="display:none;"><b>Warning:<font color="darkred"> &nbsp&nbspR10 is selected and it can impact production.</font></b></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="dlgCancel">Cancel</button>
                <button type="button" class="btn btn-danger" id="dlgSubmit" onclick="sendMessages()">SendMessages</button>
                <img id="dlgBusy" align="left" src="@(Url.Content("~/Content/busy.gif"))" style="display:none;" />
            </div>
        </div>
    </div>
</div>



@Scripts.Render("~/Scripts/PriceRefresh/price-refresh.js")
