//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace OOSCommon.DataContext
{
    public partial class REPORT_DETAIL
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual int REPORT_HEADER_ID
        {
            get { return _rEPORT_HEADER_ID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_rEPORT_HEADER_ID != value)
                    {
                        if (REPORT_HEADER != null && REPORT_HEADER.ID != value)
                        {
                            REPORT_HEADER = null;
                        }
                        _rEPORT_HEADER_ID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _rEPORT_HEADER_ID;
    
        public virtual Nullable<int> REASON_ID
        {
            get { return _rEASON_ID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_rEASON_ID != value)
                    {
                        if (REASON != null && REASON.ID != value)
                        {
                            REASON = null;
                        }
                        _rEASON_ID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _rEASON_ID;
    
        public virtual Nullable<int> LOCATION_ID
        {
            get;
            set;
        }
    
        public virtual string VENDOR_KEY
        {
            get;
            set;
        }
    
        public virtual string VIN
        {
            get;
            set;
        }
    
        public virtual string PS_TEAM
        {
            get;
            set;
        }
    
        public virtual string PS_SUBTEAM
        {
            get;
            set;
        }
    
        public virtual string UPC
        {
            get;
            set;
        }
    
        public virtual string NAT_UPC
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SOURCE_ID
        {
            get { return _sOURCE_ID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_sOURCE_ID != value)
                    {
                        if (SOURCE != null && SOURCE.ID != value)
                        {
                            SOURCE = null;
                        }
                        _sOURCE_ID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _sOURCE_ID;
    
        public virtual Nullable<decimal> MOVEMENT
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> EFF_COST
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> EFF_PRICE
        {
            get;
            set;
        }
    
        public virtual string EFF_PRICETYPE
        {
            get;
            set;
        }
    
        public virtual string NOTES
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> CASE_SIZE
        {
            get;
            set;
        }
    
        public virtual string CREATED_BY
        {
            get;
            set;
        }
    
        public virtual System.DateTime CREATED_DATE
        {
            get;
            set;
        }
    
        public virtual string LAST_UPDATED_BY
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> LAST_UPDATED_DATE
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> SCAN_DATE
        {
            get;
            set;
        }
    
        public virtual string BRAND
        {
            get;
            set;
        }
    
        public virtual string LONG_DESCRIPTION
        {
            get;
            set;
        }
    
        public virtual string ITEM_SIZE
        {
            get;
            set;
        }
    
        public virtual string ITEM_UOM
        {
            get;
            set;
        }
    
        public virtual string CATEGORY_NAME
        {
            get;
            set;
        }
    
        public virtual string CLASS_NAME
        {
            get;
            set;
        }
    
        public virtual string BRAND_NAME
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual REASON REASON
        {
            get { return _rEASON; }
            set
            {
                if (!ReferenceEquals(_rEASON, value))
                {
                    var previousValue = _rEASON;
                    _rEASON = value;
                    FixupREASON(previousValue);
                }
            }
        }
        private REASON _rEASON;
    
        public virtual ICollection<REPORT_DETAIL_ATTRIBUTE> REPORT_DETAIL_ATTRIBUTE
        {
            get
            {
                if (_rEPORT_DETAIL_ATTRIBUTE == null)
                {
                    var newCollection = new FixupCollection<REPORT_DETAIL_ATTRIBUTE>();
                    newCollection.CollectionChanged += FixupREPORT_DETAIL_ATTRIBUTE;
                    _rEPORT_DETAIL_ATTRIBUTE = newCollection;
                }
                return _rEPORT_DETAIL_ATTRIBUTE;
            }
            set
            {
                if (!ReferenceEquals(_rEPORT_DETAIL_ATTRIBUTE, value))
                {
                    var previousValue = _rEPORT_DETAIL_ATTRIBUTE as FixupCollection<REPORT_DETAIL_ATTRIBUTE>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupREPORT_DETAIL_ATTRIBUTE;
                    }
                    _rEPORT_DETAIL_ATTRIBUTE = value;
                    var newValue = value as FixupCollection<REPORT_DETAIL_ATTRIBUTE>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupREPORT_DETAIL_ATTRIBUTE;
                    }
                }
            }
        }
        private ICollection<REPORT_DETAIL_ATTRIBUTE> _rEPORT_DETAIL_ATTRIBUTE;
    
        public virtual REPORT_HEADER REPORT_HEADER
        {
            get { return _rEPORT_HEADER; }
            set
            {
                if (!ReferenceEquals(_rEPORT_HEADER, value))
                {
                    var previousValue = _rEPORT_HEADER;
                    _rEPORT_HEADER = value;
                    FixupREPORT_HEADER(previousValue);
                }
            }
        }
        private REPORT_HEADER _rEPORT_HEADER;
    
        public virtual SOURCE SOURCE
        {
            get { return _sOURCE; }
            set
            {
                if (!ReferenceEquals(_sOURCE, value))
                {
                    var previousValue = _sOURCE;
                    _sOURCE = value;
                    FixupSOURCE(previousValue);
                }
            }
        }
        private SOURCE _sOURCE;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupREASON(REASON previousValue)
        {
            if (previousValue != null && previousValue.REPORT_DETAIL.Contains(this))
            {
                previousValue.REPORT_DETAIL.Remove(this);
            }
    
            if (REASON != null)
            {
                if (!REASON.REPORT_DETAIL.Contains(this))
                {
                    REASON.REPORT_DETAIL.Add(this);
                }
                if (REASON_ID != REASON.ID)
                {
                    REASON_ID = REASON.ID;
                }
            }
            else if (!_settingFK)
            {
                REASON_ID = null;
            }
        }
    
        private void FixupREPORT_HEADER(REPORT_HEADER previousValue)
        {
            if (previousValue != null && previousValue.REPORT_DETAIL.Contains(this))
            {
                previousValue.REPORT_DETAIL.Remove(this);
            }
    
            if (REPORT_HEADER != null)
            {
                if (!REPORT_HEADER.REPORT_DETAIL.Contains(this))
                {
                    REPORT_HEADER.REPORT_DETAIL.Add(this);
                }
                if (REPORT_HEADER_ID != REPORT_HEADER.ID)
                {
                    REPORT_HEADER_ID = REPORT_HEADER.ID;
                }
            }
        }
    
        private void FixupSOURCE(SOURCE previousValue)
        {
            if (previousValue != null && previousValue.REPORT_DETAIL.Contains(this))
            {
                previousValue.REPORT_DETAIL.Remove(this);
            }
    
            if (SOURCE != null)
            {
                if (!SOURCE.REPORT_DETAIL.Contains(this))
                {
                    SOURCE.REPORT_DETAIL.Add(this);
                }
                if (SOURCE_ID != SOURCE.ID)
                {
                    SOURCE_ID = SOURCE.ID;
                }
            }
            else if (!_settingFK)
            {
                SOURCE_ID = null;
            }
        }
    
        private void FixupREPORT_DETAIL_ATTRIBUTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (REPORT_DETAIL_ATTRIBUTE item in e.NewItems)
                {
                    item.REPORT_DETAIL = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (REPORT_DETAIL_ATTRIBUTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.REPORT_DETAIL, this))
                    {
                        item.REPORT_DETAIL = null;
                    }
                }
            }
        }

        #endregion
    }
}
