'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5466
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.5466.
'
Namespace ScanOutOfStock
    
    '''<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BasicHttpBinding_IScanOutOfStock", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ScanOutOfStock
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://oos-tst/WebService/ScanOutOfStock.svc"
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScanOutOfStock/Validate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Validate(<System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> ByVal upcs() As String) As <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> String()
            Dim results() As Object = Me.Invoke("Validate", New Object() {upcs})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginValidate(ByVal upcs() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Validate", New Object() {upcs}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidate(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScanOutOfStock/CreateEventsFor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateEventsFor(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal storeName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> ByVal upcs() As String) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateEventsFor", New Object() {storeName, upcs})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateEventsFor(ByVal storeName As String, ByVal upcs() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateEventsFor", New Object() {storeName, upcs}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateEventsFor(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScanOutOfStock/ScanProducts", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ScanProducts(ByVal scanDate As Date, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal scanDateSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal regionName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal storeName As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> ByVal upcs() As String)
            Me.Invoke("ScanProducts", New Object() {scanDate, scanDateSpecified, regionName, storeName, upcs})
        End Sub
        
        '''<remarks/>
        Public Function BeginScanProducts(ByVal scanDate As Date, ByVal scanDateSpecified As Boolean, ByVal regionName As String, ByVal storeName As String, ByVal upcs() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ScanProducts", New Object() {scanDate, scanDateSpecified, regionName, storeName, upcs}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndScanProducts(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScanOutOfStock/ValidateFor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateFor(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal upc As String) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("ValidateFor", New Object() {upc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginValidateFor(ByVal upc As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidateFor", New Object() {upc}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidateFor(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScanOutOfStock/CreateEventFor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateEventFor(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal storeName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal upc As String) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CreateEventFor", New Object() {storeName, upc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateEventFor(ByVal storeName As String, ByVal upc As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateEventFor", New Object() {storeName, upc}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateEventFor(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScanOutOfStock/Ping", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Ping(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal echo As String) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("Ping", New Object() {echo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginPing(ByVal echo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Ping", New Object() {echo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPing(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScanOutOfStock/RegionNames", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegionNames() As <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> String()
            Dim results() As Object = Me.Invoke("RegionNames", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginRegionNames(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RegionNames", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRegionNames(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScanOutOfStock/StoreNamesFor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StoreNamesFor(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal regionName As String) As <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> String()
            Dim results() As Object = Me.Invoke("StoreNamesFor", New Object() {regionName})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginStoreNamesFor(ByVal regionName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("StoreNamesFor", New Object() {regionName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndStoreNamesFor(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScanOutOfStock/RegionAbbreviations", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegionAbbreviations() As <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> String()
            Dim results() As Object = Me.Invoke("RegionAbbreviations", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginRegionAbbreviations(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RegionAbbreviations", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRegionAbbreviations(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScanOutOfStock/StoreAbbreviationsFor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StoreAbbreviationsFor(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal regionAbbrev As String) As <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> String()
            Dim results() As Object = Me.Invoke("StoreAbbreviationsFor", New Object() {regionAbbrev})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginStoreAbbreviationsFor(ByVal regionAbbrev As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("StoreAbbreviationsFor", New Object() {regionAbbrev}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndStoreAbbreviationsFor(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScanOutOfStock/ScanProductsByStoreAbbreviation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ScanProductsByStoreAbbreviation(ByVal scanDate As Date, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal scanDateSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal regionAbbrev As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal storeAbbrev As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> ByVal upcs() As String)
            Me.Invoke("ScanProductsByStoreAbbreviation", New Object() {scanDate, scanDateSpecified, regionAbbrev, storeAbbrev, upcs})
        End Sub
        
        '''<remarks/>
        Public Function BeginScanProductsByStoreAbbreviation(ByVal scanDate As Date, ByVal scanDateSpecified As Boolean, ByVal regionAbbrev As String, ByVal storeAbbrev As String, ByVal upcs() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ScanProductsByStoreAbbreviation", New Object() {scanDate, scanDateSpecified, regionAbbrev, storeAbbrev, upcs}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndScanProductsByStoreAbbreviation(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
    End Class
End Namespace
