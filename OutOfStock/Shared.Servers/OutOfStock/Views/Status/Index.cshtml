@{
    ViewBag.Title = "Index";
}

@section HeadContent
{
    
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script src="/Scripts/knockout-2.2.1.js"></script>
    <link href="/Content/css/itemstatus.css" rel=stylesheet>

    
    <script>

        hideinfo = function() {
            $(".panel-info-text").slideToggle(100);
        };

        moveEditBox = function(o, p) {
            var offset = null;
            var h = 300;
            offset = p.offset();

            if (o.is(":visible")) {
                o.fadeOut("fast", function() {
                    o.width(p.width() + 6);
                    o.height(h);
                    o.css({ top: offset.top + 'px', left: (offset.left - 5) + 'px' });
                    o.fadeIn("fast");
                });
            } else {
                o.width(p.width() + 6);
                o.height(h);
                o.css({ top: offset.top + 'px', left: (offset.left - 5) + 'px' });
                o.fadeIn("fast");
            }
        };

        showEditBox = function(anchor) {
            var overlay = $("#overlay");
            var panel = $(anchor).closest(".panel");
            var textdata = panel.find(".panel-info-text");
            var expiration = panel.find(".section-content .expiration span");
            
            panel = panel.find(".panel-sections");

            overlay.find("textarea").val(textdata.get(0).innerText);
            overlay.find("#overlay_expirationdate").val(expiration.get(0).innerText);
            
            
            moveEditBox(overlay, panel);
        };

        function ItemStatusInformation(Id, Region, UPC, Description, Brand, Size, UOM, ExpirationDate, ExpirationDateString, UploadedDate, UploadedDateString, Status) {

            this.Id = ko.observable(Id);
            this.Region = ko.observable(Region);
            this.UPC = ko.observable(UPC);
            this.Brand = ko.observable(Brand);
            this.Size = ko.observable(Size);
            this.UOM = ko.observable(UOM);
            this.ExpirationDate = ko.observable(ExpirationDate);
            this.ExpirationDateString = ko.observable(ExpirationDateString);
            this.UploadedDate = ko.observable(UploadedDate);
            this.UploadedDateString = ko.observable(UploadedDateString);
            this.Description = ko.observable(Description);
            this.Status = ko.observable(Status);
        }


        function doJqueryBindings() {
            $(".panel").mouseenter(function() {
                $(".panel-info-control", this).fadeIn("fast");
            }).mouseleave(function() {
                $(".panel-info-control", this).fadeOut("fast");
            });

            $(".panel").find(".control-edit").click(function() {
                var id = $(this).parent().find(".control-id").val();
                console.log("edit " + id);
                showEditBox(this);
            });


        }

        function deleteSelected() {
            var checkedItems = $('input[id=chkbox]:checked');
            var arrayOfIds = new Array();
            console.log(checkedItems);
            if (checkedItems.length > 0) {
                for (var i = 0; i < checkedItems.length; i++) {
                    arrayOfIds[i] = checkedItems[i].name;
                }
                var jsonData = ko.toJSON(arrayOfIds);
                $.ajax({
                    type: "POST",
                    url: "/Status/deleteMultipleStatuses",
                    data: jsonData,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json"
                }).success(function (results) {
                    console.log('success');
                    console.log(results);
                    if (!results.hasError) {
                        if (results.RecordsAffected > 0 ) {

                            self.ItemStatuses.remove(x);
                        } else if (results.RecordsAffected == 0) {
                            alert('The status you are trying delete cannot be found.');
                        }
                    } else if (results.hasError) {
                        alert(results.ErrorMessage);
                    }
                });
                
                
            } else {
                alert('You must select which items you want to delete.');
            }
        }

        function hideStatus(element) {
            if (element.nodeType === 1) {
                $(element).fadeOut(function() { $(element).remove(); });
            }
        }


        function fixPageLength() {
            var p = $('.panel-content');
            var last = p[p.length - 1].parentElement;
            var b = last.offsetTop + last.offsetHeight-200;
            
            $(".page").css({ height: b + 410 });
            $(".pageInner").css({ height: b + 300 });
            $("#main").css({ height: b + 150 }); 
        }

        function ItemStatusViewModel() {
            var self = this;
            self.ItemStatuses = ko.observableArray(null);


            self.deleteStatus = function (x) {
                
                var id = x.Id().Id;
                console.log('deleteStatus(' + id + ')');
                id = 9999;
                if (confirm('Are you sure you want to delete this Product Status?')) {
                    $.getJSON("/Status/deleteStatus?id=" + id, function(results) {
                        console.log(results);
                        if (!results.hasError) {
                            if (results.RecordsAffected == 1) {
                                self.ItemStatuses.remove(x);
                            } else if (results.RecordsAffected == 0) {
                                alert('The status you are trying delete cannot be found.');
                            }
                        } else if (results.hasError) {
                            alert(results.ErrorMessage);
                        }
                    });
                }
            };
            self.getRecentStatuses = function() {

                $.getJSON("/Status/getRecentStatues", function(allData) {
                    var mapped = $.map(allData, function(item) {
                        return new ItemStatusInformation(item);
                    });

                    self.ItemStatuses(mapped);
                    fixPageLength();
                    doJqueryBindings();
                });
            };
            self.getRecentStatuses();
        }

        var vm = new ItemStatusViewModel();

        $(function() {
            ko.applyBindings(vm);


        });
    </script>
}

<h2>Index</h2>


<div id="wrap">
    <div id="searchpanel">
        <div class="search-wrap">
            <div class="searchbox">
                <div class="searchbox-top">Search</div>
            </div>
            <label for="upc">UPC</label><input type="text" id="upc"/>
            <label for="brand">Brand</label><input type="text" id="brand"/>
            <label for="expiration">Expiration</label><input type="text" id="expiration"/>
           
        </div>
        <input class="searchbutton" type=button value="Search"/>
        <input type=button value="Toggle"  onclick="hideinfo();"/>
        <input type=button value="Delete Selected"  onclick="deleteSelected();"/>
        <input type=button value="Toggle"  onclick="hideinfo();"/>


    </div>

    
    <div id="right" data-bind="foreach: { data: ItemStatuses, beforeRemove: hideStatus }">
        
        <div class="panel" >
            <div class="panel-content">
                <div class="panel-header">
                    <span >
                        <div style="display: table-row; ">
                            <input id="chkbox" data-bind="attr: { name: Id().Id } " type=checkbox /><label class="panel-header-text" for="chkbox" data-bind="text: Id().Description "></label>
                        </div>
                    </span>
                    <div class="panel-sections">
                        <div class="panel-sections-top">
                            <div class="section-content">
                                <span class="upc">
                                    <strong>UPC:</strong>
                                    <span data-bind="text: Id().UPC"></span>
                                </span>
                                <span><strong>Uploaded:</strong><span data-bind="text: Id().UploadDateString"></span></span>
                                <span class="expiration"><strong>Expires:</strong><span data-bind="text: Id().ExpirationDateString"></span></span>
                            </div>
                        </div>
                        <div class="panel-sections-bottom">
                            <div class="section-content">
                                <span ><strong>Size:</strong><span data-bind="text: Id().Size"></span>&nbsp;<span data-bind="text: Id().UOM"></span></span>
                                <span ><strong>Region:</strong><span data-bind="text: Id().Region"></span></span>
                                <span class="brand"><strong>Brand:</strong><span data-bind="text: Id().Brand"></span></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-info">
                    <div class="panel-info-text" data-bind="text: Id().Status">
                    </div>
                    <span class="panel-info-control"><span class="control-edit">   
                                                         <img src="/Content/images/page-pencil-24-ns.png" title="Edit">
                                                     </span>
                        <span class="control-delete" data-bind="click: $parent.deleteStatus"><img src="/Content/images/badge-square-cross-24-ns.png" title="Delete">
                        </span>
                        
                    </span>

                </div>
            </div>
        </div>
    </div>
    
</div>
    
    
    <div id="overlay" style=" display: none;">
        <div class="overlay-top">
            <div class="overlay-top-text">Edit</div>
        </div>
        <div class="overlay-editor-wrap">
            <div class="overlay-editor">
                <textarea></textarea>
               Expiration Date: <input id="overlay_expirationdate" type="text"/>
            </div>

            </div>
        <button onclick="$('#overlay').hide();">Close</button>
    </div>