@using OutOfStock.Models
@model OutOfStock.Models.UPCEditViewModel           
@{
    ViewBag.Title = "Product Status Summary";
    var isBulkEditVisible = false || Model != null;
    List<string> productStatuses = ViewBag.productStatuses;    
}

@section HeadContent
{
    <script src="/Content/js/json3.min.js"></script>
    
       <script>
           var userRegion = "@OOSUser.userRegion";
           var isCentralUser =  @OOSUser.isCentral.ToString().ToLower();
           var isRegionalUser = @OOSUser.isRegionalBuyer.ToString().ToLower();
           var isStoreUser = @OOSUser.isStoreLevel.ToString().ToLower();
           var selectedRegion = '@OOSUser.userRegion';
       </script>
    
    @if (HttpContext.Current.IsDebuggingEnabled)
    {
        <script src="/Content/js/productstatus.js"></script>
        <link href="/Content/css/productstatus.css" type="text/css" rel="stylesheet"/>
    }
    else
    {
        <script src="/Content/js/productstatus.min.js"></script>
        <link href="/Content/css/productstatus.min.css" type="text/css" rel="stylesheet"/>
    }
}

@(Html.Telerik().ScriptRegistrar()  )

<p style="font-weight:bold; color:#000000;">@Html.Raw(ViewBag.Error ?? string.Empty)</p>

@(Html.Telerik().Menu().Name("ActionsMenu").OpenOnClick(true)
     .HtmlAttributes(new { style="width: 1024px; " })
     
     .ClientEvents(ev => ev.OnSelect("Menu_OnSelect")
        .OnLoad("Menu_OnLoad")
     )
    .Effects(fx => fx.Toggle().OpenDuration(100).CloseDuration(100))
    .Items(items =>
        {
            items.Add()
                 .Text("Search")
                 .ImageUrl("/Content/images/icons/find.png");

            items.Add()
                 .Text("Bulk Edit")
                 .ImageUrl("/Content/images/icons/note_edit.png")
                 .Enabled(false);

            items.Add()
                 .Text("Add New Item")
                 .ImageUrl("/Content/images/icons/add.png");
            items.Add()
     .Text(@Html.DropDownList("Regions", new SelectList(ViewBag.Regions as System.Collections.IEnumerable, "REGION_ABBR", "REGION_NAME"), new { @onchange="regionChanged(this);" }).ToHtmlString()).Encoded(false).HtmlAttributes(new { @style="line-height: 6px; " });
        }))
<div>
    <div id="SearchPanel" style="width: 1024px; margin-bottom: 5px; display: none;">
        <table>
            <tr>
                <td style="padding-right: 10px; width: 100px;">
                    <img src="/Content/images/icons/find.png" />
                    <label style="color: darkred; font-weight: bold; font-size: 16px;">Search</label>
                </td>
                <td style="padding-right: 10px">
                    <label for="productStatusToFind" style="padding-right: 10px">Status</label>
                    @(Html.Telerik().AutoComplete()
                      .Name("productStatusToFind")
                      .Filterable(filter => filter.FilterMode(AutoCompleteFilterMode.Contains))
                      .BindTo(new List<string>(productStatuses))
                      .HtmlAttributes(new { style = "width:200px" })
                      .Value(ViewBag.currentProductStatus))</td>
                <td style="padding-right: 10px">
                    <label for="upctofind" style="padding-right: 10px">UPC</label>
                    <input type="text" name="upctofind" id="upctofind" size="13" style="width: 120px; clear: both" />
                </td>

                <td style="padding-right: 10px">
                    <label for="expirationtofind">Expiration</label>
                    @(Html.Telerik().DatePicker()
                      .ButtonTitle("Select expiration date")
                      .Format("MM/dd/yyyy")
                      .Name("expirationtofind")
                      .ShowButton(true)
                      .HtmlAttributes(new { id = "DatePicker_wrapper", tabindex = "4", style = "width: 100px;" }))
                </td>
                <td style="padding-right: 10px">
                    <!--<input type="submit" value="Search" tabindex="2" style="vertical-align: middle;" onclick="executeSearch();" /> -->
                    <a href="#" onclick="executeSearch(); return false;">
                        <img src="/Content/images/icons/find.png" style="border: 0; vertical-align: top; margin-top: 1px;"  /></a>
                </td>
                <td style="padding-right: 10px">
                    <a href="#" onclick="clearSearchCriteria(); return false;">
                        <img src="/Content/images/icons/arrow_undo.png" style="border: 0; vertical-align: top; margin-top: 1px;" /></a>
                </td>

            </tr>
        </table>
    </div>

    <div id="BulkEditPanel" style="width: 1024px; margin-bottom: 5px; display: none;">
        <table>

            <tr>
                <td style="padding-right: 10px; width: 100px;">
                    <img src="/Content/images/icons/note_edit.png" />
                    <label style="color: darkred; font-weight: bold; font-size: 16px;">Bulk Edit</label>
                </td>
                <td style="padding-right: 10px">
                    <a href="#" onclick="BulkDelete();">
                        <img  title="Delete selected items" src="/Content/images/dialog-close.png" style="border: 0; vertical-align: top; margin-top: 1px;" />
                    </a>
                </td>
                <td style="padding-right: 10px">
                    <label for="BulkEditStatus" style="padding-right: 10px">Status</label>
                    @(Html.Telerik().AutoComplete()
                      .Name("BulkEditStatus")
                      .Filterable(filter => filter.FilterMode(AutoCompleteFilterMode.Contains))
                      .BindTo(new List<string>(productStatuses))
                      .HtmlAttributes(new { style = "width:200px" })
                      .Value(ViewBag.currentProductStatus))</td>

                <td style="padding-right: 10px">
                    <label for="BulkEditExpiration">Expiration</label>

                    @(Html.Telerik().DatePicker().HtmlAttributes(new { style = "width: 100px;" })
                          .ButtonTitle("Select expiration date")
                          .Format("MM/dd/yyyy")
                          .Name("BulkEditExpiration")
                          .ShowButton(true)
                          .HtmlAttributes(new { id = "DatePicker_wrapper", tabindex = "4" }))
                </td>
                <td style="padding-right: 10px">
                    <a href="#" onclick="BulkSave();">
                        <img title="Save selected items" src="/Content/images/icons/page_save.png" style="border: 0; vertical-align: top; margin-top: 1px;" /></a>
                </td>
                <td style="padding-right: 10px">
                    <a href="#" onclick="ClearBulkEdit();">
                        <img title="Clear" src="/Content/images/icons/arrow_undo.png" style="border: 0; vertical-align: top; margin-top: 1px;" /></a>
                </td>
            </tr>

            <tr>
                <td colspan="5"><span id="BulkEdit_Information"></span></td>
            </tr>

        </table>
    </div>


    <div id="AddNewPanel" style="width: 1024px; margin-bottom: 5px; display: none;">
        <table>

            <tr>
                <td style="padding-right: 10px; width: 100px;">
                    <img src="/Content/images/icons/add.png" />
                    <label style="color: darkred; font-weight: bold; font-size: 16px;">Add New</label>
                </td>
                <td style="padding-right: 10px">
                    <label for="UPCToAdd" style="padding-right: 10px">UPC</label>
                    <input type="text" name="UPCToAdd" id="UPCToAdd" size="13" style="width: 120px;" onblur="isValidUPC($(this).val(), '#AddNew_Information');" />
                </td>
                <td style="padding-right: 10px">
                    <label for="AddNew_Status" style="padding-right: 10px">Status</label>
                    @(Html.Telerik().AutoComplete()
                      .Name("AddNew_Status")
                      .Filterable(filter => filter.FilterMode(AutoCompleteFilterMode.Contains))
                      .BindTo(new List<string>(productStatuses))
                      .HtmlAttributes(new { style = "width:200px" })
                      .Value(ViewBag.currentProductStatus))</td>

                <td style="padding-right: 10px">
                    <label for="AddNew_Expiration">Expiration</label>
                    @(Html.Telerik().DatePicker().HtmlAttributes(new { style = "width: 100px;" })
                      .ButtonTitle("Select expiration date")
                      .Format("MM/dd/yyyy")
                      .Name("AddNew_Expiration")
                      .ShowButton(true)
                      .HtmlAttributes(new { id = "DatePicker_wrapper", tabindex = "4" }))
                </td>
                <td style="padding-right: 10px">
                    <a href="#">
                        <img src="/Content/images/icons/page_save.png" style="border: 0; vertical-align: top; margin-top: 1px;" onclick="AddNew();" /></a>
                </td>
                <td style="padding-right: 10px">
                    <a href="#" onclick="clearSearchCriteria();">
                        <img src="/Content/images/icons/arrow_undo.png" style="border: 0; vertical-align: top; margin-top: 1px;" /></a>
                </td>
            </tr>
            <tr>
                <td colspan="5"><span id="AddNew_Information"></span></td>
            </tr>
        </table>
    </div>
</div>




@Html.ValidationSummary(true)
@{
        @(Html.Telerik().Grid<UPCEditViewModel.ProductStatusWithVIMDetails>()
              .Name("MyGrid")
              .HtmlAttributes(new { style="width: 1024px; margin-top: 3px;" })
              .NoRecordsTemplate("<div id='loadingPanel'><img src='/Content/images/loading.gif' alt='Loading...'/></div>")
              .TableHtmlAttributes(new { style="width: 1024px" })
              .DataKeys(k =>
              {
                  k.Add(o => o.Id).RouteKey("Id");
                  k.Add(o => o.UPC).RouteKey("UPC");
              })
              .Columns(columns =>
              {
                columns.Command(commands =>
                {
                    commands.Edit().ButtonType(GridButtonType.Image).HtmlAttributes(new { @class = "edit-image", title = "Edit" });
                    commands.Delete().ButtonType(GridButtonType.Image).HtmlAttributes(new { @class = "delete-image", title = "Delete" });               
                })

                    .HeaderHtmlAttributes(new { style = "text-align: center; width: 65px; min-width: 65px;", @class = "ControlsColumn" })
                  .HtmlAttributes(new { style = "text-align: center; width: 65px; min-width: 65px;", @class="ControlsColumn" });
                columns.Bound(c => c.Id).ClientTemplate("<input style='padding:0;' type='checkbox' class='productStatusBulkEditSelect' value='<#= Id #>|<#= UPC #>' />")
                        .HeaderTemplate(@<div>
                                                <input style="padding:0;" type="checkbox" id="bulkSelectAll" name="bulkSelectAll" tabindex="5" />
                                            </div>);
                columns.Bound(c => c.StartDate)
                        .Format("{0:MM/dd/yyyy}")
                        .HeaderTemplate("Upload Date")
                        .ReadOnly();
                columns.Bound(c => c.Region)
                        .HeaderTemplate("Region")
                        .ReadOnly()
                        .HtmlAttributes(new { style = "text-align: center;" })
                        .HeaderHtmlAttributes(new { style = "text-align: center;" });
                columns.Bound(c => c.UPC)
                        .HeaderTemplate("UPC")
                        .ReadOnly();
                columns.Bound(c => c.BrandName)
                        .HeaderTemplate("Brand")
                        .ReadOnly();
                columns.Bound(c => c.ItemDescription)
                        .HeaderTemplate("Item Description")
                        .ReadOnly()
                        .HtmlAttributes(new { style = "white-space:nowrap;" });
                columns.Bound(c => c.Size)
                        .HeaderTemplate("Size")
                        .ReadOnly()
                        .ClientTemplate("<#= Size #> <#= UOM #>")
                        .HtmlAttributes(new { style = "text-align: center;" })
                        .HeaderHtmlAttributes(new { style = "text-align: center;" });
                columns.Bound(c => c.ExpirationDate)
                        .HeaderTemplate("Expiration")
                        .Format("{0:MM/dd/yyyy}")
                        .HtmlAttributes(new { style = "text-align: center;" })
                        .HeaderHtmlAttributes(new { style = "text-align: center;" });
                columns.Bound(c => c.Status)
                        .HeaderTemplate("Product Status")
                        .HtmlAttributes(new { style = "text-align: left;" })
                        .HeaderHtmlAttributes(new { style = "text-align: center;" })
                        .Template(template => "<div style='height: 75px; overflow: scroll;'>" + template.Status + "</div>");
              })
            .ClientEvents(events => events
                .OnLoad("grid_onload")
                .OnEdit("GridEdit")
                .OnDataBinding("onDataBinding")
                .OnSave("onSave")
                .OnError("onError")
                .OnDataBound("onDataBound")
                )
            .Editable(x => x.Mode(GridEditMode.PopUp))
            .DataBinding(dataBinding => dataBinding.Ajax()
                        .OperationMode(GridOperationMode.Client)
                        .Select("GridSelectAjax", "ProductStatus")
                        .Update("GridUpdateAjax", "ProductStatus")
                        .Delete("GridDeleteAjax", "ProductStatus")))
   
}
    
