//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OOSCommon.DataContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class OOSEntities : DbContext
    {
        public OOSEntities()
            : base("name=OOSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<KNOWN_OOS_DETAIL> KNOWN_OOS_DETAIL { get; set; }
        public DbSet<KNOWN_OOS_HEADER> KNOWN_OOS_HEADER { get; set; }
        public DbSet<KNOWN_OOS_MAP> KNOWN_OOS_MAP { get; set; }
        public DbSet<REASON> REASON { get; set; }
        public DbSet<REGION> REGION { get; set; }
        public DbSet<REGION_MOVEMENT_QUERY> REGION_MOVEMENT_QUERY { get; set; }
        public DbSet<REGION_REPORT_DETAIL_ATTRIBUTE_TYPE_MAP> REGION_REPORT_DETAIL_ATTRIBUTE_TYPE_MAP { get; set; }
        public DbSet<REPORT_DETAIL> REPORT_DETAIL { get; set; }
        public DbSet<REPORT_DETAIL_ATTRIBUTE> REPORT_DETAIL_ATTRIBUTE { get; set; }
        public DbSet<REPORT_DETAIL_ATTRIBUTE_TYPE> REPORT_DETAIL_ATTRIBUTE_TYPE { get; set; }
        public DbSet<REPORT_HEADER> REPORT_HEADER { get; set; }
        public DbSet<SKUCount> SKUCount { get; set; }
        public DbSet<SOURCE> SOURCE { get; set; }
        public DbSet<STATUS> STATUS { get; set; }
        public DbSet<STORE> STORE { get; set; }
        public DbSet<TEAM_Interim> TEAM_Interim { get; set; }
        public DbSet<ProductStatu> ProductStatus { get; set; }
        public DbSet<ScansMissingVimData> ScansMissingVimDatas { get; set; }
    
        public virtual int InsertOrUpdateScansMissingVimData(Nullable<int> reportHeaderId, string uPC)
        {
            var reportHeaderIdParameter = reportHeaderId.HasValue ?
                new ObjectParameter("ReportHeaderId", reportHeaderId) :
                new ObjectParameter("ReportHeaderId", typeof(int));
    
            var uPCParameter = uPC != null ?
                new ObjectParameter("UPC", uPC) :
                new ObjectParameter("UPC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOrUpdateScansMissingVimData", reportHeaderIdParameter, uPCParameter);
        }
    }
}
