@{
    ViewBag.Title = "OOS Administration";
}
<script src="/Scripts/knockout-2.2.1.js"></script>
<script src="/SCripts/knockout.validation.js"></script>
<script src="/Content/js/json3.min.js"></script> 


<div style="padding: 5px;">
    <h2 style="margin: 0; padding: 5px;">Edit Department Total Item Counts</h2>
    These values are used to calculate Out Of Stock Percentage on the OOS Summary Report
</div>
<br/>

<style>
    .alt { background-color: #efefef;}
    .errorClass { border-color: red; background-color: lightcoral}
</style>


<table class="CleanTable">
    <colgroup>
        <col style="width: 150px;">
        <col style="width: 410px">
    </colgroup>
    <tbody>
        <tr class="CleanTable">
            <td class="CleanTable" style="padding: 0 0 0 0;">
                <select data-bind="options: regions, optionsText: 'Name', optionsValue: 'Abbreviation', optionsCaption: 'Select Region...', value: selectedRegion, event: { change: changeTest }" style="width: 200px;"></select>
            </td>
            <td class="CleanTable" style="border: 0 none transparent; text-align: right;">
                <input id="Button_SaveChanges" type="button" value="Save Changes" data-bind="click: saveData" style="width: 150px; height: 30px" />
            </td>
        </tr>
        <tr class="CleanTable">
            <td colspan="2" class="CleanTable" style="padding: 0 0 0 0;">
                <span id="infomessage"></span>
            </td>            
        </tr>
    </tbody>
</table>
<br />
<div id="datawrapper">
    <table id="datatable" class="CleanTable" data-bind="visible: showResults, with: { theArray: data } " style="display: none">
        <colgroup>
            <col style="width: 150px;">
            <col style="width: 425px">
        </colgroup>
        <thead class="t-grid-header">
            <tr>
                <th class="t-header" scope="col" style="text-align: center; vertical-align: top; padding-top: 8px;">
                    <span class="LocalHeaderText" style="font-weight: bold;">Store Name</span>
                </th>
                <th class="t-header" scope="col">
                    <div>
                        <table class="CleanTable" style="width: 100%;">
                            <tbody>
                                <tr class="CleanTable">
                                    <td colspan="2" class="CleanTable LocalHeaderGroup LocalColumnGroup LocalHeaderText" style="text-align: center; font-weight: bold;">Departments</td>
                                </tr>
                                <tr class="CleanTable">
                                    <td class="CleanTable LocalHeaderSub LocalColumnCount" style="text-align: center;">Grocery</td>
                                    <td class="CleanTable LocalHeaderSub LocalColumnPercent" style="text-align: center;">Whole Body</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </th>
            </tr>
        </thead>
        <tbody data-bind="foreach: theArray">
            <tr class="t-grid" data-bind="css: { alt: $index() % 2 }">
                <td style="font-size: 1.1em;" data-bind="text: StoreName"></td>
                <td>
                    <table class="CleanTable" style="width: 100%;">
                        <tbody>
                            <tr class="CleanTable">
                                <td class="CleanTable LocalHeaderSub LocalColumnCount" style="text-align: center;">
                                    <input type="text" style="text-align: center;" data-bind="value: Grocery" /></td>
                                <td class="CleanTable LocalHeaderSub LocalColumnPercent" style="text-align: center;">
                                    <input type="text" style="text-align: center;" data-bind="value: WholeBody" /></td>
                            </tr>
                        </tbody>
                    </table>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<script>
    //objects
    function regionData(d) {
        this.Name = ko.observable(d.Name);
        this.Abbreviation = ko.observable(d.Abbreviation);
    }
    
    function storeData(id, name, grocery, wholebody) {
        this.StoreId = id;
        this.StoreName = name;
        this.Grocery = ko.observable(grocery).extend({ digit: true });
        this.WholeBody = ko.observable(wholebody).extend({ digit: true });
        
        
    }

    function validate(sd) {
        // set defaults
        if (sd.WholeBody == "") {
            sd.WholeBody = 0;
        }
        if (sd.Grocery == "") {
            sd.Grocery = 0;
        }
    }
    
    function isNumber(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    }
    
    function showSaveSuccess() {
        //toastr.options.fadeIn = 300;
        //toastr.options.positionClass = "toast-top-full-width";
        //toastr.options.timeOut = 4000;
        //toastr.options.onClick = null;

        //toastr["info"]("Your changes have been saved.");
        $("#infomessage").html("<font color='green'>Your changes have been saved.</font>");
    }
    
    function showValidationError() {
        $("#infomessage").html("<font color='red'>Changes could not be saved. Please correct your Item Count values. Numeric values only.</font>");
        /*
        toastr.options.fadeIn = 300;
        toastr.options.positionClass = "toast-top-full-width";
        toastr.options.timeOut = 4000;
        toastr.options.onClick = null;

        toastr["error"]("Changes could not be saved. Please correct your Item Count values. Numeric values only.");
        */
    }

    // VM
    function ViewModel() {
        // data
        var self = this;
        self.selectedRegion = ko.observable();
        self.regions = ko.observableArray([]);
        self.data = ko.observableArray([]);
        self.showResults = ko.observable(false);
        self.itemsChanged = ko.observable(false);
        self.errors = ko.observable();
        self.regionalBuyer = ko.observable(@OutOfStock.Models.OOSUser.isRegionalBuyer.ToString().ToLower());
        self.centralUser =  ko.observable(@OutOfStock.Models.OOSUser.isCentral.ToString().ToLower());
        
        self.data.subscribe(function () {
            self.errors(ko.validation.group(self.data(), { deep: true }));
        });

        // actions
        self.loadRegions = function() {
                $.getJSON("/Admin/Regions", function (allData) {
                    var mappedRegions = $.map(allData, function(item) {                    
                        return new regionData(item);
                    });

                    
                    self.regions(mappedRegions);
                    
                    if (mappedRegions.length == 1) {
                        
                        self.selectedRegion(mappedRegions[0].Abbreviation());
                        
                        self.loadData(self.selectedRegion());
                    }

                });
        };
        self.loadData = function (regionAbbrev) {
            $.getJSON("/Admin/Data?region=" + regionAbbrev, function(allData) {
                self.showResults(false);
                var mappedStores = ko.utils.arrayMap(allData, function(item) {
                    return new storeData(item.StoreId, item.StoreName, item.Grocery, item.WholeBody);
                });
                self.data(mappedStores);
                if (self.data().length > 1) {
                    self.showResults(true);
                }

                adjustHeights();
                //}
                $("input[type=text]").focus(function () { $(this).select(); });
                setPermission(self);
            });
        };

        self.saveData = function () {
            $("#infomessage").html("");

            if (self.data().isValid()) {
                var jsonData = ko.toJSON(self.data);
                $.ajax({
                    type: "POST",
                    url: "/Admin/Save",
                    data: jsonData,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json"
                }).success(function (data) {
                    showSaveSuccess();
                });
            } else {
                showValidationError();
            }
        };
        self.changeTest = function () {
            self.loadData(self.selectedRegion());
        };
        self.loadRegions();
    }
    

    function setPermission(vm) {
        if (vm.centralUser()) {
            $("#Button_SaveChanges").hide();
            $("input[type=text]").attr("disabled", "disabled");

        } else if (vm.regionalBuyer()) {
            $("#Button_SaveChanges").show();
            $("input[type=text]").removeAttr("disabled");
        }
    }
    
    
    
    // .Main
    $(function () {
        $.ajaxSetup({ cache: false });

        var vm = new ViewModel();
        ko.validation.configure({ decorateElement: true, insertMessages: false, errorElementClass: 'errorClass' });
        ko.applyBindings(vm);

        setPermission(vm);

    });

</script>

@section HeadContent
{
    <style type="text/css">
        /* hide Telerik Grid recycle */
        .t-grid .t-status
        {
            display: none;
        }

        .t-grid
        {
            border:none 0 transparent;
        }

        .t-grid-header .t-header
        {
            border-top:solid 2px #E1E1E1;
            border-bottom:solid 2px #E1E1E1;
            border-right:solid 2px #FFFFFF;
            border-left:none 0 transparent;
            background-color: #F4F4F4;
            background: -moz-linear-gradient(top, #F4F4F4, #E1E1E1);
            background: -webkit-gradient(linear, left top, left bottom, from(#F4F4F4), to(#E1E1E1));
            filter: progid:DXImageTransform.Microsoft.gradient(enabled='true',startColorstr=#F4F4F4,endColorstr=#E1E1E1);
        }

        .t-footer-template
        {
            padding:0;
            margin:0;
            width:100%;
            height:30px;
            border:none 0 transparent;
        }

        .LocalHeaderText
        {
            font-weight:bold;
        }    
        .LocalHeaderSub
        {
            text-align:center;
            font-size:.80em;
        }    
        .LocalHeaderGroup
        {
            text-align:center;
            
        }    
        .LocalColumnCount
        {
            width:50%;
            text-align:right;
        }    
        .LocalColumnPercent
        {
            width:50%;
            text-align:right;
        }    
        .LocalColumnGroup
        {
            width:auto;
        }

        .LocalFooterCell
        {
            padding:0;
            margin:0;
            height:30px;
        }

        .LocalFooterDiv
        {
            padding:0;
            margin:0;
            width:100%;
            height:30px;
            border-top:solid 2px #E1E1E1;
            border-bottom:solid 2px #E1E1E1;
            border-right:solid 2px #FFFFFF;
            border-left:none 0 transparent;
            background-color: #F4F4F4;
            background: -moz-linear-gradient(top, #F4F4F4, #E1E1E1);
            background: -webkit-gradient(linear, left top, left bottom, from(#F4F4F4), to(#E1E1E1));
            filter: progid:DXImageTransform.Microsoft.gradient(enabled='true',startColorstr=#F4F4F4,endColorstr=#E1E1E1);
        }
    </style>
}
