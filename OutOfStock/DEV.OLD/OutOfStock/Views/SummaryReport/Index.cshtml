
@model IEnumerable<OutOfStock.Models.SummaryReportViewModel>
@{
    ViewBag.Title = "Summary Report";
    int groupColumnWidth = 225;
    Dictionary<OutOfStock.Models.SummaryReportViewModel.TeamEnum, OutOfStock.Models.SummaryReportViewModel.SummaryReportViewModelByTeam> byTeamAverage =
        ViewBag.byTeamAverage;
}


@*
@(Html.Telerik().ScriptRegistrar().OnDocumentReady(@<text>

  
    
    function DateRangeChanged () {
                                                        
        if (DateRangeSpec.restored()) {
            DateRangeSpec.restoreInvoked();
            return;
        }
        var startDate = $('#selectedStartDate').data('tDatePicker').value();
        var endDate = $('#selectedEndDate').data('tDatePicker').value();
        if (endDate < startDate) {
            new DateRangeSpec(startDate.defaultView(), endDate.defaultView()).restore();
            alert('End date cannot be less than Start Date'); 
        }
        else { 
            new DateRangeSpec(startDate.defaultView(), endDate.defaultView()).save();
            this.form.submit(); 
        }
                                                        
alert("!");                                                            
}
    

                                                        $('#selectedStartDate').first().change(function () {
        var dateRange = new DateRangeSpec($(this).val(), $('#selectedEndDate').val());
        if (dateRange.getEndDate() < dateRange.getStartDate()) {
            dateRange.restore();
            alert('End date cannot be less than Start Date'); 
        }
        else { 
            dataRange.save();
            this.form.submit(); 
        }
    });


    $('#selectedEndDate').first().change(function () {
        var dateRange = new DateRangeSpec($('#selectedStartDate').val(), $(this).val());
        if (dateRange.getEndDate() < dateRange.getStartDate()) {
            dateRange.restore();
            alert('End date cannot be less than Start Date'); 
        }
        else {
            dateRange.save(); 
            this.form.submit(); 
        }
                                                        });


        $('#ddlRegions').first().change(function(){
        var dateRange = new DateRangeSpec($('#selectedStartDate').val(), $('#selectedEndDate').val());
        if (dateRange.getEndDate() < dateRange.getStartDate()) {
            dateRange.restore();
            alert('End date cannot be less than Start Date'); 
        }
        else { 
            dateRange.save();
            this.form.submit(); 
        }
    });
    
    $('#hideStoresNotReporting').first().change(function () {
        this.form.submit();
    });

    $('#ddlRegions').first().focus();
                                                    </text>))
*@


<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Create", "SummaryReport", FormMethod.Post, new { id = "formSubmit" }))
{ 
    @Html.ValidationSummary(true)
    <input type="hidden" id="selectedRegion" name="selectedRegion" value="@ViewBag.selectedRegion" />
    @Html.Hidden("clientTodayDate", DateTime.Now.ToShortDateString())
    
    <table border="0" cellpadding="0" cellspacing="0" class="CleanTable">
        <tr class="CleanTable">
            <td class="CleanTable" style="font-size:1.25em;">
                <table border="0" cellpadding="0" cellspacing="0" class="CleanTable">
                    <tr class="CleanTable">
                        @if (ViewBag.regions != null && ViewBag.isRegionSelectable)
                        {
                            <td class="CleanTable" style="padding:0px 0px 0px 0px;">
                                @Html.DropDownList(
                                    "regionListSelected",
                                    new SelectList(ViewBag.regions as System.Collections.IEnumerable, "REGION_ABBR", "REGION_ABBR", ViewBag.selectedRegion),
                                    "Select a Region", new { id = "ddlRegions", style = "width:200px;" })
                            </td>
                            <td class="CleanTable" style="border:0px none transparent;display:none;">
                                and <input type="checkbox" id="hideStoresNotReporting" name="hideStoresNotReporting" @(ViewBag.hideStoresNotReporting ? "checked=\"checked\"" : string.Empty)/>
                                hide stores not reporting
                            </td>
                        }
                        <td class="CleanTable" align="left" valign="top" style="padding:4px 0px 0px 8px;">From</td>
                        <td class="CleanTable" align="left" valign="top" style="padding:4px 0px 0px 8px;">
                            <!-- .ButtonTitle("Select start date")
                                .ShowButton(true)
                                .Format("MM/dd/yyyy")
                                -->
                            @(Html.Telerik().DateTimePicker()
                                  .Effects(e => e.Slide())
                                  .Name("selectedStartDate")
                                  .Min(DateTime.Now.AddYears(-1))
                                  .Max(DateTime.Now)
                                  .Value(DateTime.Now.AddDays(-7))
                                  .HtmlAttributes(new { id = "DatePicker_wrapper_start" })
                            )


                        </td>
                        <td class="CleanTable" align="left" valign="top" style="padding:4px 0px 0px 8px;">to</td>
                        <td class="CleanTable" align="left" valign="top" style="padding:4px 0px 0px 8px;">
                            @(Html.Telerik().DateTimePicker()
                                .Effects(e => e.Slide())
                                .Name("selectedEndDate")
                                .Min(DateTime.Now.AddYears(-1))
                                .Max(DateTime.Now)
                                .Value(DateTime.Now)
                                .HtmlAttributes(new { id = "DatePicker_wrapper_end" })
                                )
                            
                        </td>   
                        <td class="CleanTable" align="left" valign="top" style="padding:4px 0px 0px 8px;">
                            <button id="btnGenerateSummaryReport" onclick="RunReport(); return false;">Run Report</button>
                        </td>
                    </tr>

                </table>
            </td>
        </tr>
        <tr class="CleanTable"><td align="left" valign="top" class="CleanTable" style="font-weight:bold;color:#000000;padding:12px 0px 0px 0px;">
          <span id="infomessage">@ViewBag.Message</span>  
        </td></tr>
    </table>

    <div style="padding-top:16px;">
        <table class="CleanTable"><tr class="CleanTable"><td class="CleanTable">
                                                             @{
                                                                 int[] checkedRecords = (int[])ViewData["checkedRecords"];    
                                                                 @(Html.Telerik().Grid(Model)
                                                                       .Name("Grid")
                                                                       .HtmlAttributes(new { CssClassPropertyAttribute = "CleanTable" })
                                                                       .TableHtmlAttributes(new { CssClassPropertyAttribute = "CleanTable" })
                                                                       .DataKeys(k => k.Add(o => o.storeName))
                                                                       .DataBinding(dataBinding => dataBinding.Server()
                                                                                                              .Select("Index", "SummaryReport"))
                                                                       .Columns(columns =>
                                                                           {
                                                                               columns.Bound(o => o.storeName).Width(300)
                                                                                      .HeaderTemplate(@<div class="LocalHeaderText">Store Name</div>)
                                                                                      .HeaderHtmlAttributes(new { style = "text-align:center;vertical-align:top;padding-top:8px;" })
                                                                                      .FooterTemplate(@<div class="LocalFooterDiv" style="padding-left:6px;"><b><i>&nbsp;</i></b></div>)
                                                                                      .FooterHtmlAttributes(new { CssClassPropertyAttribute = "CleanTable LocalFooterCell", style = "padding:0;margin:0;" });
                                                                               columns.Template(@<div>
                                                                                                     <table border="0" cellpadding="0" cellspacing="0" class="CleanTable" style="width:100%;">
                                                                                                         <tr class="CleanTable">
                                                                                                             <td class="CleanTable LocalColumnCount">@(item.storeByTeam[OutOfStock.Models.SummaryReportViewModel.TeamEnum.Grocery].storeOOSCount)</td>
                                                                                                             <td class="CleanTable LocalColumnPercent">@(string.Format(ViewBag.percentFormat, item.storeByTeam[OutOfStock.Models.SummaryReportViewModel.TeamEnum.Grocery].storeUPCPercentage))</td>
                                                                                                         </tr>
                                                                                                     </table>
                                                                                                 </div>)
                                                                                      .Width(groupColumnWidth)
                                                                                      .HeaderTemplate(@<div>
                                                                                                           <table class="CleanTable" style="width:100%">
                                                                                                               <tr class="CleanTable">
                                                                                                                   <td colspan="2" class="CleanTable LocalHeaderGroup LocalColumnGroup LocalHeaderText">Grocery</td>
                                                                                                               </tr>
                                                                                                               <tr class="CleanTable">
                                                                                                                   <td class="CleanTable LocalHeaderSub LocalColumnCount">OOS Count</td>
                                                                                                                   <td class="CleanTable LocalHeaderSub LocalColumnPercent">OOS Percentage</td>
                                                                                                               </tr>
                                                                                                           </table>
                                                                                                       </div>)
                                                                                      .FooterTemplate(@<div class="LocalFooterDiv" style="padding:0;margin:0;"><table
                                                                                                                                                                   border="0" cellpadding="0" cellspacing="0" class="CleanTable" style="width:100%;padding:0;margin:0;">
                                                                                                                                                                   <tr class="CleanTable">
                                                                                                                                                                       <td class="CleanTable LocalColumnCount" style="border-top:none;background-color:transparent;">
                                                                                                                                                                           <span><img id="info_GroceryItemCount" onmouseout="clearToolTip();" onmouseover="displayToolTip(this,'<strong>Average Grocery Scans</strong><br/># of grocery items scanned / # of stores that scanned at least 1 grocery item', 4000  , 75, 300)" src="/Content/images/icons/question-mark.png" class="infoQuestionMark" /></span>
                                                                                                                                                                           @(byTeamAverage[OutOfStock.Models.SummaryReportViewModel.TeamEnum.Grocery].storeOOSCount)
                                                                                                                                                                       </td>
                                                                                                                                                                       <td class="CleanTable LocalColumnPercent" style="border-top:none;background-color:transparent;">
                                                                                                                                                                           <span><img id="info_GroceryPercentage" onmouseout="clearToolTip();" onmouseover="displayToolTip(this,'<strong>Average Grocery Percentage</strong><br/># of grocery items scanned / total items for department.  Excludes stores that did not scan.', 4000  , 75, 300)" src="/Content/images/icons/question-mark.png" class="infoQuestionMark" /></span>
                                                                                                                                                                           @(string.Format(ViewBag.percentFormat, byTeamAverage[OutOfStock.Models.SummaryReportViewModel.TeamEnum.Grocery].storeUPCPercentage))
                                                                                                                                                                       </td>
                                                                                                                                                                   </tr>
                                                                                                                                                               </table></div>)
                                                                                      .FooterHtmlAttributes(new { CssClassPropertyAttribute = "CleanTable LocalFooterCell", style = "padding:0;margin:0;" });
                                                                               columns.Template(@<div>
                                                                                                     <table border="0" cellpadding="0" cellspacing="0" class="CleanTable" style="width:100%;">
                                                                                                         <tr class="CleanTable">
                                                                                                             <td class="CleanTable LocalColumnCount">@(item.storeByTeam[OutOfStock.Models.SummaryReportViewModel.TeamEnum.Whole_Body].storeOOSCount)</td>
                                                                                                             <td class="CleanTable LocalColumnPercent">@(string.Format(ViewBag.percentFormat, item.storeByTeam[OutOfStock.Models.SummaryReportViewModel.TeamEnum.Whole_Body].storeUPCPercentage))</td>
                                                                                                         </tr>
                                                                                                     </table>
                                                                                                 </div>)
                                                                                      .Width(groupColumnWidth)
                                                                                      .HeaderTemplate(@<div>
                                                                                                           <table border="0" cellpadding="0" cellspacing="0" class="CleanTable" style="width:100%;">
                                                                                                               <tr class="CleanTable">
                                                                                                                   <td colspan="2" class="CleanTable LocalHeaderGroup LocalColumnGroup LocalHeaderText">Whole Body</td>
                                                                                                               </tr>
                                                                                                               <tr class="CleanTable">
                                                                                                                   <td class="CleanTable LocalHeaderSub LocalColumnCount">OOS Count</td>
                                                                                                                   <td class="CleanTable LocalHeaderSub LocalColumnPercent">OOS Percentage</td>
                                                                                                               </tr>
                                                                                                           </table>
                                                                                                       </div>)
                                                                                      .FooterTemplate(@<div class="LocalFooterDiv" style="padding:0;margin:0;"><table 
                                                                                                                                                                   border="0" cellpadding="0" cellspacing="0" class="CleanTable" style="width:100%;padding:0;margin:0;">
                                                                                                                                                                   <tr class="CleanTable">
                                                                                                                                                                       <td class="CleanTable LocalColumnCount" style="border-top:none;background-color:transparent;">
                                                                                                                                                                           <span><img id="info_WholeBodyItemCount" onmouseout="clearToolTip();" onmouseover="displayToolTip(this,'<strong>Average Whole Body Scans</strong><br/># of whole body items scanned / # of stores that scanned at least 1 whole body item', 4000  , 75, 300)" src="/Content/images/icons/question-mark.png" class="infoQuestionMark" /></span>
                                                                                                                                                                           <span>@(byTeamAverage[OutOfStock.Models.SummaryReportViewModel.TeamEnum.Whole_Body].storeOOSCount)</span>
                                                                                                                                                                       </td>
                                                                                                                                                                       <td class="CleanTable LocalColumnPercent" style="border-top:none;background-color:transparent;">
                                                                                                                                                                           <span><img id="info_WholeBodyPercentage"  onmouseout="clearToolTip();" onmouseover="displayToolTip(this,'<strong>Average Whole Body Percentage</strong><br/># of whole body items scanned / total items for department.  Excludes stores that did not scan.', 4000  , 75, 300)" src="/Content/images/icons/question-mark.png" class="infoQuestionMark" /></span>
                                                                                                                                                                           <span>@(string.Format(ViewBag.percentFormat, byTeamAverage[OutOfStock.Models.SummaryReportViewModel.TeamEnum.Whole_Body].storeUPCPercentage))</span>
                                                                                                                                                                       </td>
                                                                                                                                                                   </tr>
                                                                                                                                                               </table></div>)
                                                                                      .FooterHtmlAttributes(new { CssClassPropertyAttribute = "CleanTable LocalFooterCell", style = "padding:0;margin:0;" });
                                                                               columns.Bound(o => o.storeTimesScanned).Width(150)
                                                                                      .HtmlAttributes(new { style = "text-align:right;" })
                                                                                      .HeaderTemplate(@<div class="LocalHeaderText">Times Scanned</div>)
                                                                                      .HeaderHtmlAttributes(new { style = "vertical-align:top;padding-top:8px;text-align:center;" })
                                                                                      .FooterTemplate(@<div class="LocalFooterDiv">
                                                                                                           <span><img id="info_TimesScanned" onmouseout="clearToolTip(); return false;" onmouseover="displayToolTip(this,'<strong>Total Scan Sessions</strong><br/># of scan sessions conducted during date range. ', 4000, 75, 300); return false;" src="/Content/images/icons/question-mark.png" class="infoQuestionMark" /></span>
                                                                                                           <span style="padding-right:6px;">@((int)ViewBag.NoTimesScanned)</span>
                                                                                                       </div>)
                                                                                      .FooterHtmlAttributes(new { CssClassPropertyAttribute = "CleanTable LocalFooterCell", style = "text-align:right;padding:0;margin:0;" });
                                                                           })
                                                                       )
                                                             }
                                                         </td></tr></table>
    </div>
    <div id="panelToolTip" style="border: solid #ccc 1px; background-color: #eee; position: absolute; -webkit-box-shadow: 3px 3px 4px #8e8e8e; box-shadow: 3px 3px 4px #8e8e8e; padding: 15px; display: none;">
        
        alskjf
    </div>
}

@section HeadContent
{
    <style type="text/css">
        /* hide Telerik Grid recycle */
        .t-grid .t-status
        {
            display: none;
        }

        .t-grid
        {
            border: none 0px transparent;
        }

        .t-grid-header .t-header
        {
            border-top: solid 2px #E1E1E1;
            border-bottom: solid 2px #E1E1E1;
            border-right: solid 2px #FFFFFF;
            border-left: none 0px transparent;
            background-color: #F4F4F4;
            background: -moz-linear-gradient(top, #F4F4F4, #E1E1E1);
            background: -webkit-gradient(linear, left top, left bottom, from(#F4F4F4), to(#E1E1E1));
            filter: progid:DXImageTransform.Microsoft.gradient(enabled='true', startColorstr=#F4F4F4, endColorstr=#E1E1E1);
        }

        .t-footer-template
        {
            padding: 0;
            margin: 0;
            width: 100%;
            height: 30px;
            border: none 0px transparent;
        }

        .LocalHeaderText
        {
            font-weight: bold;
        }
        .LocalHeaderSub
        {
            text-align: center;
            font-size: .80em;
        }
        .LocalHeaderGroup
        {
            text-align: center;
            width: @(groupColumnWidth)px;
        }
        .LocalColumnCount
        {
            width: 50%;
            text-align: right;
        }
        .LocalColumnPercent
        {
            width: 50%;
            text-align: right;
        }
        .LocalColumnGroup
        {
            width: auto;
        }

        .LocalFooterCell
        {
            padding: 0;
            margin: 0;
            height: 30px;
        }

        .LocalFooterDiv
        {
            padding: 0;
            margin: 0;
            width: 100%;
            height: 30px;
            border-top: solid 2px #E1E1E1;
            border-bottom: solid 2px #E1E1E1;
            border-right: solid 2px #FFFFFF;
            border-left: none 0px transparent;
            background-color: #F4F4F4;
            background: -moz-linear-gradient(top, #F4F4F4, #E1E1E1);
            background: -webkit-gradient(linear, left top, left bottom, from(#F4F4F4), to(#E1E1E1));
            filter: progid:DXImageTransform.Microsoft.gradient(enabled='true', startColorstr=#F4F4F4, endColorstr=#E1E1E1);
        }

        .infoQuestionMark {
            width: 12px;
            height: 12px;
            border: solid black 0px;
            padding-left: 2px;
            padding-right: 2px;
        }
    </style>
    <script>

    Date.prototype.defaultView = function() {
        var dd = this.getDate();
        if (dd < 10) dd = '0' + dd;
        var mm = this.getMonth() + 1;
        if (mm < 10) mm = '0' + mm;
        var yyyy = this.getFullYear();
        return String(mm + "\/" + dd + "\/" + yyyy);
    };

    DateRangeSpec = function(startDate, endDate) {
        this.startDate = startDate;
        this.endDate = endDate;
    };


    DateRangeSpec.restoreState = false;

    DateRangeSpec.restored = function() {
        return DateRangeSpec.restoreState;
    };
    DateRangeSpec.restoreInvoked = function() {
        DateRangeSpec.restoreState = false;
    };

    DateRangeSpec.prototype = {
        getStartDate: function() {
            var startArrDate = this.startDate.split("/");
            var startUseDate = new Date(startArrDate[2], startArrDate[0] - 1, startArrDate[1]);
            return startUseDate;
        },

        getEndDate: function() {
            var endArrDate = this.endDate.split("/");
            var endUseDate = new Date(endArrDate[2], endArrDate[0] - 1, endArrDate[1]);
            return endUseDate;
        },

        save: function() {
            $('#selectedStartDate').data('oldStartDate', this.startDate);
            $('#selectedEndDate').data('oldEndDate', this.endDate);
            DateRangeSpec.restoreState = false;
        },

        restore: function() {
            $('#selectedStartDate').val($('#selectedStartDate').data('oldStartDate'));
            $('#selectedEndDate').val($('#selectedEndDate').data('oldEndDate'));
            DateRangeSpec.restoreState = true;
        }
    };

    new DateRangeSpec($('#selectedStartDate').val(), $('#selectedEndDate').val()).save();


    $(function() {
        $('#ddlRegions').first().change(function () {

            RunReport();
        });

    });

    RunReport = function () {
        var startdate = $('#selectedStartDate');
        var enddate = $('#selectedEndDate');
        var dateRange = new DateRangeSpec(startdate.val(), enddate.val());
        if (dateRange.getEndDate() < dateRange.getStartDate()) {
            //dateRange.restore();
            enddate.focus();
            $("#infomessage").html("<font color='red'>FROM date must come before the TO date.</font>");
        } else {
            dateRange.save();

            $("#formSubmit").submit();
        }
    };


    displayToolTip = function(anchor, message, duration, h, w) {
        // get the div
        var tooltip = $("#panelToolTip");

        // size the div
        tooltip.css({ height: h });
        tooltip.css({ width: w });

        // center the div above the element
        var left = $(anchor).offset().left - (w / 2);
        var top = $(anchor).offset().top - (h + 60);

        tooltip.css({ 'top': top, 'left': left });

        // apply message html
        tooltip.html(message);
        // display
        tooltip.fadeIn("slow");
    };

    function clearToolTip() {
        $("#panelToolTip").fadeOut("slow");
    }

    </script>
    
}
