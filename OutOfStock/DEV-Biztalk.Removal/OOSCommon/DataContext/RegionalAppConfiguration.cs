//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace OOSCommon.DataContext
{
    public partial class RegionalAppConfiguration
    {
        #region Primitive Properties
    
        public virtual int RegionId
        {
            get { return _regionId; }
            set
            {
                if (_regionId != value)
                {
                    if (REGION != null && REGION.ID != value)
                    {
                        REGION = null;
                    }
                    _regionId = value;
                }
            }
        }
        private int _regionId;
    
        public virtual Nullable<bool> UseBiztalk
        {
            get;
            set;
        }
    
        public virtual string BiztalkServiceURI
        {
            get;
            set;
        }
    
        public virtual string OOSServiceURI
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual REGION REGION
        {
            get { return _rEGION; }
            set
            {
                if (!ReferenceEquals(_rEGION, value))
                {
                    var previousValue = _rEGION;
                    _rEGION = value;
                    FixupREGION(previousValue);
                }
            }
        }
        private REGION _rEGION;

        #endregion

        #region Association Fixup
    
        private void FixupREGION(REGION previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.RegionalAppConfiguration, this))
            {
                previousValue.RegionalAppConfiguration = null;
            }
    
            if (REGION != null)
            {
                REGION.RegionalAppConfiguration = this;
                if (RegionId != REGION.ID)
                {
                    RegionId = REGION.ID;
                }
            }
        }

        #endregion

    }
}
