<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <!--****************************************************************
 Config Fil DVO_Orders_bulk_load.cfg
      Author: Ron Savage
        Dat 03/23/2010

 Description:
 Splits all order files into one temp file for header records, and another
 for the detail records. Then it loads them into global temp tables and
 calls a stored proc to process them.

 Modification History:
 Date       Init Comment
 01/30/2017 RS   Modified condtions to pull RM and TS region in the same queries.
 01/26/2017 RS   Added condition to exclude deleted items in the detail query.
 01/24/2017 RS   Removed timestamps from Header.txt and Detail.txt to avoid mismatch.
                 Also fixed null pos_dept error.
 12/07/2016 RS   Inserted steps 1 & 2 to query DVO db and build order export file directly.
                 Command line argument Env needs to be changed from the GUID to the shortname (TST, QA or PRD).
 04/30/2010 RS   Added conditions to ignore deleted parameters in the
                 arguments query.
 04/27/2010 RS   Updated to use normal order input folder.
 04/26/2010 RS   Modified to accept parameters from IRMA AppConfig through a pivot query
 04/09/2010 RS   Fixed log file path.
 04/08/2010 RS   Updated to use {Reg} parameter from the command line and to
                 use the irmadevfile folder path model.
 03/23/2010 RS   Created.
******************************************************************-->

  <!--********************************************************************
 Global Key Definitions
********************************************************************-->
  <config key="sqlTimeout"                 value="3000"/>
  <config key="emailSMTPServer"            value="smtp.wholefoods.com"/>
  <config key="LogFile"                    value="/IRMA/logs/{Reg}/DVO_Orders_bulk_load_{yyyy}{mm}{dd}.log"/>
  <config key="ParameterFile"              value="conf/{Reg}_DVO_Orders_bulk_load.prm"/>
  <config key="App"                        value="DM - DVO IMPORT JOB"/>

  <!--**** These will be provided on the command line - uncomment if needed for testing  ***
  <config key="Reg"                        value="MA"/>
  <config key="IRMAServer"                 value="idd-ma"/>
********************************************************************-->

  <config key="IRMAuser"                   value="IRMASchedJobs"/>
  <config key="IRMApass"                   value="FILE:conn/{Reg}_IRMASchedJobs_pass.txtx"/>
  <config key="AllowedStores"              value="{Allowed_Stores}"/>
  <config key="ExcludedVendors"            value="{Excluded_Vendors}"/>
  <config key="FileDate"                   value="{yyyy}{mm}{dd}{hh24}{mi}"/>
  <config key="ExportFile"                 value="OrderExport_{FileDate}.txt"/>
  <config key="HeaderFile"                 value="Header.txt"/>
  <config key="DetailFile"                 value="Detail.txt"/>

  <config key="maxBCPErrors"               value="10"/>

  <config key="pipe"                       value="|"/>
  <config key="filesplit"                 value="SYSTEM, \Program Files (x86)\DataMonkey 2\FileSplitter.exe, E:\Data\dvo_orders\{Reg}\Processing\*  ^H E:\Data\dvo_orders\{Reg}\Processing\temp\DVO_headers.txt  ^D  E:\Data\dvo_orders\{Reg}\Processing\temp\DVO_details.txt /appendname {q}|{q}, , , "/>
  <config key="filedelete"                value="SYSTEM, cmd.exe, /c del /q {q}E:\Data\dvo_orders\{Reg}\Processing\temp\DVO*.txt{q} E:\Data\dvo_orders\{Reg}\Processing\*, , , "/>
  <config key="movetoproc"                value="SYSTEM, \Program Files (x86)\DataMonkey 2\FilePurge.exe, E:\Data\dvo_orders\{Reg}\* {gt}0B E:\Data\dvo_orders\{Reg}\Processing , , , "/>
  <config key="movetobackup"              value="SYSTEM, \Program Files (x86)\DataMonkey 2\FilePurge.exe, E:\Data\dvo_orders\{Reg}\Processing\* {gt}2B E:\Data\dvo_orders\{Reg}\backup , , , "/>
  <config key="IRMA_Insert"               value="SYSTEM, bcp.exe,##{TGT_NAME} in {q}E:\Data\dvo_orders\{Reg}\Processing\temp\{TGT_NAME}{TGT_EXT}{q} -S {IRMAServer} -U {IRMAuser} -P {IRMApass} -t {q}|{q} -m {maxBCPErrors} -e {q}E:\Data\dvo_orders\{Reg}\Processing\temp\{TGT_NAME}.err{q} -r= \n -c"/>
  <config key="header_Insert"             value="SYSTEM, bcp.exe,##DVO_Headers in {q}E:\Data\dvo_orders\{Reg}\Processing\temp\DVO_Headers.txt{q} -S {IRMAServer} -U {IRMAuser} -P {IRMApass} -t {q}|{q} -m {maxBCPErrors} -e {q}E:\Data\dvo_orders\{Reg}\Processing\temp\DVO_Headers.err{q} -r= \n -c"/>
  <config key="detail_Insert"             value="SYSTEM, bcp.exe,##DVO_Details in {q}E:\Data\dvo_orders\{Reg}\Processing\temp\DVO_Details.txt{q} -S {IRMAServer} -U {IRMAuser} -P {IRMApass} -t {q}|{q} -m {maxBCPErrors} -e {q}E:\Data\dvo_orders\{Reg}\Processing\temp\DVO_Details.err{q} -r= \n -c"/>
  <config key="combine"                   value="SYSTEM, cmd.exe, /c copy data\{Reg}{HeaderFile} + data\{Reg}{DetailFile} E:\Data\dvo_orders\{Reg}\{Reg}{ExportFile}, \Program Files (x86)\DataMonkey 2\, , "/>
  <config key="delfiles"                  value="SYSTEM, cmd.exe, /c del data\{Reg}{HeaderFile} data\{Reg}{DetailFile} ,\Program Files (x86)\DataMonkey 2\, , "/>
  <config key="setprocessing"             value="DB, dvo, QUERY, set_processing, "/>
  <config key="delprocessed"              value="DB, dvo, QUERY, del_processed, "/>


  <!-- Database Connection string keys -->
  <config key="IRMA"                       value="FILE:conn\{Reg}_IRMA_Connection.txt"/>
  <config key="dvo"                        value="FILE:conn\DVO_{Env}_connection.txtx"/>

  <!-- PROC Command keys -->
  <config key="ProcessOrdersCmd"           value="DB, IRMA, QUERY, ProcessOrders, fail|deadlock|error|locked"/>
  <config key="arg-delim"                  value="~"/>

  <config key="ProcessOrders"              value="exec DVO_ProcessBulkOrders '{AllowedStores}', '{ExcludedVendors}', 1"/>

  <!-- Connections to process -->
  <config key="maxEntries"      value="3"/>

  <config key="source_1"        value="DB, dvo, QUERY, header_query, pipe, setprocessing, , "/>
  <config key="target_1"        value="FILE, REPLACE, data\{Reg}{HeaderFile}, pipe, , , , , , FALSE"/>

  <config key="source_2"        value="DB, dvo, QUERY, detail_query, pipe, , , 1"/>
  <config key="target_2"        value="FILE, REPLACE, data\{Reg}{DetailFile}, pipe, , combine;delfiles;delprocessed;movetoproc;filesplit;movetobackup, , , , FALSE"/>

  <!-- 
  <config key="source_3"        value="FILE, data\dummy.txt, , , , , , , 2"/>
  <config key="target_3"        value="FILE, REPLACE, E:\Data\dvo_orders\{Reg}\Processing\temp\DVO_headers.txt, , , mk_header_tab;IRMA_Insert, , "/>
  <config key="notify_3"        value="dvo_error"/>
  
  <config key="source_4"        value="FILE, data\dummy.txt, , , , , , , 2"/>
  <config key="target_4"        value="FILE, REPLACE, E:\Data\dvo_orders\{Reg}\Processing\temp\DVO_details.txt, , ,mk_detail_tab;IRMA_Insert;filedelete, , "/>
  <config key="notify_4"        value="dvo_error"/>
  -->

  <config key="source_3"        value="FILE, data\DVO_headers.dat, , mk_header_tab;Header_Insert;mk_detail_tab;detail_Insert;filedelete;ProcessOrdersCmd;dp_header_tab;dp_detail_tab, , , , , 2"/>
  <config key="arguments_3"     value="DB, IRMA, QUERY, getArgs, arg-delim, , "/>
  <config key="notify_3"        value="dvo_error"/>

  <config key="mk_header_tab"   value="DB, IRMA, QUERY, make_header_table, "/>
  <config key="mk_detail_tab"   value="DB, IRMA, QUERY, make_detail_table, "/>

  <config key="dp_header_tab"   value="DB, IRMA, QUERY, drop_header_table, "/>
  <config key="dp_detail_tab"   value="DB, IRMA, QUERY, drop_detail_table, "/>

  <config key="dvo_error"       value="dvo_error_msg, DVO bulk order loading error!, irma.dev@wholefoods.com, {DVO_Error_Email}"/>

  <config key="dvo_success"     value="dvo_success_msg, DVO bulk order loading success!, irma.dev@wholefoods.com, {DVO_Success_Email}"/>

  <config key="dvo_error_msg"   value="uh oh.

Make header -
{entry_1_make_header_table}

Made detail -
{entry_2_make_detail_table}

Step 1 -
{entry_1_log_buffer}

Step 2 -
{entry_2_log_buffer}

Step 3 -
{entry_3_log_buffer}
   "/>

  <config key="dvo_success_msg"  value="Yay.

Make header -
{entry_1_make_header_table}

Made detail -
{entry_2_make_detail_table}

Step 1 -
{entry_1_log_buffer}

Step 2 -
{entry_2_log_buffer}

Step 3 -
{entry_3_log_buffer}
   "/>

  <config key="make_header_table"  value="
         --*************************************************************************************
         -- Re-create the global temp tables to hold the data
         --*************************************************************************************
         if exists (select * from tempdb.dbo.sysobjects where  name = '##DVO_Headers' ) drop table ##DVO_Headers ;

         create table ##DVO_Headers
            (
            rectype            varchar(1),
            DvoOrderId         varchar(10),
            BuyerId            varchar(10),
            PSVendorId         varchar(10),
            TotalCost          varchar(12),
            POEntryDate        varchar(20),
            Region             varchar(2),
            Note               varchar(2050),
            BusinessUnitId     varchar(10),
            CustomerId         varchar(20),
            TotalCases         varchar(10),
            TotalUnits         varchar(10),
            TransDate          varchar(30),
            SubTeam            varchar(4),
            BuyerName          varchar(200),
            POS_SubTeam        varchar(5),
            PS_SubTeam         varchar(4),
            IRMAPONo           varchar(10),
            ExpectedDate       varchar(30),
            IsCreditOrder      varchar(10),
	         ReasonCodeDetailId varchar(10),
  	         adjustCostValue    varchar(10),
  	         adjustCostMethod   varchar(1),
            PDXOrderNumber     varchar(10),  
            FileName           varchar(300)
            );
    "/>

  <config key="drop_header_table"  value="
         --*************************************************************************************
         -- Re-create the global temp tables to hold the data
         --*************************************************************************************
         if exists (select * from tempdb.dbo.sysobjects where  name = '##DVO_Headers' ) drop table ##DVO_Headers ;
    "/>

  <config key="make_detail_table"  value="
         --*************************************************************************************
         -- Create temp tables to hold the data
         --*************************************************************************************
         if exists (select * from tempdb.dbo.sysobjects where  name = '##DVO_Details' ) drop table ##DVO_Details ;

         create table ##DVO_Details
            (
            rectype               varchar(1),
            DvoOrderId            varchar(10),
            Note                  varchar(2050),
            sku                   varchar(17),
            upc                   varchar(17),
            vin                   varchar(17),
            casepack              varchar(10),
            buyunitordered        varchar(10),
            buyunitcost           varchar(10),
            packsize              varchar(10),
            uom                   varchar(10),
            description           varchar(255),
            weight                varchar(10),
            posdept               varchar(5),
            brand                 varchar(25),
            iscase                varchar(5),
            eaches                varchar(10),
            orderUOM              varchar(10),
	         ReasonCodeDetailId    varchar(10),
  	         adjustCostValue       varchar(10),
  	         adjustCostMethod      varchar(1),
            irmaRegCostHistory    varchar(10),
            lineItemCost          varchar(10),
            CreditReasonCodeIRMAId varchar(10),
            CreditLotNo           varchar(50), 
            CreditExpireDate      varchar(30),
            CreditNotes           varchar(255),
            FileName              varchar(300)
            );
    "/>

  <config key="drop_detail_table"  value="
         --*************************************************************************************
         -- Create temp tables to hold the data
         --*************************************************************************************
         if exists (select * from tempdb.dbo.sysobjects where  name = '##DVO_Details' ) drop table ##DVO_Details ;
    "/>

  <!--
*****************************************************************************************************
 Query to get arguments
*****************************************************************************************************
-->
  <config key="getArgs"            value="
	declare @mySQL varchar(MAX);

      SET @mySQL = '
         SELECT
            a.Name          AppName,
            ace.ShortName	Environment,
            ack.Name        KeyName,
            acv.Value       KeyValue
         FROM
            AppConfigApp a

            INNER JOIN AppConfigEnv ace
                  ON (ace.EnvironmentId = a.EnvironmentId)

            INNER JOIN AppConfigValue acv
                  ON (acv.ApplicationId = a.ApplicationId)

            INNER JOIN AppConfigKey ack
                  ON (ack.KeyId = acv.KeyId)

         WHERE
            a.Name like ''{App}''
         AND
			ace.ShortName = ''{Env}''
		 AND
            acv.Deleted = 0
         AND 
            a.Deleted = 0
         AND
            ace.Deleted = 0
         AND 
            ack.Deleted = 0
         ';

      exec dbo.pivot_query @mySQL, 'AppName', 'KeyName', 'max(KeyValue)';
   "/>

  <config key="del_processed"  value="
      delete
         orderexportqueue
      where
         processing = 'true'
         and poid in (select
                        oe.poid
                     from
                        orderexportqueue oe

                        JOIN poheaders poh
                           on ( poh.id = oe.poid )

                        JOIN Regions r
                           on ( r.region_id = poh.regionid )
                     where
                        ( r.abbreviation = case '{Reg}' when 'UK' then 'EU' else '{Reg}' end
                          or r.abbreviation = case '{Reg}' when 'RM' then 'TS' else '{Reg}' end )
                        and oe.processing = 'true'
                     )
   "/>

  <config key="set_processing"  value="
      update
         (
         select
            oe.poid,
            oe.processing
         from
            orderexportqueue oe

            JOIN poheaders poh
               on ( poh.id = oe.poid )

            JOIN Regions r
               on ( r.region_id = poh.regionid )
         where
         ( r.abbreviation = case '{Reg}' when 'UK' then 'EU' else '{Reg}' end
           or r.abbreviation = case '{Reg}' when 'RM' then 'TS' else '{Reg}' end )
         ) dat
      set dat.processing = 'true'
   "/>

  <config key="header_query"  value="
      select
         'H' code,
         poh.id                       POID,
         poh.BUYERID,
         v.vendor_no                  PS_VENDORID,
         to_char(poh.TOTALCOST,'TM')  TOTALCOST,
         to_char(poh.POENTRYDATE,'yyyy-mm-dd HH24:mi:ss') POENTRYDATE,
         r.abbreviation               REGION,
         regexp_replace(poh.NOTE,'[^0-1a-zA-Z#{q}=+*)( !/?;:,.\\~-]','~',1,0) NOTE,
         poh.businessunit             BU,
         poh.customerid               CUSTID,
         poh.TOTALCASES,
         poh.TOTALUNITS,
         to_char(poh.transmission_date,'yyyy-mm-dd HH24:mi:ss')   TRANSDATE,
         poh.SUBTEAM,
         ul.username                  BUYERNAME,
         nvl(poh.pos_dept,0)          POSDEPT,
         poh.SUBTEAM                  PSSUBTEAM,
         poh.irma_po                  IRMAPO,
         to_char(poh.REQUIREDRECEIVEDATE,'yyyy-mm-dd') REQUIREDRECEIVEDATE,
         poh.ISCREDIT,
         poh.reasoncode               COSTADJREASONCODE,
         poh.adj_value                COSTADJVALUE,
         poh.adj_method               COSTADJMETHOD,
         poh.PDX_NO
      from
         orderexportqueue oe

         JOIN poheaders poh
            on ( poh.id = oe.poid )

         JOIN Vendors v
            on (v.vendorid = poh.vendorId )

         JOIN UserLogin ul
            on (ul.UserId = poh.BuyerId )

         JOIN Regions r
            on ( r.region_id = poh.regionid )
      where
         ( r.abbreviation = case '{Reg}' when 'UK' then 'EU' else '{Reg}' end
           or r.abbreviation = case '{Reg}' when 'RM' then 'TS' else '{Reg}' end )
         and oe.processing = 'true'
   "/>

  <config key="detail_query"  value="
      select
         'D' code,
         oe.POID,
         regexp_replace(pod.note,'[^0-1a-zA-Z#{q}=+*)( !/?;:,.\\~-]','~',1,0) NOTE,
         pod.SKU,
         pod.UPC,
         pod.VENDORITEMID,
         pod.CASEPACK,
         pod.BUYUNITORDERED,
         pod.BUYUNITCOST,
         ltrim(to_char(pod.PACKSIZE,'TM'))       packsize,
         pod.UOM,
         pod.description                         {q}DESC{q},
         pod.WEIGHT,
         pod.POS_DEPT                            POSDEPT,
         pod.BRAND,
         case pod.qty_type
            when 'CASE' then 'true'
            else 'false'
         end                                     ISCASE,
         pod.EACHES,
         pod.QTY_TYPE                            CASEUOM,
         pod.reasoncode                          COSTADJREASONCODE,
         pod.adj_value                           COSTADJVALUE,
         pod.adj_method                          COSTADJMETHOD,
         pod.IRMAREGCOST_HISTORY                 IRMAREGCOSTHISTORY,
         pod.LINE_ITEM_COST                      LINEITEMCOST,
         case poh.IsCredit
            when 'true' then decode(pod.credit_reason_id, 0, null, pod.credit_reason_id - 1000)
            else decode(pod.credit_reason_id, 0, null, pod.credit_reason_id)
         end                                     CREDITREASONCODEIRMAID,
         pod.lot_no                              CREDITLOTNO,
         to_char(pod.expire_date,'yyyy-mm-dd HH24:mi:ss') CREDITEXPIREDATE,
         regexp_replace(pod.notes,'[^0-1a-zA-Z#{q}=+*)( !/?;:,.\\~-]','~',1,0) CREDITNOTES
      from
         orderexportqueue oe

         JOIN podetail pod
            on ( pod.poheaderid = oe.poid )

         JOIN poheaders poh
            on ( poh.id = oe.poid )

         JOIN Regions r
            on ( r.region_id = poh.regionid )
      where
         ( r.abbreviation = case '{Reg}' when 'UK' then 'EU' else '{Reg}' end
           or r.abbreviation = case '{Reg}' when 'RM' then 'TS' else '{Reg}' end )
         and oe.processing = 'true'
         and pod.deleted is null
   "/>

</configuration>
