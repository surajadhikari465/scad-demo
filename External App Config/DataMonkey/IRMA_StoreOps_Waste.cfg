<?xml version="1.0" encoding="utf-8" ?>
<!--
**************************************************************************************
       File: IRMA_StoreOps_Orders.cfg
     Author: Faisal Ahmed
       Date: 10/16/2009
    Updated: 02/25/2010
    
Description:
This file contains key settings that drive the transfer of waste data from IRMA to StoreOps
**************************************************************************************
-->
<configuration>
	<config key="conTimeout"      value="108000"/>
	<config key="sqlTimeout"      value="108000"/>
	<config key="email"           value="faisal.ahmed@wholefoods.com"/>
	<config key="emailSMTPServer" value="smtp.wholefoods.com"/>
	<config key="LogFile"         value="/IRMA/logs_dev/{Reg}/IRMA_StoreOps_Waste_{yyyy}{MM}{dd}.log"/>
	<config key="ParameterFile"   value="conf_dev/{Reg}_IRMA_StoreOps_Waste.prm"/>

	<config key="pipe"      value="|"/>

	<!-- Database Connection string keys -->
	<config key="IRMA_Source"      value="FILE:conn/{Reg}_IRMA_Connection_dev.txt"/>
	<config key="StoreOps_Target"  value="FILE:conn/{Reg}_StoreOps_Connection_dev.txt"/>

	<!-- Connections to process -->
	<config key="maxEntries" value="1"/>
	<config key="source_1"  value="DB, IRMA_Source, QUERY, query1, pipe"/>
	<config key="target_1"  value="DB, StoreOps_Target, APPEND, WasteIRMALoad"/>

	<config key="query1" value="
     Select 
	tt.BusinessUnitID,
	tt.SubTeamNo,
	tt.Date,
	sum(iSpoilage)  as Spoilage,
	sum(iSampling)  as Sampling,
	sum(iFoodbank)  as Foodbank
     From
	(Select 
        ih.Insert_Date,
		s.BusinessUnit_ID as BusinessUnitID, 
		sst.PS_SubTeam_No as SubTeamNo, 
		convert(varchar, ih.DateStamp, 101) as Date, 
		case when iac.Abbreviation = 'SP' 
				then sum((ih.Quantity + ih.Weight) * ISNULL(dbo.fn_GetUnitCostForSpoilage(ih.Item_Key, ih.Store_No, ih.SubTeam_No, ih.DateStamp), 0)) else 0 end as iSpoilage,
		case when iac.Abbreviation = 'SM' 
				then sum((ih.Quantity + ih.Weight) * ISNULL(dbo.fn_GetUnitCostForSpoilage(ih.Item_Key, ih.Store_No, ih.SubTeam_No, ih.DateStamp), 0)) else 0 end as iSampling,
		case when iac.Abbreviation = 'FB' 
				then sum((ih.Quantity + ih.Weight) * ISNULL(dbo.fn_GetUnitCostForSpoilage(ih.Item_Key, ih.Store_No, ih.SubTeam_No, ih.DateStamp), 0)) else 0 end as iFoodbank
	from ItemHistory ih (nolock)
	inner join Store s (nolock)
		on s.Store_No = ih.Store_No 
	inner join StoreSubteam sst (nolock)
		on ih.SubTeam_No = sst.SubTeam_No and ih.Store_No = sst.Store_No
	inner join SubTeam st (nolock)
		on st.SubTeam_No = ih.SubTeam_No
	inner join InventoryAdjustmentCode iac (nolock) 
		on iac.InventoryAdjustmentCode_ID = ih.InventoryAdjustmentCode_ID 
	inner join 
		(Select distinct
			s.BusinessUnit_ID as BusinessUnitID, 
			sst.PS_SubTeam_No as SubTeamNo, 
			convert(varchar, ihh.DateStamp, 101) as Date
		from ItemHistory ihh (nolock)
		inner join Store s (nolock)
			on s.Store_No = ihh.Store_No 
		inner join StoreSubteam sst (nolock) 
			on ihh.SubTeam_No = sst.SubTeam_No 
				and ihh.Store_No = sst.Store_No
		inner join SubTeam st (nolock)
			on st.SubTeam_No = ihh.SubTeam_No
		where ihh.Adjustment_ID = 1 --iac.Abbreviation in ( 'SP', 'SM', 'FB') 
			and sst.PS_SubTeam_No is not null 
			and st.SubTeamType_ID in (1,3) 
			and ihh.Insert_Date > convert(datetime, '{LAST_SQL_START}')
		) temp 
		on temp.BusinessUnitID = s.BusinessUnit_ID
			and temp.SubTeamNo = sst.PS_SubTeam_No and temp.Date = convert(varchar, ih.DateStamp, 101) 
	group by 
        ih.Insert_Date,
		sst.PS_SubTeam_No, 
		s.BusinessUnit_ID, 
		iac.Abbreviation, 
		convert(varchar, ih.DateStamp, 101)
	) as tt
     group by tt.BusinessUnitID, tt.SubTeamNo, tt.Date 
     order by tt.Date"/>


</configuration>