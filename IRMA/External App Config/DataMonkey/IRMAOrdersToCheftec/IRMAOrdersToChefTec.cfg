<?xml version="1.0" encoding="utf-8" ?>
<configuration>
<!--****************************************************************
 Config File: IRMAOrdersToChefTec.cfg
      Author: M. Zhao
        Date: 07/26/2011

 Description: 
 This job extracts IRMA POs originated from Store Order Guide and writes
 them to a delimited text file. The file will then be FTPed to the ChefTec 
 server for a ChefTec import job to pick up and load into ChefTec. At the 
 end of the FTP, the extracted IRMA POs' SentDate on the OrderHeader table
 will be updated to the job run date so that the processed IRMA POs will NOT
 be sent over to ChefTec again.

 Modification History: 
 Date	Init	Comment
 08/11/2011 DM	Created.
 10/24/2011	CV	Added IRMA_Orders\ to ftpDir 
 02/10/2012	CV	Added OrderUsingCasePackMultiplier IRMA app config parameter to support regions that
				don't embed units in the item description 
 02/27/2013 CV	Added {StoresTable}, stores key, etc. to get ChefTec profit center list. Used to replace IRMA Stores.Abbr with ChefTec 
				DataDir.ProfCentName in dat file.
 02/27/2013 CV	Added CASE to 'lb' conversion. 
 10/14/2014 FA  updated notification issue	
******************************************************************-->

<!--********************************************************************
 Deployment Key Definitions - * keys are enabled
********************************************************************-->
	<config key="dataDir"         value="E:\Data\IRMAOrdersToChefTec\{Reg}"/> 
	<config key="archiveDir"      value="{dataDir}\backup"/>

	<!-- *DEV -->
	<config key="logDir"          value="\IRMA\logs\{Reg}"/> 
	<config key="confDir"         value="conf"/> 
	<config key="connDir"         value="conn"/>

	<config key="ftpServer"       value="cewp7569"/>
	<config key="ftpUser"         value="ftp_user"/>
	<config key="ftpPassword"     value="cewp7569FTP"/>

	<config key="ftpDir"          value="IRMA_Orders\{Reg}"/>

<!--********************************************************************
 Application Key Definitions
********************************************************************-->
	<!-- Reg and Env are loaded from the command line, do not use! -->
	<!--config key="Reg"             value="{Reg}"/>
	<config key="Env"             value="{Env}"/-->

	<config key="App"             value="DM - IRMA ORDERS TO ChefTec"/>
	<config key="VendorId"        value="{VendorId}"/>
  
<!--********************************************************************
 Global Control Key Definitions - Use double - comment OR blank for ALL
********************************************************************-->
    <!-- List these stores, used in query "stores" -->
    <config key="StoresToList_Test" value="AND pct.ProfCentIdent IN (10042)"/>
    <config key="StoresToList_All"  value=""/>
    <config key="StoresToList"      value="{StoresToList_All}"/>
        
    <!-- Load items for these stores, used in query "items_query" -->
    <config key="StoresToLoad_Test" value="AND pct.ProfCentIdent IN (10042)"/>
    <config key="StoresToLoad_All"  value=""/>
    <config key="StoresToLoad"      value="{StoresToLoad_All}"/>

    <!-- Upload IRMA costs for these stores, used in query "store" -->
    <config key="StoresToUpload_Test" value="WHERE st.ProfCentIdent IN (10042)"/>
    <config key="StoresToUpload_All"  value=""/>
    <config key="StoresToUpload"      value="{StoresToUpload_All}"/>
	
<!--********************************************************************
 Global Key Definitions
********************************************************************-->
	<config key="sqlTimeout"        value="1800"/>
	<config key="emailSMTPServer"   value="smtp.wholefoods.com"/>
	<config key="LogFile"           value="{logDir}/IRMA_To_ChefTec_Export_{yyyy}{MM}{dd}.log"/>
	<config key="ParameterFile"     value="{confDir}/{Reg}_IRMAOrdersToChefTec.prm"/>
	<config key="MaxEntries"        value="2"/>

	<!-- Database Connection string keys -->
	<config key="IRMA"            value="FILE:{connDir}/{Reg}_IRMA_Connection.txt"/>
	<config key="ChefTec"         value="FILE:{connDir}/ChefTec_Connection.txt"/>
   
	<config key="StoresTable"       value="##{Reg}_Costs_To_ChefTec_Stores_{YYYY}{MM}{DD}"/>
   
<!--********************************************************************
 FTP Connections
********************************************************************-->
	<config key="ftp_ftp"  value="FTP, {ftpServer}, {ftpUser}, {ftpPassword}, ASC, , REPLACE, {ftpDir}, POs_For_ChefTec.dat, , "/>

<!--********************************************************************
 Delimiter Configurations
********************************************************************-->
	<config key="pipe"           value="|"/>
	<config key="arg-delim"      value="~"/>

<!--********************************************************************
 Source / Target Entries
********************************************************************-->   
	<config key="source_1"        value="DB, ChefTec, QUERY, stores, pipe, , , "/>
	<config key="target_1"        value="DB, IRMA, REPLACE, {StoresTable}, pipe, maketables, updatetables, "/>

	<config key="source_2"        value="DB, IRMA, QUERY, getOrders, pipe, , , 1"/>
	<config key="target_2"        value="FILE, REPLACE, {archiveDir}\POs_For_ChefTec.{yy}{MM}{dd}{HH}{MI}, pipe, , updateOrders;purgetables, ftp_ftp, , "/>

	<config key="notify_2" value="notify_failure_2,notify_success_2"/>
	<config key="notify_failure_2" value="notify_failure_msg, IRMA Order Export to ChefTec FAILED, {emailFrom}, {emailTo}, "/>
	<config key="notify_success_2" value="notify_success_msg, IRMA Order Export to ChefTec SUCCESS, {emailFrom}, {emailTo}, "/>

	<config key="notify_success_msg" value="file:{confDir}/IRMAOrdersToChefTec_Success.html"/>
	<config key="notify_failure_msg" value="file:{confDir}/IRMAOrdersToChefTec_Failure.html"/>

	<config key="arguments_1"     value="DB, IRMA, QUERY, getArgs, arg-delim, , "/>   
	<config key="arguments_2"     value="DB, IRMA, QUERY, getArgs, arg-delim, , "/>   

<!--********************************************************************
 Command and Query keys
********************************************************************-->     
    <config key="purgetables"    value="DB, IRMA, QUERY, purge_tables, "/>

    <config key="purge_tables"   value="
SET NOCOUNT ON;
IF EXISTS (SELECT * FROM tempdb.dbo.sysobjects WHERE Name = '{StoresTable}') DROP TABLE {StoresTable};
"/>

    <config key="maketables"     value="DB, IRMA, QUERY, make_tables, "/>

    <config key="make_tables"    value="
SET NOCOUNT ON;
IF EXISTS (SELECT * FROM tempdb.dbo.sysobjects WHERE Name = '{StoresTable}') DROP TABLE {StoresTable};
CREATE TABLE {StoresTable}
    (
    [ProfCentName] varchar(70)
    , [ProfCentIdent] varchar(24)
    , [Store_No] int
);       
"/>

    <config key="updatetables"    value="DB, IRMA, QUERY, update_tables, "/>

    <config key="update_tables"   value="
--StoresTable: Store_No
UPDATE    
    {StoresTable}
SET        
    [Store_No] = s.Store_No
FROM    
    {StoresTable} st

    JOIN Store (NOLOCK) s
        ON st.[ProfCentIdent] = s.BusinessUnit_ID
"/>

	<config key="stores"    value="
SET NOCOUNT ON;
SELECT 
    RTRIM(LTRIM(pct.ProfCentName)) AS [ProfCentName]
    , RTRIM(LTRIM(pct.ProfCentIdent)) AS [ProfCentIdent]
    , NULL AS [Store_No]
FROM
    ProfCent pct (NOLOCK)

--    JOIN SchedData sd (NOLOCK)
--        ON pct.ProfCentID = sd.ProfCentID

--    JOIN SchedTasks st (NOLOCK)
--        ON sd.SchedTaskID = st.SchedTaskID
--        AND st.SchedTaskName LIKE '{ChefTecSchedTaskFilter}'
WHERE
    RTRIM(LTRIM(ISNULL(pct.ProfCentIdent,''))) != ''
AND
    RTRIM(LTRIM(ISNULL(pct.ProfCentName,''))) LIKE '% ({Reg})'
    {StoresToList}
ORDER BY
   pct.ProfCentName;
"/>

	<config key="getArgs"	value="
DECLARE @mySQL varchar(MAX);

SET @mySQL = '
	SELECT
		a.Name          AppName,
		ace.ShortName	Environment,
		ack.Name        KeyName,
		acv.Value       KeyValue
	FROM
		AppConfigApp a

		INNER JOIN AppConfigEnv ace
			ON (ace.EnvironmentId = a.EnvironmentId)

		INNER JOIN AppConfigValue acv
			ON (acv.ApplicationId = a.ApplicationId)

		INNER JOIN AppConfigKey ack
			ON (ack.KeyId = acv.KeyId)
	WHERE
		a.Name like ''{App}''
	AND
		ace.EnvironmentID = ''{Env}''
	AND
		acv.Deleted = 0
	AND 
		a.Deleted = 0
	AND
		ace.Deleted = 0
	AND 
		ack.Deleted = 0
';
EXEC dbo.pivot_query @mySQL, 'AppName', 'KeyName', 'max(KeyValue)';
"/>

	<config key="getOrders"  value="
SELECT
	LTRIM(RTRIM(ISNULL(cst.ProfCentName,''))) AS PurchasingStore
--OLD
--LTRIM(RTRIM(ISNULL(st.StoreAbbr,''))) AS PurchasingStore
	, LTRIM(RTRIM(ISNULL(SubTeam_Name,'')))
	, CONVERT(VARCHAR(10),Expected_Date,101) AS OrderExpectedDate
	, Identifier
	, LTRIM(RTRIM(ISNULL(Item_Description,'')))
	, Cost
	, oi.Package_Desc1
        , RTRIM(LTRIM(ru.Unit_Abbreviation)) AS RetailUnit
--OLD 
--	, CASE 
--              WHEN  cu.Unit_Abbreviation IN ('LB','BOX') THEN 'LB'
--		WHEN cu.Unit_Abbreviation IN ('LB','BOX','CAS','CASE') THEN 'LB'
--		ELSE 'EA'
--		END AS CostUnit
	, CASE
		WHEN '{OrderUsingCasePackMultiplier}' = 'False' THEN QuantityOrdered
		ELSE QuantityOrdered * oi.Package_Desc1 
		END AS TotalUnits
	, oh.OrderHeader_ID
FROM
	Orderheader (NOLOCK) oh

        INNER JOIN OrderExternalSource oes
                ON oh.OrderExternalSourceID = oes.ID AND oes.Description = 'SOG'

	INNER JOIN OrderItem (NOLOCK) oi
		ON oh.OrderHeader_ID = oi.OrderHeader_ID
	INNER JOIN Vendor (NOLOCK) v
		ON v.Vendor_ID = oh.PurchaseLocation_ID
	INNER JOIN Item (NOLOCK) i
		ON i.Item_Key = oi.Item_Key
	INNER JOIN ItemIdentifier (NOLOCK) ii
		ON i.Item_Key = ii.Item_Key AND Default_Identifier = 1
	INNER JOIN ItemUnit (NOLOCK) ru
		ON ru.Unit_ID = oi.Retail_Unit_ID
--OLD
--	INNER JOIN ItemUnit (NOLOCK) cu
--		ON cu.Unit_ID = CostUnit
	INNER JOIN SubTeam s
		ON s.Subteam_No = Transfer_To_SubTeam
--OLD
--LEFT OUTER JOIN Store st
--	ON v.Store_no = st.Store_No
	LEFT OUTER JOIN {StoresTable} cst
		ON v.Store_no = cst.Store_No
WHERE
	oh.Vendor_ID in ({VendorId}) 
AND
	oh.CloseDate IS NULL
AND
	oh.Return_Order = 0
AND
	ISNULL(oh.Sent,0) = 1
AND
	CONVERT(varchar(10),oh.Expected_Date,101) = CONVERT(varchar(10),DateAdd(d,{LeadTimeInDays},GETDATE()),101) 
AND
	oh.OrderDate = oh.SentDate
{OptionalConditions}
--TEST
--CONVERT(date,OrderDate) >= CONVERT(date,GETDATE())
ORDER BY oh.OrderHeader_ID
"/>	

	<config key="updateOrders" value="DB, IRMA, QUERY, _updateOrders"/>
   
	<config key="_updateOrders"    value=" 	   
UPDATE
	OrderHeader 
SET
	SentDate = GETDATE() 
WHERE
	OrderHeader_ID IN
	(
	SELECT
		DISTINCT (oh.OrderHeader_ID)
	FROM
		Orderheader (NOLOCK) oh
	
		INNER JOIN OrderItem (NOLOCK) oi
			ON oh.OrderHeader_ID = oi.OrderHeader_ID
		INNER JOIN vendor (NOLOCK) v
			ON v.Vendor_ID = oh.PurchaseLocation_ID
		INNER JOIN Item (NOLOCK) i
			ON i.Item_Key = oi.Item_Key
		INNER JOIN ItemIdentifier (NOLOCK) ii
			ON i.Item_Key = ii.Item_Key AND Default_Identifier = 1
		INNER JOIN ItemUnit (NOLOCK) cu
			ON cu.Unit_ID = CostUnit
		INNER JOIN SubTeam s
			ON s.Subteam_No = Transfer_To_SubTeam
	WHERE
		oh.Vendor_ID in ({VendorId}) 
	AND
		oh.CloseDate IS NULL
	AND
		oh.Return_Order = 0
	AND
		ISNULL(oh.Sent,0) = 1
	AND
		CONVERT(varchar(10),oh.Expected_Date,101) = CONVERT(varchar(10),DateAdd(d,{LeadTimeInDays},GETDATE()),101) 
	AND
		oh.OrderDate = oh.SentDate
	{OptionalConditions}
	);
"/>
	 
</configuration>

