<?xml version="1.0" encoding="utf-8" ?>
<configuration>
<!--****************************************************************
 Config File: IRMACostsToChefTec.cfg
      Author: Chip Vimond
        Date: 10/10/2011

 Description: 
 Fetches aggregate cost information from IRMA for any item known to be an active ingredient
 in the ChefTec recipe database. Includes orders received over LeadTimeInDays
 days ending the day the job is run minus LeadTimeOffset days. Transfers and credits
 are ignored. Aggregate includes the sum of all units, the most recent cost, and the most recent
 date received.
 
 The LeadTimeInDays, LeadTimeOffset, emailFrom, and emailTo parameters are configurable by 
 region from IRMA.

 Runs for enabled stores only. Stores that have a scheduled task matching the pattern
 "% ({Reg}) Costs" in the ChefTec database are considered enabled.

 Modification History: 
 Date       Init	Comment
 10/10/2011 CV		Created.
 01/27/2012	CV  	Changed FTP connect info to cewd7505@cewd7505FTP for DEV 
 02/06/2012	CV		Parameterized DB, FTP connections and encrypted PWD to FILE: to support all regions
******************************************************************-->

<!--********************************************************************
 Deployment Key Definitions - * keys are enabled
********************************************************************-->
    <config key="dataDir"            value="E:\Data\IRMACostsToChefTec\{Reg}"/> 

    <!-- PRD -->
    <config key="logDir"             value="\IRMA\logs\{Reg}"/> 
    <config key="confDir"            value="conf"/> 
    <config key="connDir"            value="conn"/> 

<!--********************************************************************
 Application Key Definitions
********************************************************************-->
    <config key="App"             value="DM - IRMA Costs To ChefTec"/>
	
    <!-- Reg and Env are loaded from the command line, do not use! -->
    <!--config key="Reg"             value="{Reg}"/>
    <config key="Env"             value="{Env}"/-->

    <!-- These are IRMA app config keys and are loaded as arguments in entries 3 and 5, do not use! -->
	<!--config key="Environment"     value="{Environment}"/>
    <config key="LeadTimeInDays"  value="{LeadTimeInDays}"/>
    <config key="LeadTimeOffset"  value="{LeadTimeOffset}"/>
    <config key="emailFrom"       value="{emailFrom}"/>
    <config key="emailTo"         value="{emailTo}"/-->		

<!--********************************************************************
 Global Control Key Definitions - Use double - comment OR blank for ALL
********************************************************************-->
    <!-- List these stores, used in query "stores" -->
    <config key="StoresToList_Test" value="AND pct.ProfCentIdent IN (10042)"/>
    <config key="StoresToList_All"  value=""/>
    <config key="StoresToList"      value="{StoresToList_All}"/>
        
    <!-- Load items for these stores, used in query "items_query" -->
    <config key="StoresToLoad_Test" value="AND pct.ProfCentIdent IN (10042)"/>
    <config key="StoresToLoad_All"  value=""/>
    <config key="StoresToLoad"      value="{StoresToLoad_All}"/>

    <!-- Upload IRMA costs for these stores, used in query "store" -->
    <config key="StoresToUpload_Test" value="WHERE st.ProfCentIdent IN (10042)"/>
    <config key="StoresToUpload_All"  value=""/>
    <config key="StoresToUpload"      value="{StoresToUpload_All}"/>

<!--*******************************************************************
 Database Connections
********************************************************************-->
    <!-- ChefTec DEV/QA/PRD -->
    <config key="CTuser"		value="cheftec_reader"/>   
	<config key="CTpass"		value="FILE:{connDir}/cheftec_reader_pass.txtx"/>
	 
    <!-- IRMA DEV/QA/PRD -->  
    <config key="IRMAuser"		value="IRMASchedJobs"/> 
	<config key="IRMApass"		value="FILE:{connDir}/{Reg}_IRMASchedJobs_pass.txtx"/>

    <!-- Database connection string keys -->
	<config key="ChefTec"		value="FILE:{connDir}/ChefTec_Connection.txt"/>
	<config key="IRMA"			value="FILE:{connDir}/{Reg}_IRMA_Connection.txt"/>
	
<!--********************************************************************
 FTP Connections
********************************************************************-->
    <!-- FTP connection string keys -->
    <config key="ftpChefTec"       value="FILE:{connDir}/ChefTec_FTP_Connection.txt"/>

<!--********************************************************************
 Global Key Definitions
********************************************************************-->
    <config key="sqlTimeout"            value="900"/>
    <config key="conTimeout"            value="60"/>
    <config key="emailSMTPServer"       value="smtp1.wholefoods.com"/>
    <config key="LogFile"               value="{logDir}\IRMA_Costs_To_ChefTec_{YYYY}{MM}{DD}.log"/>
    <config key="MaxEntries"            value="5"/>

    <config key="VendorName"             value="IRMA ({Reg})"/>
    <config key="ChefTecSchedTaskFilter" value="% ({Reg}) Costs"/>
    <config key="InvoiceName"            value="'IRMA' + CONVERT(varchar(8), GETDATE(), 112)"/>
    <config key="ItemsFormat"            value="{confDir}\IRMACostsToChefTec_Items.fmt"/>
    <config key="ParameterFile"          value="{confDir}\{Reg}_IRMACostsToChefTec.prm"/>
    <config key="ItemsQuery"             value="{Reg}_Costs_To_ChefTec_Items.sql"/>
    <config key="ItemsFile"              value="{Reg}_Costs_To_ChefTec_Items.bcp"/>
    <config key="CostsFile"              value="{Reg}_{ProfCentID}_Costs_To_ChefTec_{YYYY}{MM}{DD}.dat"/>
    <config key="CostsFileFilter"        value="{Reg}_*_Costs_To_ChefTec_{YYYY}{MM}{DD}.dat"/>
    <config key="CostsFileBackup"        value="{Reg}_{ProfCentID}_Costs_To_ChefTec_{YYYY}{MM}{DD}_{HH24}{mm}{ss}.dat"/>
    <config key="ReportFile"             value="{Reg}_Costs_To_ChefTec_Report_{YYYY}{MM}{DD}.txt"/>
    <config key="ReportFileBackup"       value="{Reg}_Costs_To_ChefTec_Report_{YYYY}{MM}{DD}_{HH24}{mm}{ss}.txt"/>
    <config key="ItemsTable"             value="##{Reg}_Costs_To_ChefTec_Items_{YYYY}{MM}{DD}"/>
    <config key="StoresTable"            value="##{Reg}_Costs_To_ChefTec_Stores_{YYYY}{MM}{DD}"/>

<!--********************************************************************
 Command Keys
********************************************************************-->
    <config key="items_in" value="SYSTEM, sqlcmd.exe, -S {SRC_SERVER} -U {CTuser} -P {CTpass} -d {SRC_DATABASE} -i {q}{dataDir}\{ItemsQuery}{q} -s {q}|{q} -h -1 -W -o {q}{TGT_DIR}\{TGT_NAME}{TGT_EXT}{q}"/>
    <config key="items_out"  value="SYSTEM, bcp.exe, [{ARG_DATABASE}].{ItemsTable} in {q}{TGT_DIR}\{TGT_NAME}{TGT_EXT}{q} -S {ARG_SERVER} -U {IRMAuser} -P {IRMApass} -t {q}|{q} -m 100 -f {q}{ItemsFormat}{q} -k"/>

    <config key="backup_dat" value="SYSTEM, {q}cmd.exe{q}, /c ren {q}{dataDir}\{CostsFileFilter}{q} {q}*_{YYYY}{MM}{DD}_{HH24}{mm}{ss}.dat{q} &amp; move /Y {q}{dataDir}\{Reg}_*.dat{q} {q}{dataDir}\Backup{q}"/>
    <config key="backup_txt" value="SYSTEM, {q}cmd.exe{q}, /c copy /Y {q}{dataDir}\Backup\{ReportFile}{q} {q}{dataDir}{q} &amp; ren {q}{dataDir}\Backup\{ReportFile}{q} {q}{ReportFileBackup}{q}"/>

<!--********************************************************************
 Notify Configurations
********************************************************************-->
    <config key="notify_5"           value="email_error, email_success"/>

    <config key="email_error"        value="email_error_msg, {Reg} - {Environment} - {App} FAILED, {emailFrom}, {emailTo}"/>

    <config key="email_success"      value="email_success_msg, {Reg} - {Environment} - {App} SUCCESS, {emailFrom}, {emailTo}, {dataDir}\{ReportFile}"/>

    <config key="email_error_msg"    value="FILE:{confDir}/IRMACostsToChefTec_Failure.html"/>
    <config key="email_success_msg"  value="FILE:{confDir}/IRMACostsToChefTec_Success.html"/>
   
<!--********************************************************************
 Delimiter Configurations
********************************************************************-->
    <config key="pipe"   value="|"/>
    <config key="comma"  value=","/>
    <config key="q"      value="&quot;"/>

<!--********************************************************************
 Command and Query keys
********************************************************************-->     
    <config key="purgetables"    value="DB, IRMA, QUERY, purge_tables, "/>

    <config key="purge_tables"   value="
SET NOCOUNT ON;
IF EXISTS (SELECT * FROM tempdb.dbo.sysobjects WHERE Name = '{ItemsTable}') DROP TABLE {ItemsTable};
IF EXISTS (SELECT * FROM tempdb.dbo.sysobjects WHERE Name = '{StoresTable}') DROP TABLE {StoresTable};
"/>

    <config key="maketables"     value="DB, IRMA, QUERY, make_tables, "/>

    <config key="make_tables"    value="
SET NOCOUNT ON;
IF EXISTS (SELECT * FROM tempdb.dbo.sysobjects WHERE Name = '{ItemsTable}') DROP TABLE {ItemsTable};
CREATE TABLE {ItemsTable}
(
    [Identifier] varchar(20) NULL
    , [ProfCentID] int NULL
    , [Description] varchar(24) NULL
    , [PurchaseUnit] varchar(20) NULL
    , [ItemName] varchar(70) NULL
    , [ItemID] int NULL  
    , [Item_Key] int NULL
    , [Vendor_ID] int NULL   
    , [OrderItem_ID] int NULL
    , [DateReceived] datetime NULL
    , [QuantityReceived] decimal(18,4) NULL
);
IF EXISTS (SELECT * FROM tempdb.dbo.sysobjects WHERE Name = '{StoresTable}') DROP TABLE {StoresTable};
CREATE TABLE {StoresTable}
    (
    [ProfCentName] varchar(70)
    , [ProfCentIdent] varchar(24)
    , [ProfCentID] int
    , [Vendor_ID] int
    , [StoreAbbr] char(3)
    , [Store_No] int
);       
"/>

    <config key="updatetables"    value="DB, IRMA, QUERY, update_tables, "/>

    <config key="update_tables"    value="
--StoresTable: StoreAbbr, Store_No, and Vendor_ID
UPDATE    
    {StoresTable}
SET        
    [StoreAbbr] = s.StoreAbbr
    , [Store_No] = s.Store_No
    , [Vendor_ID] = v.Vendor_ID
FROM    
    {StoresTable} st

    JOIN Store (NOLOCK) s
        ON st.[ProfCentIdent] = s.BusinessUnit_ID

    JOIN Vendor (NOLOCK) v
        ON s.Store_No = v.Store_No;

--ItemsTable: Vendor_ID, Item_Key
UPDATE    
    {ItemsTable}
SET        
    [Vendor_ID] = st.Vendor_ID
    , [Item_Key] = ii.Item_Key
FROM
    {ItemsTable} it

    JOIN ItemIdentifier (NOLOCK) ii
        ON ii.Identifier = it.[Identifier]
        AND ii.Default_Identifier = 1
   
    JOIN {StoresTable} st
        ON st.ProfCentID = it.ProfCentID;

--ItemsTable: OrderItem_ID, DateReceived, QuantityReceived
UPDATE
    {ItemsTable}
SET
    [OrderItem_ID] = [Qty].[OrderItem_ID]
    , [DateReceived] = [Qty].[DateReceived]
    , [QuantityReceived] = [Qty].[QuantityReceived]
FROM
    (    
    SELECT 
        oh.PurchaseLocation_ID
        , oi.Item_Key
        , MAX(oi.[OrderItem_ID]) AS [OrderItem_ID]
        , MAX(oi.[DateReceived]) AS [DateReceived]
        , SUM(oi.[UnitsReceived]) AS [QuantityReceived]
    FROM    
        OrderItem (NOLOCK) oi
        
        JOIN OrderHeader (NOLOCK) oh
            ON  oh.OrderHeader_ID = oi.OrderHeader_ID
            AND CONVERT(varchar,oi.DateReceived,110) BETWEEN DATEADD(d,-{LeadTimeOffset}-{LeadTimeInDays}+1,CONVERT(varchar,GETDATE(),110)) AND DATEADD(d,-{LeadTimeOffset},CONVERT(varchar,GETDATE(),110))
            AND oi.QuantityReceived &gt; 0
            AND oh.CloseDate IS NOT NULL
            AND oh.OrderType_ID &lt;&gt; 3
            AND oh.Return_Order = 0				
        
        JOIN {ItemsTable} it
            ON  oi.Item_Key = it.[Item_Key]
            AND oh.PurchaseLocation_ID = it.[Vendor_ID]

    GROUP BY
        oh.PurchaseLocation_ID
        , oi.Item_Key
    ) [Qty]
    , {ItemsTable} it
WHERE
    [Qty].Item_Key = it.[Item_Key]
    AND [Qty].PurchaseLocation_ID = it.[Vendor_ID];
"/>

<!--********************************************************************
 Source / Target Entries
********************************************************************-->
    <config key="source_1"     value="DB, ChefTec, QUERY, stores, pipe, , , "/>
    <config key="target_1"     value="DB, IRMA, REPLACE, {StoresTable}, pipe, maketables, , "/>

    <config key="source_2"     value="DB, ChefTec, QUERY, items_query, pipe, , , 1"/>
    <config key="target_2"     value="FILE, REPLACE, {dataDir}\{ItemsQuery}, pipe, , , "/>

    <config key="source_3"     value="DB, ChefTec, QUERY, dummy, pipe, , , "/>
    <!--config key="source_3"     value="FILE, {dataDir}\dummy.txt, , , , , , , 2"/-->
    <config key="target_3"     value="FILE, REPLACE, {dataDir}\{ItemsFile}, pipe, , items_in;items_out;updatetables, , "/>
    <config key="arguments_3"  value="DB, IRMA, QUERY, appconfig, pipe, , "/>

    <config key="source_4"     value="DB, IRMA, QUERY, orders, pipe, , , 3"/>
    <config key="target_4"     value="FILE, REPLACE, {dataDir}\{CostsFile}, comma, , , ftpChefTec, , , "/>
    <config key="arguments_4"  value="DB, IRMA, QUERY, store, pipe, , "/>	

    <!-- Build exception report, timestamp and move *.dat cost files, timestamp and copy *.txt file to \Backup folder, purge temp tables -->    
    <config key="source_5"     value="DB, IRMA, QUERY, itemcheck_header;itemcheck;casepackcheck_header;casepackcheck;purchunitcheck_header;purchunitcheck, pipe, , , 4"/>
    <config key="target_5"     value="FILE, APPEND, {dataDir}\Backup\{ReportFile}, pipe, , backup_dat;backup_txt;purgetables, , , , "/>

	<config key="arguments_5"  value="DB, IRMA, QUERY, appconfig, pipe, , "/>
	
<!--********************************************************************
 Query Keys
********************************************************************-->
    <config key="appconfig" value="
SET NOCOUNT ON;
DECLARE @SQL varchar(MAX);

SET @SQL = '
SELECT
    a.Name AS [AppName],
    ace.ShortName AS [Environment],
    ack.Name AS [KeyName],
    acv.Value AS [KeyValue]
FROM
    AppConfigApp a

    JOIN AppConfigEnv ace
        ON  ace.EnvironmentID = a.EnvironmentID
        AND a.Name = ''{App}''
        AND a.Deleted = 0
        AND CONVERT(char(36),ace.EnvironmentID) = ''{Env}''
        AND ace.Deleted = 0
		
    JOIN AppConfigValue acv
        ON  acv.ApplicationId = a.ApplicationId
        AND acv.Deleted = 0

    JOIN AppConfigKey ack
        ON  ack.KeyId = acv.KeyId
        AND ack.Deleted = 0
';

exec dbo.pivot_query @SQL, 'Environment', 'KeyName', 'MAX(KeyValue)';
"/>

    <config key="dummy"     value="
SET NOCOUNT ON;
SELECT 
    NULL;
"/>

    <config key="store"     value="
SET NOCOUNT ON;
SELECT 
    st.ProfCentName AS [ProfCentName]
    , st.ProfCentID AS [ProfCentID]
    , st.ProfCentIdent AS [ProfCentIdent]
    , st.Vendor_ID AS [Vendor_ID]
    , st.StoreAbbr AS [StoreAbbr]
    , st.Store_No AS [Store_No]
FROM 
    {StoresTable} st
{StoresToUpload}
ORDER BY
    st.StoreAbbr;
"/>

    <config key="stores"    value="
SET NOCOUNT ON;
SELECT 
    pct.ProfCentName AS [ProfCentName]
    , pct.ProfCentIdent AS [ProfCentIdent]
    , pct.ProfCentID AS [ProfCentID]
    , NULL
    , NULL
    , NULL
FROM
    ProfCent pct (NOLOCK)

    JOIN SchedData sd (NOLOCK)
        ON pct.ProfCentID = sd.ProfCentID

    JOIN SchedTasks st (NOLOCK)
        ON sd.SchedTaskID = st.SchedTaskID
        AND st.SchedTaskName LIKE '{ChefTecSchedTaskFilter}'
WHERE
    RTRIM(LTRIM(ISNULL(pct.ProfCentIdent,''))) != ''
    {StoresToList}
ORDER BY
   pct.ProfCentName;
"/>

    <config key="items_query"         value="
SELECT '
SET NOCOUNT ON;
SELECT
   pc.ProdCode AS [ProdCode]
   , i.ProfCentID AS [ProfCentID]
   , RTRIM(LTRIM(ISNULL(pc.Description,''''))) AS [Description]
   , CASE u.UnitSing WHEN ''ea'' THEN ''EACH'' WHEN ''lb'' THEN ''POUND'' ELSE u.UnitSing END AS [PurchaseUnit]
   , i.ItemName AS [ItemName]
   , i.ItemID AS [ItemID] 
FROM
    ProdCo pc (NOLOCK)
	
	JOIN Units u
	    ON  u.UnitID = pc.UnitID

	JOIN Inv i (NOLOCK)
        ON  i.ItemID = pc.ItemID
        AND i.IsActive = 1

    JOIN Vendor v (NOLOCK)
        ON  pc.VendorID = v.VendorID
        AND v.VendorName = ''{VendorName}''

    JOIN ProfCent pct (NOLOCK)
        ON  i.ProfCentID = pct.ProfCentID

    JOIN SchedData sd (NOLOCK)
        ON pct.ProfCentID = sd.ProfCentID

    JOIN SchedTasks st (NOLOCK)
        ON sd.SchedTaskID = st.SchedTaskID
        AND st.SchedTaskName LIKE ''{ChefTecSchedTaskFilter}''
WHERE
    RTRIM(LTRIM(ISNULL(pct.ProfCentIdent,''''))) &lt;&gt; ''''
    {StoresToLoad}
ORDER BY
    pct.ProfCentName;'
"/>

    <config key="orders" value="
SET NOCOUNT ON;
SELECT
    CONVERT(varchar, CHAR(34) + it.Identifier + CHAR(34)) AS [Identifier]
    , CHAR(34) + RTRIM(REPLACE(i.Item_Description, CHAR(34),' in ')) + CHAR(34) AS [Description]
    , CHAR(34) + {InvoiceName} + CHAR(34) AS [Invoice]
    , CHAR(34) + CONVERT(varchar(8), it.DateReceived, 112) + CHAR(34) AS [POReceivedDate]
    , CHAR(34) + CONVERT(varchar(20), it.QuantityReceived) + CHAR(34) AS [UnitsReceived]
    , CHAR(34) + RTRIM(pu.Unit_Name) + CHAR(34) AS [OrderCostUnit]
    , CHAR(34) + 
        CASE ISNULL(oi.AdjustedCost, 0)
            WHEN 0 THEN CONVERT(varchar(20), CONVERT(money,oi.UnitCost))
            ELSE CONVERT(varchar(20), CONVERT(money,oi.AdjustedCost))
        END + CHAR(34) AS [Cost]
    , CHAR(34) + RTRIM(LTRIM(CONVERT(varchar(20), oi.Package_Desc1) + '/' + CONVERT(varchar(20), i.Package_Desc1)+ '/' + CONVERT(varchar(20), i.Package_Desc2) + '/' +  pu.Unit_Name)) + CHAR(34)
FROM {ItemsTable} it
    JOIN Item (NOLOCK) i
        ON it.Item_Key = i.Item_Key
    JOIN OrderItem (NOLOCK) oi
        ON oi.OrderItem_ID = it.OrderItem_ID
    JOIN ItemUnit (NOLOCK) ru
        ON i.Retail_Unit_Id = ru.Unit_ID
    JOIN ItemUnit (NOLOCK) pu
        ON i.Package_Unit_Id = pu.Unit_ID
    JOIN ItemUnit (NOLOCK) vu
        ON i.Vendor_Unit_Id = vu.Unit_ID
    JOIN ItemUnit (NOLOCK) ocu
        ON oi.CostUnit = ocu.Unit_ID
    JOIN ItemUnit (NOLOCK) oru
        ON oi.Retail_Unit_Id = oru.Unit_ID
    JOIN ItemUnit (NOLOCK) opu
        ON oi.Package_Unit_Id = opu.Unit_ID
WHERE
   it.[Vendor_ID] = {Vendor_ID};	
"/>

    <config key="itemcheck_header" value="
SET NOCOUNT ON;
SELECT CONVERT(varchar(80),'An IRMA Identifier was not found for the following ChefTec Product Codes:');
"/>

    <config key="itemcheck" value="
SET NOCOUNT ON;
SELECT
    [Exception]
    , [ProdCode]
    , [ItemName]
    , [ItemID]
FROM
(
(
SELECT
    'Exception' AS [Exception]
    , 'ProdCode' AS [ProdCode]
    , 'ItemName' AS [ItemName] 
    , 'ItemID' AS [ItemID] 
    , 0 AS [Sort]
FROM 
    {ItemsTable} it
)
UNION
(
SELECT DISTINCT
    'IRMA Identifier not found for ChefTec Product Code' AS [Exception]
    , it.[Identifier] AS [ProdCode]
    , it.[ItemName] AS [ItemName]  
    , RTRIM(LTRIM(CONVERT(varchar(8),it.[ItemID]))) AS [ItemID]  
    , 1 AS [Sort]
FROM 
    {ItemsTable} it
WHERE
    it.Item_Key IS NULL
)
) ic
ORDER BY
    [Sort] ASC
    , [ItemName] ASC;
"/>

    <config key="casepackcheck_header" value="
SELECT CONVERT(varchar(80),'The following ChefTec CASE PACK descriptions differ from IRMA''s:');
"/>

    <config key="casepackcheck" value="
SET NOCOUNT ON;
SELECT     
    [Exception]
    , [ProdCode]
    , [ItemName] 
    , [ItemID]
    , [ChefTec Pack] 
    , [IRMA Pack]  
FROM
(
(
SELECT
    'Exception' AS [Exception]
    , 'Identifier' AS [ProdCode]
    , 'ItemName' AS [ItemName]
    , 'ItemID' AS [ItemID]
    , 'ChefTec Pack' AS [ChefTec Pack]
    , 'IRMA Pack' AS [IRMA Pack]  
    , 0 AS [Sort]
FROM 
    {ItemsTable} it
)
UNION
(
SELECT
    'ChefTec CASE PACK differs from IRMA' AS [Exception]
    , it.[Identifier] AS [ProdCode]
    , it.[ItemName] AS [ItemName]
    , RTRIM(LTRIM(CONVERT(varchar(8),it.[ItemID]))) AS [ItemID]
    , it.[Description] AS [ChefTec Pack]  
    , RTRIM(LTRIM(CONVERT(varchar(20), oi.Package_Desc1) + '/' + CONVERT(varchar(20), i.Package_Desc1) + '/' + CONVERT(varchar(20), i.Package_Desc2) + '/' +  RTRIM(pu.Unit_Name))) AS [IRMA Pack]  
    , 1 AS [Sort]
FROM 
    {ItemsTable} it

    JOIN {StoresTable} (NOLOCK) s
        ON it.ProfCentID = s.ProfCentID
    JOIN Item (NOLOCK) i
        ON it.Item_Key = i.Item_Key
    JOIN ItemUnit (NOLOCK) pu
        ON i.Package_Unit_Id = pu.Unit_ID
    JOIN OrderItem (NOLOCK) oi
        ON oi.OrderItem_ID = it.OrderItem_ID		
WHERE
    it.Item_Key IS NOT NULL
    AND it.Description &lt;&gt; RTRIM(LTRIM(CONVERT(varchar(20), CONVERT(int,i.Package_Desc1)) + '/' + CONVERT(varchar(20), CONVERT(int,i.Package_Desc2)) + '/' +  pu.Unit_Name))
    AND it.Description &lt;&gt; RTRIM(LTRIM(CONVERT(varchar(20), i.Package_Desc1) + '/' + CONVERT(varchar(20), i.Package_Desc2) + '/' +  pu.Unit_Name))
)
) cpc
ORDER BY
    cpc.[Sort] ASC
    , cpc.[ItemName] ASC
    , cpc.[ChefTec Pack] ASC;
"/>

    <config key="purchunitcheck_header" value="
SELECT CONVERT(varchar(80),'The following ChefTec PURCHASE UNIT descriptions differ from IRMA''s:');
"/>

    <config key="purchunitcheck" value="
SET NOCOUNT ON;
SELECT     
    [Exception]
    , [ProdCode]
    , [ItemName] 
    , [ItemID]
    , [ChefTec Unit] 
    , [IRMA Unit]  
FROM
(
(
SELECT
    'Exception' AS [Exception]
    , 'Identifier' AS [ProdCode]
    , 'ItemName' AS [ItemName]
    , 'ItemID' AS [ItemID]
    , 'ChefTec Unit' AS [ChefTec Unit]
    , 'IRMA Unit' AS [IRMA Unit]  
    , 0 AS [Sort]
FROM 
    {ItemsTable} it
)
UNION
(
SELECT
    'ChefTec PURCHASE UNIT differs from IRMA' AS [Exception]
    , it.[Identifier] AS [ProdCode]
    , it.[ItemName] AS [ItemName]
    , RTRIM(LTRIM(CONVERT(varchar(8),it.[ItemID]))) AS [ItemID]
    , CASE it.[PurchaseUnit] WHEN 'EACH' THEN 'ea' WHEN 'POUND' THEN 'lb' END AS [ChefTec Unit]
    , RTRIM(LTRIM((pu.Unit_Name))) AS [IRMA Unit] 
    , 1 AS [Sort]
FROM 
    {ItemsTable} it

    JOIN {StoresTable} (NOLOCK) s
        ON it.ProfCentID = s.ProfCentID
    JOIN Item (NOLOCK) i
        ON it.Item_Key = i.Item_Key
    JOIN ItemUnit (NOLOCK) pu
        ON i.Package_Unit_Id = pu.Unit_ID
    JOIN OrderItem (NOLOCK) oi
        ON oi.OrderItem_ID = it.OrderItem_ID		
WHERE
    it.Item_Key IS NOT NULL
    AND it.[PurchaseUnit] &lt;&gt; RTRIM(LTRIM((pu.Unit_Name)))
)
) cpc
ORDER BY
    cpc.[Sort] ASC
    , cpc.[ItemName] ASC
    , cpc.[ChefTec Unit] ASC;
"/>
</configuration>
 