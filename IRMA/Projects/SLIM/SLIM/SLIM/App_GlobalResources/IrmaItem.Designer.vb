'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18052
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("IrmaItem"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class IrmaItem
    Inherits Global.System.Data.DataSet
    
    Private tableItem As ItemDataTable
    
    Private tableSLIM_GetItemOverride As SLIM_GetItemOverrideDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Item")) Is Nothing) Then
                MyBase.Tables.Add(New ItemDataTable(ds.Tables("Item")))
            End If
            If (Not (ds.Tables("SLIM_GetItemOverride")) Is Nothing) Then
                MyBase.Tables.Add(New SLIM_GetItemOverrideDataTable(ds.Tables("SLIM_GetItemOverride")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Item() As ItemDataTable
        Get
            Return Me.tableItem
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SLIM_GetItemOverride() As SLIM_GetItemOverrideDataTable
        Get
            Return Me.tableSLIM_GetItemOverride
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As IrmaItem = CType(MyBase.Clone,IrmaItem)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Item")) Is Nothing) Then
                MyBase.Tables.Add(New ItemDataTable(ds.Tables("Item")))
            End If
            If (Not (ds.Tables("SLIM_GetItemOverride")) Is Nothing) Then
                MyBase.Tables.Add(New SLIM_GetItemOverrideDataTable(ds.Tables("SLIM_GetItemOverride")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableItem = CType(MyBase.Tables("Item"),ItemDataTable)
        If (initTable = true) Then
            If (Not (Me.tableItem) Is Nothing) Then
                Me.tableItem.InitVars
            End If
        End If
        Me.tableSLIM_GetItemOverride = CType(MyBase.Tables("SLIM_GetItemOverride"),SLIM_GetItemOverrideDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSLIM_GetItemOverride) Is Nothing) Then
                Me.tableSLIM_GetItemOverride.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "IrmaItem"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/IrmaItem.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableItem = New ItemDataTable()
        MyBase.Tables.Add(Me.tableItem)
        Me.tableSLIM_GetItemOverride = New SLIM_GetItemOverrideDataTable()
        MyBase.Tables.Add(Me.tableSLIM_GetItemOverride)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeItem() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSLIM_GetItemOverride() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As IrmaItem = New IrmaItem()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ItemRowChangeEventHandler(ByVal sender As Object, ByVal e As ItemRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SLIM_GetItemOverrideRowChangeEventHandler(ByVal sender As Object, ByVal e As SLIM_GetItemOverrideRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ItemDataTable
        Inherits Global.System.Data.TypedTableBase(Of ItemRow)
        
        Private columnItem_Key As Global.System.Data.DataColumn
        
        Private columnItem_Description As Global.System.Data.DataColumn
        
        Private columnSign_Description As Global.System.Data.DataColumn
        
        Private columnIngredients As Global.System.Data.DataColumn
        
        Private columnSubTeam_No As Global.System.Data.DataColumn
        
        Private columnSales_Account As Global.System.Data.DataColumn
        
        Private columnPackage_Desc1 As Global.System.Data.DataColumn
        
        Private columnPackage_Desc2 As Global.System.Data.DataColumn
        
        Private columnPackage_Unit_ID As Global.System.Data.DataColumn
        
        Private columnMin_Temperature As Global.System.Data.DataColumn
        
        Private columnMax_Temperature As Global.System.Data.DataColumn
        
        Private columnUnits_Per_Pallet As Global.System.Data.DataColumn
        
        Private columnAverage_Unit_Weight As Global.System.Data.DataColumn
        
        Private columnTie As Global.System.Data.DataColumn
        
        Private columnHigh As Global.System.Data.DataColumn
        
        Private columnYield As Global.System.Data.DataColumn
        
        Private columnBrand_ID As Global.System.Data.DataColumn
        
        Private columnOrigin_ID As Global.System.Data.DataColumn
        
        Private columnShelfLife_Length As Global.System.Data.DataColumn
        
        Private columnShelfLife_ID As Global.System.Data.DataColumn
        
        Private columnRetail_Unit_ID As Global.System.Data.DataColumn
        
        Private columnVendor_Unit_ID As Global.System.Data.DataColumn
        
        Private columnDistribution_Unit_ID As Global.System.Data.DataColumn
        
        Private columnCost_Unit_ID As Global.System.Data.DataColumn
        
        Private columnFreight_Unit_ID As Global.System.Data.DataColumn
        
        Private columnDeleted_Item As Global.System.Data.DataColumn
        
        Private columnDiscontinue_Item As Global.System.Data.DataColumn
        
        Private columnWFM_Item As Global.System.Data.DataColumn
        
        Private columnNot_Available As Global.System.Data.DataColumn
        
        Private columnPre_Order As Global.System.Data.DataColumn
        
        Private columnRemove_Item As Global.System.Data.DataColumn
        
        Private columnNoDistMarkup As Global.System.Data.DataColumn
        
        Private columnOrganic As Global.System.Data.DataColumn
        
        Private columnRefrigerated As Global.System.Data.DataColumn
        
        Private columnKeep_Frozen As Global.System.Data.DataColumn
        
        Private columnShipper_Item As Global.System.Data.DataColumn
        
        Private columnFull_Pallet_Only As Global.System.Data.DataColumn
        
        Private columnUser_ID As Global.System.Data.DataColumn
        
        Private columnPOS_Description As Global.System.Data.DataColumn
        
        Private columnRetail_Sale As Global.System.Data.DataColumn
        
        Private columnFood_Stamps As Global.System.Data.DataColumn
        
        Private columnDiscountable As Global.System.Data.DataColumn
        
        Private columnPrice_Required As Global.System.Data.DataColumn
        
        Private columnQuantity_Required As Global.System.Data.DataColumn
        
        Private columnItemType_ID As Global.System.Data.DataColumn
        
        Private columnHFM_Item As Global.System.Data.DataColumn
        
        Private columnScaleDesc1 As Global.System.Data.DataColumn
        
        Private columnScaleDesc2 As Global.System.Data.DataColumn
        
        Private columnNot_AvailableNote As Global.System.Data.DataColumn
        
        Private columnCountryProc_ID As Global.System.Data.DataColumn
        
        Private columnInsert_Date As Global.System.Data.DataColumn
        
        Private columnManufacturing_Unit_ID As Global.System.Data.DataColumn
        
        Private columnEXEDistributed As Global.System.Data.DataColumn
        
        Private columnClassID As Global.System.Data.DataColumn
        
        Private columnUser_ID_Date As Global.System.Data.DataColumn
        
        Private columnDistSubTeam_No As Global.System.Data.DataColumn
        
        Private columnCostedByWeight As Global.System.Data.DataColumn
        
        Private columnTaxClassID As Global.System.Data.DataColumn
        
        Private columnLabelType_ID As Global.System.Data.DataColumn
        
        Private columnCategory_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Item"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_KeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Key
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Sign_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSign_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IngredientsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIngredients
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubTeam_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTeam_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Sales_AccountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSales_Account
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Package_Desc1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Desc1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Package_Desc2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Desc2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Package_Unit_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Unit_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Min_TemperatureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMin_Temperature
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Max_TemperatureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMax_Temperature
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Units_Per_PalletColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnits_Per_Pallet
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Average_Unit_WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAverage_Unit_Weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HighColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHigh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Brand_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrand_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Origin_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrigin_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ShelfLife_LengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShelfLife_Length
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ShelfLife_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShelfLife_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Retail_Unit_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRetail_Unit_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Vendor_Unit_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVendor_Unit_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Distribution_Unit_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistribution_Unit_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Cost_Unit_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCost_Unit_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Freight_Unit_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreight_Unit_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deleted_ItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeleted_Item
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Discontinue_ItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscontinue_Item
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WFM_ItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWFM_Item
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Not_AvailableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNot_Available
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pre_OrderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPre_Order
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Remove_ItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemove_Item
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoDistMarkupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoDistMarkup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrganicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrganic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RefrigeratedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRefrigerated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Keep_FrozenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeep_Frozen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Shipper_ItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShipper_Item
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Full_Pallet_OnlyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFull_Pallet_Only
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property User_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUser_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POS_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOS_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Retail_SaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRetail_Sale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Food_StampsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFood_Stamps
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscountable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Price_RequiredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice_Required
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Quantity_RequiredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuantity_Required
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HFM_ItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHFM_Item
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScaleDesc1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScaleDesc1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScaleDesc2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnScaleDesc2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Not_AvailableNoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNot_AvailableNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CountryProc_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountryProc_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Insert_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsert_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Manufacturing_Unit_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManufacturing_Unit_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXEDistributedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXEDistributed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClassIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClassID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property User_ID_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUser_ID_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DistSubTeam_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistSubTeam_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CostedByWeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCostedByWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxClassIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxClassID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LabelType_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabelType_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Category_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ItemRow
            Get
                Return CType(Me.Rows(index),ItemRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemRowChanging As ItemRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemRowChanged As ItemRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemRowDeleting As ItemRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemRowDeleted As ItemRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddItemRow(ByVal row As ItemRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddItemRow( _
                    ByVal Item_Description As String,  _
                    ByVal Sign_Description As String,  _
                    ByVal Ingredients As String,  _
                    ByVal SubTeam_No As Integer,  _
                    ByVal Sales_Account As String,  _
                    ByVal Package_Desc1 As Decimal,  _
                    ByVal Package_Desc2 As Decimal,  _
                    ByVal Package_Unit_ID As Integer,  _
                    ByVal Min_Temperature As Short,  _
                    ByVal Max_Temperature As Short,  _
                    ByVal Units_Per_Pallet As Short,  _
                    ByVal Average_Unit_Weight As Decimal,  _
                    ByVal Tie As Byte,  _
                    ByVal High As Byte,  _
                    ByVal Yield As Decimal,  _
                    ByVal Brand_ID As Integer,  _
                    ByVal Origin_ID As Integer,  _
                    ByVal ShelfLife_Length As Short,  _
                    ByVal ShelfLife_ID As Integer,  _
                    ByVal Retail_Unit_ID As Integer,  _
                    ByVal Vendor_Unit_ID As Integer,  _
                    ByVal Distribution_Unit_ID As Integer,  _
                    ByVal Cost_Unit_ID As Integer,  _
                    ByVal Freight_Unit_ID As Integer,  _
                    ByVal Deleted_Item As Boolean,  _
                    ByVal Discontinue_Item As Boolean,  _
                    ByVal WFM_Item As Boolean,  _
                    ByVal Not_Available As Boolean,  _
                    ByVal Pre_Order As Boolean,  _
                    ByVal Remove_Item As Byte,  _
                    ByVal NoDistMarkup As Boolean,  _
                    ByVal Organic As Boolean,  _
                    ByVal Refrigerated As Boolean,  _
                    ByVal Keep_Frozen As Boolean,  _
                    ByVal Shipper_Item As Boolean,  _
                    ByVal Full_Pallet_Only As Boolean,  _
                    ByVal User_ID As Integer,  _
                    ByVal POS_Description As String,  _
                    ByVal Retail_Sale As Boolean,  _
                    ByVal Food_Stamps As Boolean,  _
                    ByVal Discountable As Boolean,  _
                    ByVal Price_Required As Boolean,  _
                    ByVal Quantity_Required As Boolean,  _
                    ByVal ItemType_ID As Integer,  _
                    ByVal HFM_Item As Boolean,  _
                    ByVal ScaleDesc1 As String,  _
                    ByVal ScaleDesc2 As String,  _
                    ByVal Not_AvailableNote As String,  _
                    ByVal CountryProc_ID As Integer,  _
                    ByVal Insert_Date As Date,  _
                    ByVal Manufacturing_Unit_ID As Integer,  _
                    ByVal EXEDistributed As Boolean,  _
                    ByVal ClassID As Integer,  _
                    ByVal User_ID_Date As Date,  _
                    ByVal DistSubTeam_No As Integer,  _
                    ByVal CostedByWeight As Boolean,  _
                    ByVal TaxClassID As Integer,  _
                    ByVal LabelType_ID As Integer,  _
                    ByVal Category_ID As Integer) As ItemRow
            Dim rowItemRow As ItemRow = CType(Me.NewRow,ItemRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Item_Description, Sign_Description, Ingredients, SubTeam_No, Sales_Account, Package_Desc1, Package_Desc2, Package_Unit_ID, Min_Temperature, Max_Temperature, Units_Per_Pallet, Average_Unit_Weight, Tie, High, Yield, Brand_ID, Origin_ID, ShelfLife_Length, ShelfLife_ID, Retail_Unit_ID, Vendor_Unit_ID, Distribution_Unit_ID, Cost_Unit_ID, Freight_Unit_ID, Deleted_Item, Discontinue_Item, WFM_Item, Not_Available, Pre_Order, Remove_Item, NoDistMarkup, Organic, Refrigerated, Keep_Frozen, Shipper_Item, Full_Pallet_Only, User_ID, POS_Description, Retail_Sale, Food_Stamps, Discountable, Price_Required, Quantity_Required, ItemType_ID, HFM_Item, ScaleDesc1, ScaleDesc2, Not_AvailableNote, CountryProc_ID, Insert_Date, Manufacturing_Unit_ID, EXEDistributed, ClassID, User_ID_Date, DistSubTeam_No, CostedByWeight, TaxClassID, LabelType_ID, Category_ID}
            rowItemRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowItemRow)
            Return rowItemRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByItem_Key(ByVal Item_Key As Integer) As ItemRow
            Return CType(Me.Rows.Find(New Object() {Item_Key}),ItemRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ItemDataTable = CType(MyBase.Clone,ItemDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ItemDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnItem_Key = MyBase.Columns("Item_Key")
            Me.columnItem_Description = MyBase.Columns("Item_Description")
            Me.columnSign_Description = MyBase.Columns("Sign_Description")
            Me.columnIngredients = MyBase.Columns("Ingredients")
            Me.columnSubTeam_No = MyBase.Columns("SubTeam_No")
            Me.columnSales_Account = MyBase.Columns("Sales_Account")
            Me.columnPackage_Desc1 = MyBase.Columns("Package_Desc1")
            Me.columnPackage_Desc2 = MyBase.Columns("Package_Desc2")
            Me.columnPackage_Unit_ID = MyBase.Columns("Package_Unit_ID")
            Me.columnMin_Temperature = MyBase.Columns("Min_Temperature")
            Me.columnMax_Temperature = MyBase.Columns("Max_Temperature")
            Me.columnUnits_Per_Pallet = MyBase.Columns("Units_Per_Pallet")
            Me.columnAverage_Unit_Weight = MyBase.Columns("Average_Unit_Weight")
            Me.columnTie = MyBase.Columns("Tie")
            Me.columnHigh = MyBase.Columns("High")
            Me.columnYield = MyBase.Columns("Yield")
            Me.columnBrand_ID = MyBase.Columns("Brand_ID")
            Me.columnOrigin_ID = MyBase.Columns("Origin_ID")
            Me.columnShelfLife_Length = MyBase.Columns("ShelfLife_Length")
            Me.columnShelfLife_ID = MyBase.Columns("ShelfLife_ID")
            Me.columnRetail_Unit_ID = MyBase.Columns("Retail_Unit_ID")
            Me.columnVendor_Unit_ID = MyBase.Columns("Vendor_Unit_ID")
            Me.columnDistribution_Unit_ID = MyBase.Columns("Distribution_Unit_ID")
            Me.columnCost_Unit_ID = MyBase.Columns("Cost_Unit_ID")
            Me.columnFreight_Unit_ID = MyBase.Columns("Freight_Unit_ID")
            Me.columnDeleted_Item = MyBase.Columns("Deleted_Item")
            Me.columnDiscontinue_Item = MyBase.Columns("Discontinue_Item")
            Me.columnWFM_Item = MyBase.Columns("WFM_Item")
            Me.columnNot_Available = MyBase.Columns("Not_Available")
            Me.columnPre_Order = MyBase.Columns("Pre_Order")
            Me.columnRemove_Item = MyBase.Columns("Remove_Item")
            Me.columnNoDistMarkup = MyBase.Columns("NoDistMarkup")
            Me.columnOrganic = MyBase.Columns("Organic")
            Me.columnRefrigerated = MyBase.Columns("Refrigerated")
            Me.columnKeep_Frozen = MyBase.Columns("Keep_Frozen")
            Me.columnShipper_Item = MyBase.Columns("Shipper_Item")
            Me.columnFull_Pallet_Only = MyBase.Columns("Full_Pallet_Only")
            Me.columnUser_ID = MyBase.Columns("User_ID")
            Me.columnPOS_Description = MyBase.Columns("POS_Description")
            Me.columnRetail_Sale = MyBase.Columns("Retail_Sale")
            Me.columnFood_Stamps = MyBase.Columns("Food_Stamps")
            Me.columnDiscountable = MyBase.Columns("Discountable")
            Me.columnPrice_Required = MyBase.Columns("Price_Required")
            Me.columnQuantity_Required = MyBase.Columns("Quantity_Required")
            Me.columnItemType_ID = MyBase.Columns("ItemType_ID")
            Me.columnHFM_Item = MyBase.Columns("HFM_Item")
            Me.columnScaleDesc1 = MyBase.Columns("ScaleDesc1")
            Me.columnScaleDesc2 = MyBase.Columns("ScaleDesc2")
            Me.columnNot_AvailableNote = MyBase.Columns("Not_AvailableNote")
            Me.columnCountryProc_ID = MyBase.Columns("CountryProc_ID")
            Me.columnInsert_Date = MyBase.Columns("Insert_Date")
            Me.columnManufacturing_Unit_ID = MyBase.Columns("Manufacturing_Unit_ID")
            Me.columnEXEDistributed = MyBase.Columns("EXEDistributed")
            Me.columnClassID = MyBase.Columns("ClassID")
            Me.columnUser_ID_Date = MyBase.Columns("User_ID_Date")
            Me.columnDistSubTeam_No = MyBase.Columns("DistSubTeam_No")
            Me.columnCostedByWeight = MyBase.Columns("CostedByWeight")
            Me.columnTaxClassID = MyBase.Columns("TaxClassID")
            Me.columnLabelType_ID = MyBase.Columns("LabelType_ID")
            Me.columnCategory_ID = MyBase.Columns("Category_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnItem_Key = New Global.System.Data.DataColumn("Item_Key", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Key)
            Me.columnItem_Description = New Global.System.Data.DataColumn("Item_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Description)
            Me.columnSign_Description = New Global.System.Data.DataColumn("Sign_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSign_Description)
            Me.columnIngredients = New Global.System.Data.DataColumn("Ingredients", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIngredients)
            Me.columnSubTeam_No = New Global.System.Data.DataColumn("SubTeam_No", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTeam_No)
            Me.columnSales_Account = New Global.System.Data.DataColumn("Sales_Account", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSales_Account)
            Me.columnPackage_Desc1 = New Global.System.Data.DataColumn("Package_Desc1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Desc1)
            Me.columnPackage_Desc2 = New Global.System.Data.DataColumn("Package_Desc2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Desc2)
            Me.columnPackage_Unit_ID = New Global.System.Data.DataColumn("Package_Unit_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Unit_ID)
            Me.columnMin_Temperature = New Global.System.Data.DataColumn("Min_Temperature", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMin_Temperature)
            Me.columnMax_Temperature = New Global.System.Data.DataColumn("Max_Temperature", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMax_Temperature)
            Me.columnUnits_Per_Pallet = New Global.System.Data.DataColumn("Units_Per_Pallet", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnits_Per_Pallet)
            Me.columnAverage_Unit_Weight = New Global.System.Data.DataColumn("Average_Unit_Weight", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAverage_Unit_Weight)
            Me.columnTie = New Global.System.Data.DataColumn("Tie", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTie)
            Me.columnHigh = New Global.System.Data.DataColumn("High", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHigh)
            Me.columnYield = New Global.System.Data.DataColumn("Yield", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYield)
            Me.columnBrand_ID = New Global.System.Data.DataColumn("Brand_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrand_ID)
            Me.columnOrigin_ID = New Global.System.Data.DataColumn("Origin_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrigin_ID)
            Me.columnShelfLife_Length = New Global.System.Data.DataColumn("ShelfLife_Length", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShelfLife_Length)
            Me.columnShelfLife_ID = New Global.System.Data.DataColumn("ShelfLife_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShelfLife_ID)
            Me.columnRetail_Unit_ID = New Global.System.Data.DataColumn("Retail_Unit_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRetail_Unit_ID)
            Me.columnVendor_Unit_ID = New Global.System.Data.DataColumn("Vendor_Unit_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVendor_Unit_ID)
            Me.columnDistribution_Unit_ID = New Global.System.Data.DataColumn("Distribution_Unit_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistribution_Unit_ID)
            Me.columnCost_Unit_ID = New Global.System.Data.DataColumn("Cost_Unit_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCost_Unit_ID)
            Me.columnFreight_Unit_ID = New Global.System.Data.DataColumn("Freight_Unit_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreight_Unit_ID)
            Me.columnDeleted_Item = New Global.System.Data.DataColumn("Deleted_Item", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeleted_Item)
            Me.columnDiscontinue_Item = New Global.System.Data.DataColumn("Discontinue_Item", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscontinue_Item)
            Me.columnWFM_Item = New Global.System.Data.DataColumn("WFM_Item", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWFM_Item)
            Me.columnNot_Available = New Global.System.Data.DataColumn("Not_Available", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNot_Available)
            Me.columnPre_Order = New Global.System.Data.DataColumn("Pre_Order", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPre_Order)
            Me.columnRemove_Item = New Global.System.Data.DataColumn("Remove_Item", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemove_Item)
            Me.columnNoDistMarkup = New Global.System.Data.DataColumn("NoDistMarkup", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoDistMarkup)
            Me.columnOrganic = New Global.System.Data.DataColumn("Organic", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrganic)
            Me.columnRefrigerated = New Global.System.Data.DataColumn("Refrigerated", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRefrigerated)
            Me.columnKeep_Frozen = New Global.System.Data.DataColumn("Keep_Frozen", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeep_Frozen)
            Me.columnShipper_Item = New Global.System.Data.DataColumn("Shipper_Item", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShipper_Item)
            Me.columnFull_Pallet_Only = New Global.System.Data.DataColumn("Full_Pallet_Only", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFull_Pallet_Only)
            Me.columnUser_ID = New Global.System.Data.DataColumn("User_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUser_ID)
            Me.columnPOS_Description = New Global.System.Data.DataColumn("POS_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOS_Description)
            Me.columnRetail_Sale = New Global.System.Data.DataColumn("Retail_Sale", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRetail_Sale)
            Me.columnFood_Stamps = New Global.System.Data.DataColumn("Food_Stamps", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFood_Stamps)
            Me.columnDiscountable = New Global.System.Data.DataColumn("Discountable", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscountable)
            Me.columnPrice_Required = New Global.System.Data.DataColumn("Price_Required", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice_Required)
            Me.columnQuantity_Required = New Global.System.Data.DataColumn("Quantity_Required", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuantity_Required)
            Me.columnItemType_ID = New Global.System.Data.DataColumn("ItemType_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemType_ID)
            Me.columnHFM_Item = New Global.System.Data.DataColumn("HFM_Item", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHFM_Item)
            Me.columnScaleDesc1 = New Global.System.Data.DataColumn("ScaleDesc1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScaleDesc1)
            Me.columnScaleDesc2 = New Global.System.Data.DataColumn("ScaleDesc2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScaleDesc2)
            Me.columnNot_AvailableNote = New Global.System.Data.DataColumn("Not_AvailableNote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNot_AvailableNote)
            Me.columnCountryProc_ID = New Global.System.Data.DataColumn("CountryProc_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountryProc_ID)
            Me.columnInsert_Date = New Global.System.Data.DataColumn("Insert_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsert_Date)
            Me.columnManufacturing_Unit_ID = New Global.System.Data.DataColumn("Manufacturing_Unit_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManufacturing_Unit_ID)
            Me.columnEXEDistributed = New Global.System.Data.DataColumn("EXEDistributed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXEDistributed)
            Me.columnClassID = New Global.System.Data.DataColumn("ClassID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClassID)
            Me.columnUser_ID_Date = New Global.System.Data.DataColumn("User_ID_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUser_ID_Date)
            Me.columnDistSubTeam_No = New Global.System.Data.DataColumn("DistSubTeam_No", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistSubTeam_No)
            Me.columnCostedByWeight = New Global.System.Data.DataColumn("CostedByWeight", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCostedByWeight)
            Me.columnTaxClassID = New Global.System.Data.DataColumn("TaxClassID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxClassID)
            Me.columnLabelType_ID = New Global.System.Data.DataColumn("LabelType_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabelType_ID)
            Me.columnCategory_ID = New Global.System.Data.DataColumn("Category_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnItem_Key}, true))
            Me.columnItem_Key.AutoIncrement = true
            Me.columnItem_Key.AllowDBNull = false
            Me.columnItem_Key.ReadOnly = true
            Me.columnItem_Key.Unique = true
            Me.columnItem_Description.AllowDBNull = false
            Me.columnItem_Description.MaxLength = 60
            Me.columnSign_Description.MaxLength = 60
            Me.columnIngredients.MaxLength = 3500
            Me.columnSubTeam_No.AllowDBNull = false
            Me.columnSales_Account.MaxLength = 6
            Me.columnPackage_Desc1.AllowDBNull = false
            Me.columnPackage_Desc2.AllowDBNull = false
            Me.columnPackage_Unit_ID.AllowDBNull = false
            Me.columnRetail_Unit_ID.AllowDBNull = false
            Me.columnVendor_Unit_ID.AllowDBNull = false
            Me.columnDistribution_Unit_ID.AllowDBNull = false
            Me.columnCost_Unit_ID.AllowDBNull = false
            Me.columnFreight_Unit_ID.AllowDBNull = false
            Me.columnPOS_Description.AllowDBNull = false
            Me.columnPOS_Description.MaxLength = 26
            Me.columnRetail_Sale.AllowDBNull = false
            Me.columnScaleDesc1.MaxLength = 64
            Me.columnScaleDesc2.MaxLength = 64
            Me.columnNot_AvailableNote.MaxLength = 255
            Me.columnInsert_Date.AllowDBNull = false
            Me.columnCostedByWeight.AllowDBNull = false
            Me.ExtendedProperties.Add("Generator_RowClassName", "ItemRow")
            Me.ExtendedProperties.Add("Generator_RowEvArgName", "ItemRowChangeEvent")
            Me.ExtendedProperties.Add("Generator_RowEvHandlerName", "ItemRowChangeEventHandler")
            Me.ExtendedProperties.Add("Generator_TableClassName", "ItemDataTable")
            Me.ExtendedProperties.Add("Generator_TablePropName", "Item")
            Me.ExtendedProperties.Add("Generator_TableVarName", "tableItem")
            Me.ExtendedProperties.Add("Generator_UserTableName", "Item")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewItemRow() As ItemRow
            Return CType(Me.NewRow,ItemRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ItemRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ItemRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ItemRowChangedEvent) Is Nothing) Then
                RaiseEvent ItemRowChanged(Me, New ItemRowChangeEvent(CType(e.Row,ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ItemRowChangingEvent) Is Nothing) Then
                RaiseEvent ItemRowChanging(Me, New ItemRowChangeEvent(CType(e.Row,ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ItemRowDeletedEvent) Is Nothing) Then
                RaiseEvent ItemRowDeleted(Me, New ItemRowChangeEvent(CType(e.Row,ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ItemRowDeletingEvent) Is Nothing) Then
                RaiseEvent ItemRowDeleting(Me, New ItemRowChangeEvent(CType(e.Row,ItemRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveItemRow(ByVal row As ItemRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IrmaItem = New IrmaItem()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ItemDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SLIM_GetItemOverrideDataTable
        Inherits Global.System.Data.TypedTableBase(Of SLIM_GetItemOverrideRow)
        
        Private columnitem_key As Global.System.Data.DataColumn
        
        Private columnItem_Description As Global.System.Data.DataColumn
        
        Private columnPackage_Desc1 As Global.System.Data.DataColumn
        
        Private columnPackage_Desc2 As Global.System.Data.DataColumn
        
        Private columnUnit_name As Global.System.Data.DataColumn
        
        Private columnStoreJurisdictionDesc As Global.System.Data.DataColumn
        
        Private columnStoreJurisdictionID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SLIM_GetItemOverride"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property item_keyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitem_key
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Package_Desc1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Desc1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Package_Desc2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackage_Desc2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Unit_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnit_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StoreJurisdictionDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStoreJurisdictionDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StoreJurisdictionIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStoreJurisdictionID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SLIM_GetItemOverrideRow
            Get
                Return CType(Me.Rows(index),SLIM_GetItemOverrideRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SLIM_GetItemOverrideRowChanging As SLIM_GetItemOverrideRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SLIM_GetItemOverrideRowChanged As SLIM_GetItemOverrideRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SLIM_GetItemOverrideRowDeleting As SLIM_GetItemOverrideRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SLIM_GetItemOverrideRowDeleted As SLIM_GetItemOverrideRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSLIM_GetItemOverrideRow(ByVal row As SLIM_GetItemOverrideRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSLIM_GetItemOverrideRow(ByVal item_key As Integer, ByVal Item_Description As String, ByVal Package_Desc1 As Decimal, ByVal Package_Desc2 As Decimal, ByVal Unit_name As String, ByVal StoreJurisdictionDesc As String) As SLIM_GetItemOverrideRow
            Dim rowSLIM_GetItemOverrideRow As SLIM_GetItemOverrideRow = CType(Me.NewRow,SLIM_GetItemOverrideRow)
            Dim columnValuesArray() As Object = New Object() {item_key, Item_Description, Package_Desc1, Package_Desc2, Unit_name, StoreJurisdictionDesc, Nothing}
            rowSLIM_GetItemOverrideRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSLIM_GetItemOverrideRow)
            Return rowSLIM_GetItemOverrideRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SLIM_GetItemOverrideDataTable = CType(MyBase.Clone,SLIM_GetItemOverrideDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SLIM_GetItemOverrideDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnitem_key = MyBase.Columns("item_key")
            Me.columnItem_Description = MyBase.Columns("Item_Description")
            Me.columnPackage_Desc1 = MyBase.Columns("Package_Desc1")
            Me.columnPackage_Desc2 = MyBase.Columns("Package_Desc2")
            Me.columnUnit_name = MyBase.Columns("Unit_name")
            Me.columnStoreJurisdictionDesc = MyBase.Columns("StoreJurisdictionDesc")
            Me.columnStoreJurisdictionID = MyBase.Columns("StoreJurisdictionID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnitem_key = New Global.System.Data.DataColumn("item_key", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitem_key)
            Me.columnItem_Description = New Global.System.Data.DataColumn("Item_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Description)
            Me.columnPackage_Desc1 = New Global.System.Data.DataColumn("Package_Desc1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Desc1)
            Me.columnPackage_Desc2 = New Global.System.Data.DataColumn("Package_Desc2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackage_Desc2)
            Me.columnUnit_name = New Global.System.Data.DataColumn("Unit_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnit_name)
            Me.columnStoreJurisdictionDesc = New Global.System.Data.DataColumn("StoreJurisdictionDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStoreJurisdictionDesc)
            Me.columnStoreJurisdictionID = New Global.System.Data.DataColumn("StoreJurisdictionID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStoreJurisdictionID)
            Me.columnitem_key.AllowDBNull = false
            Me.columnItem_Description.AllowDBNull = false
            Me.columnItem_Description.MaxLength = 60
            Me.columnPackage_Desc1.AllowDBNull = false
            Me.columnPackage_Desc2.AllowDBNull = false
            Me.columnUnit_name.AllowDBNull = false
            Me.columnUnit_name.MaxLength = 25
            Me.columnStoreJurisdictionDesc.AllowDBNull = false
            Me.columnStoreJurisdictionDesc.MaxLength = 30
            Me.columnStoreJurisdictionID.AutoIncrement = true
            Me.columnStoreJurisdictionID.AllowDBNull = false
            Me.columnStoreJurisdictionID.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSLIM_GetItemOverrideRow() As SLIM_GetItemOverrideRow
            Return CType(Me.NewRow,SLIM_GetItemOverrideRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SLIM_GetItemOverrideRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SLIM_GetItemOverrideRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SLIM_GetItemOverrideRowChangedEvent) Is Nothing) Then
                RaiseEvent SLIM_GetItemOverrideRowChanged(Me, New SLIM_GetItemOverrideRowChangeEvent(CType(e.Row,SLIM_GetItemOverrideRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SLIM_GetItemOverrideRowChangingEvent) Is Nothing) Then
                RaiseEvent SLIM_GetItemOverrideRowChanging(Me, New SLIM_GetItemOverrideRowChangeEvent(CType(e.Row,SLIM_GetItemOverrideRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SLIM_GetItemOverrideRowDeletedEvent) Is Nothing) Then
                RaiseEvent SLIM_GetItemOverrideRowDeleted(Me, New SLIM_GetItemOverrideRowChangeEvent(CType(e.Row,SLIM_GetItemOverrideRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SLIM_GetItemOverrideRowDeletingEvent) Is Nothing) Then
                RaiseEvent SLIM_GetItemOverrideRowDeleting(Me, New SLIM_GetItemOverrideRowChangeEvent(CType(e.Row,SLIM_GetItemOverrideRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSLIM_GetItemOverrideRow(ByVal row As SLIM_GetItemOverrideRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As IrmaItem = New IrmaItem()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SLIM_GetItemOverrideDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ItemRow
        Inherits Global.System.Data.DataRow
        
        Private tableItem As ItemDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableItem = CType(Me.Table,ItemDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Key() As Integer
            Get
                Return CType(Me(Me.tableItem.Item_KeyColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.Item_KeyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Description() As String
            Get
                Return CType(Me(Me.tableItem.Item_DescriptionColumn),String)
            End Get
            Set
                Me(Me.tableItem.Item_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sign_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableItem.Sign_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sign_Description' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Sign_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ingredients() As String
            Get
                Try 
                    Return CType(Me(Me.tableItem.IngredientsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ingredients' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.IngredientsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubTeam_No() As Integer
            Get
                Return CType(Me(Me.tableItem.SubTeam_NoColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.SubTeam_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sales_Account() As String
            Get
                Try 
                    Return CType(Me(Me.tableItem.Sales_AccountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sales_Account' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Sales_AccountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Package_Desc1() As Decimal
            Get
                Return CType(Me(Me.tableItem.Package_Desc1Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Package_Desc1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Package_Desc2() As Decimal
            Get
                Return CType(Me(Me.tableItem.Package_Desc2Column),Decimal)
            End Get
            Set
                Me(Me.tableItem.Package_Desc2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Package_Unit_ID() As Integer
            Get
                Return CType(Me(Me.tableItem.Package_Unit_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.Package_Unit_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Min_Temperature() As Short
            Get
                Try 
                    Return CType(Me(Me.tableItem.Min_TemperatureColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Min_Temperature' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Min_TemperatureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Max_Temperature() As Short
            Get
                Try 
                    Return CType(Me(Me.tableItem.Max_TemperatureColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Max_Temperature' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Max_TemperatureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Units_Per_Pallet() As Short
            Get
                Try 
                    Return CType(Me(Me.tableItem.Units_Per_PalletColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Units_Per_Pallet' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Units_Per_PalletColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Average_Unit_Weight() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableItem.Average_Unit_WeightColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Average_Unit_Weight' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Average_Unit_WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Tie() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableItem.TieColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tie' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.TieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property High() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableItem.HighColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'High' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.HighColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Yield() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableItem.YieldColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Yield' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.YieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Brand_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Brand_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Brand_ID' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Brand_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Origin_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Origin_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Origin_ID' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Origin_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ShelfLife_Length() As Short
            Get
                Try 
                    Return CType(Me(Me.tableItem.ShelfLife_LengthColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShelfLife_Length' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.ShelfLife_LengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ShelfLife_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.ShelfLife_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShelfLife_ID' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.ShelfLife_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Retail_Unit_ID() As Integer
            Get
                Return CType(Me(Me.tableItem.Retail_Unit_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.Retail_Unit_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Vendor_Unit_ID() As Integer
            Get
                Return CType(Me(Me.tableItem.Vendor_Unit_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.Vendor_Unit_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Distribution_Unit_ID() As Integer
            Get
                Return CType(Me(Me.tableItem.Distribution_Unit_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.Distribution_Unit_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cost_Unit_ID() As Integer
            Get
                Return CType(Me(Me.tableItem.Cost_Unit_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.Cost_Unit_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Freight_Unit_ID() As Integer
            Get
                Return CType(Me(Me.tableItem.Freight_Unit_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableItem.Freight_Unit_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deleted_Item() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.Deleted_ItemColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Deleted_Item' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Deleted_ItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discontinue_Item() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.Discontinue_ItemColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discontinue_Item' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Discontinue_ItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WFM_Item() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.WFM_ItemColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WFM_Item' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.WFM_ItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Not_Available() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.Not_AvailableColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Not_Available' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Not_AvailableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pre_Order() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.Pre_OrderColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pre_Order' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Pre_OrderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remove_Item() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableItem.Remove_ItemColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remove_Item' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Remove_ItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoDistMarkup() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.NoDistMarkupColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoDistMarkup' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.NoDistMarkupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Organic() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.OrganicColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Organic' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.OrganicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Refrigerated() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.RefrigeratedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Refrigerated' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.RefrigeratedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Keep_Frozen() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.Keep_FrozenColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Keep_Frozen' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Keep_FrozenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Shipper_Item() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.Shipper_ItemColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shipper_Item' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Shipper_ItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Full_Pallet_Only() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.Full_Pallet_OnlyColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Full_Pallet_Only' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Full_Pallet_OnlyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property User_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.User_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'User_ID' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.User_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POS_Description() As String
            Get
                Return CType(Me(Me.tableItem.POS_DescriptionColumn),String)
            End Get
            Set
                Me(Me.tableItem.POS_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Retail_Sale() As Boolean
            Get
                Return CType(Me(Me.tableItem.Retail_SaleColumn),Boolean)
            End Get
            Set
                Me(Me.tableItem.Retail_SaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Food_Stamps() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.Food_StampsColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Food_Stamps' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Food_StampsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discountable() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.DiscountableColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discountable' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.DiscountableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price_Required() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.Price_RequiredColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price_Required' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Price_RequiredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Quantity_Required() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.Quantity_RequiredColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Quantity_Required' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Quantity_RequiredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemType_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.ItemType_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemType_ID' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.ItemType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HFM_Item() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.HFM_ItemColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HFM_Item' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.HFM_ItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ScaleDesc1() As String
            Get
                Try 
                    Return CType(Me(Me.tableItem.ScaleDesc1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ScaleDesc1' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.ScaleDesc1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ScaleDesc2() As String
            Get
                Try 
                    Return CType(Me(Me.tableItem.ScaleDesc2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ScaleDesc2' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.ScaleDesc2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Not_AvailableNote() As String
            Get
                Try 
                    Return CType(Me(Me.tableItem.Not_AvailableNoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Not_AvailableNote' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Not_AvailableNoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CountryProc_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.CountryProc_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CountryProc_ID' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.CountryProc_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Insert_Date() As Date
            Get
                Return CType(Me(Me.tableItem.Insert_DateColumn),Date)
            End Get
            Set
                Me(Me.tableItem.Insert_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Manufacturing_Unit_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Manufacturing_Unit_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Manufacturing_Unit_ID' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Manufacturing_Unit_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXEDistributed() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableItem.EXEDistributedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXEDistributed' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.EXEDistributedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClassID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.ClassIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClassID' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.ClassIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property User_ID_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableItem.User_ID_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'User_ID_Date' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.User_ID_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DistSubTeam_No() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.DistSubTeam_NoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DistSubTeam_No' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.DistSubTeam_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CostedByWeight() As Boolean
            Get
                Return CType(Me(Me.tableItem.CostedByWeightColumn),Boolean)
            End Get
            Set
                Me(Me.tableItem.CostedByWeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TaxClassID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.TaxClassIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TaxClassID' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.TaxClassIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LabelType_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.LabelType_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LabelType_ID' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.LabelType_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Category_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableItem.Category_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Category_ID' in table 'Item' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItem.Category_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSign_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableItem.Sign_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSign_DescriptionNull()
            Me(Me.tableItem.Sign_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIngredientsNull() As Boolean
            Return Me.IsNull(Me.tableItem.IngredientsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIngredientsNull()
            Me(Me.tableItem.IngredientsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSales_AccountNull() As Boolean
            Return Me.IsNull(Me.tableItem.Sales_AccountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSales_AccountNull()
            Me(Me.tableItem.Sales_AccountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMin_TemperatureNull() As Boolean
            Return Me.IsNull(Me.tableItem.Min_TemperatureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMin_TemperatureNull()
            Me(Me.tableItem.Min_TemperatureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMax_TemperatureNull() As Boolean
            Return Me.IsNull(Me.tableItem.Max_TemperatureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMax_TemperatureNull()
            Me(Me.tableItem.Max_TemperatureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnits_Per_PalletNull() As Boolean
            Return Me.IsNull(Me.tableItem.Units_Per_PalletColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnits_Per_PalletNull()
            Me(Me.tableItem.Units_Per_PalletColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAverage_Unit_WeightNull() As Boolean
            Return Me.IsNull(Me.tableItem.Average_Unit_WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAverage_Unit_WeightNull()
            Me(Me.tableItem.Average_Unit_WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTieNull() As Boolean
            Return Me.IsNull(Me.tableItem.TieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTieNull()
            Me(Me.tableItem.TieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHighNull() As Boolean
            Return Me.IsNull(Me.tableItem.HighColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHighNull()
            Me(Me.tableItem.HighColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYieldNull() As Boolean
            Return Me.IsNull(Me.tableItem.YieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYieldNull()
            Me(Me.tableItem.YieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBrand_IDNull() As Boolean
            Return Me.IsNull(Me.tableItem.Brand_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBrand_IDNull()
            Me(Me.tableItem.Brand_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrigin_IDNull() As Boolean
            Return Me.IsNull(Me.tableItem.Origin_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrigin_IDNull()
            Me(Me.tableItem.Origin_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsShelfLife_LengthNull() As Boolean
            Return Me.IsNull(Me.tableItem.ShelfLife_LengthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetShelfLife_LengthNull()
            Me(Me.tableItem.ShelfLife_LengthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsShelfLife_IDNull() As Boolean
            Return Me.IsNull(Me.tableItem.ShelfLife_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetShelfLife_IDNull()
            Me(Me.tableItem.ShelfLife_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDeleted_ItemNull() As Boolean
            Return Me.IsNull(Me.tableItem.Deleted_ItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDeleted_ItemNull()
            Me(Me.tableItem.Deleted_ItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiscontinue_ItemNull() As Boolean
            Return Me.IsNull(Me.tableItem.Discontinue_ItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiscontinue_ItemNull()
            Me(Me.tableItem.Discontinue_ItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWFM_ItemNull() As Boolean
            Return Me.IsNull(Me.tableItem.WFM_ItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWFM_ItemNull()
            Me(Me.tableItem.WFM_ItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNot_AvailableNull() As Boolean
            Return Me.IsNull(Me.tableItem.Not_AvailableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNot_AvailableNull()
            Me(Me.tableItem.Not_AvailableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPre_OrderNull() As Boolean
            Return Me.IsNull(Me.tableItem.Pre_OrderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPre_OrderNull()
            Me(Me.tableItem.Pre_OrderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemove_ItemNull() As Boolean
            Return Me.IsNull(Me.tableItem.Remove_ItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemove_ItemNull()
            Me(Me.tableItem.Remove_ItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoDistMarkupNull() As Boolean
            Return Me.IsNull(Me.tableItem.NoDistMarkupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoDistMarkupNull()
            Me(Me.tableItem.NoDistMarkupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrganicNull() As Boolean
            Return Me.IsNull(Me.tableItem.OrganicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrganicNull()
            Me(Me.tableItem.OrganicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRefrigeratedNull() As Boolean
            Return Me.IsNull(Me.tableItem.RefrigeratedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRefrigeratedNull()
            Me(Me.tableItem.RefrigeratedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeep_FrozenNull() As Boolean
            Return Me.IsNull(Me.tableItem.Keep_FrozenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeep_FrozenNull()
            Me(Me.tableItem.Keep_FrozenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsShipper_ItemNull() As Boolean
            Return Me.IsNull(Me.tableItem.Shipper_ItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetShipper_ItemNull()
            Me(Me.tableItem.Shipper_ItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFull_Pallet_OnlyNull() As Boolean
            Return Me.IsNull(Me.tableItem.Full_Pallet_OnlyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFull_Pallet_OnlyNull()
            Me(Me.tableItem.Full_Pallet_OnlyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUser_IDNull() As Boolean
            Return Me.IsNull(Me.tableItem.User_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUser_IDNull()
            Me(Me.tableItem.User_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFood_StampsNull() As Boolean
            Return Me.IsNull(Me.tableItem.Food_StampsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFood_StampsNull()
            Me(Me.tableItem.Food_StampsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiscountableNull() As Boolean
            Return Me.IsNull(Me.tableItem.DiscountableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiscountableNull()
            Me(Me.tableItem.DiscountableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrice_RequiredNull() As Boolean
            Return Me.IsNull(Me.tableItem.Price_RequiredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrice_RequiredNull()
            Me(Me.tableItem.Price_RequiredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuantity_RequiredNull() As Boolean
            Return Me.IsNull(Me.tableItem.Quantity_RequiredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuantity_RequiredNull()
            Me(Me.tableItem.Quantity_RequiredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemType_IDNull() As Boolean
            Return Me.IsNull(Me.tableItem.ItemType_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemType_IDNull()
            Me(Me.tableItem.ItemType_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHFM_ItemNull() As Boolean
            Return Me.IsNull(Me.tableItem.HFM_ItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHFM_ItemNull()
            Me(Me.tableItem.HFM_ItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsScaleDesc1Null() As Boolean
            Return Me.IsNull(Me.tableItem.ScaleDesc1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetScaleDesc1Null()
            Me(Me.tableItem.ScaleDesc1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsScaleDesc2Null() As Boolean
            Return Me.IsNull(Me.tableItem.ScaleDesc2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetScaleDesc2Null()
            Me(Me.tableItem.ScaleDesc2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNot_AvailableNoteNull() As Boolean
            Return Me.IsNull(Me.tableItem.Not_AvailableNoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNot_AvailableNoteNull()
            Me(Me.tableItem.Not_AvailableNoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCountryProc_IDNull() As Boolean
            Return Me.IsNull(Me.tableItem.CountryProc_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCountryProc_IDNull()
            Me(Me.tableItem.CountryProc_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsManufacturing_Unit_IDNull() As Boolean
            Return Me.IsNull(Me.tableItem.Manufacturing_Unit_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetManufacturing_Unit_IDNull()
            Me(Me.tableItem.Manufacturing_Unit_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXEDistributedNull() As Boolean
            Return Me.IsNull(Me.tableItem.EXEDistributedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXEDistributedNull()
            Me(Me.tableItem.EXEDistributedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClassIDNull() As Boolean
            Return Me.IsNull(Me.tableItem.ClassIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClassIDNull()
            Me(Me.tableItem.ClassIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUser_ID_DateNull() As Boolean
            Return Me.IsNull(Me.tableItem.User_ID_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUser_ID_DateNull()
            Me(Me.tableItem.User_ID_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDistSubTeam_NoNull() As Boolean
            Return Me.IsNull(Me.tableItem.DistSubTeam_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDistSubTeam_NoNull()
            Me(Me.tableItem.DistSubTeam_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxClassIDNull() As Boolean
            Return Me.IsNull(Me.tableItem.TaxClassIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxClassIDNull()
            Me(Me.tableItem.TaxClassIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLabelType_IDNull() As Boolean
            Return Me.IsNull(Me.tableItem.LabelType_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLabelType_IDNull()
            Me(Me.tableItem.LabelType_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCategory_IDNull() As Boolean
            Return Me.IsNull(Me.tableItem.Category_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCategory_IDNull()
            Me(Me.tableItem.Category_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SLIM_GetItemOverrideRow
        Inherits Global.System.Data.DataRow
        
        Private tableSLIM_GetItemOverride As SLIM_GetItemOverrideDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSLIM_GetItemOverride = CType(Me.Table,SLIM_GetItemOverrideDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property item_key() As Integer
            Get
                Return CType(Me(Me.tableSLIM_GetItemOverride.item_keyColumn),Integer)
            End Get
            Set
                Me(Me.tableSLIM_GetItemOverride.item_keyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Description() As String
            Get
                Return CType(Me(Me.tableSLIM_GetItemOverride.Item_DescriptionColumn),String)
            End Get
            Set
                Me(Me.tableSLIM_GetItemOverride.Item_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Package_Desc1() As Decimal
            Get
                Return CType(Me(Me.tableSLIM_GetItemOverride.Package_Desc1Column),Decimal)
            End Get
            Set
                Me(Me.tableSLIM_GetItemOverride.Package_Desc1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Package_Desc2() As Decimal
            Get
                Return CType(Me(Me.tableSLIM_GetItemOverride.Package_Desc2Column),Decimal)
            End Get
            Set
                Me(Me.tableSLIM_GetItemOverride.Package_Desc2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unit_name() As String
            Get
                Return CType(Me(Me.tableSLIM_GetItemOverride.Unit_nameColumn),String)
            End Get
            Set
                Me(Me.tableSLIM_GetItemOverride.Unit_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StoreJurisdictionDesc() As String
            Get
                Return CType(Me(Me.tableSLIM_GetItemOverride.StoreJurisdictionDescColumn),String)
            End Get
            Set
                Me(Me.tableSLIM_GetItemOverride.StoreJurisdictionDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StoreJurisdictionID() As Integer
            Get
                Return CType(Me(Me.tableSLIM_GetItemOverride.StoreJurisdictionIDColumn),Integer)
            End Get
            Set
                Me(Me.tableSLIM_GetItemOverride.StoreJurisdictionIDColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ItemRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ItemRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ItemRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ItemRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SLIM_GetItemOverrideRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SLIM_GetItemOverrideRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SLIM_GetItemOverrideRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SLIM_GetItemOverrideRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace IrmaItemTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ItemTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Item"
            tableMapping.ColumnMappings.Add("Item_Key", "Item_Key")
            tableMapping.ColumnMappings.Add("Item_Description", "Item_Description")
            tableMapping.ColumnMappings.Add("Sign_Description", "Sign_Description")
            tableMapping.ColumnMappings.Add("Ingredients", "Ingredients")
            tableMapping.ColumnMappings.Add("SubTeam_No", "SubTeam_No")
            tableMapping.ColumnMappings.Add("Sales_Account", "Sales_Account")
            tableMapping.ColumnMappings.Add("Package_Desc1", "Package_Desc1")
            tableMapping.ColumnMappings.Add("Package_Desc2", "Package_Desc2")
            tableMapping.ColumnMappings.Add("Package_Unit_ID", "Package_Unit_ID")
            tableMapping.ColumnMappings.Add("Min_Temperature", "Min_Temperature")
            tableMapping.ColumnMappings.Add("Max_Temperature", "Max_Temperature")
            tableMapping.ColumnMappings.Add("Units_Per_Pallet", "Units_Per_Pallet")
            tableMapping.ColumnMappings.Add("Average_Unit_Weight", "Average_Unit_Weight")
            tableMapping.ColumnMappings.Add("Tie", "Tie")
            tableMapping.ColumnMappings.Add("High", "High")
            tableMapping.ColumnMappings.Add("Yield", "Yield")
            tableMapping.ColumnMappings.Add("Brand_ID", "Brand_ID")
            tableMapping.ColumnMappings.Add("Origin_ID", "Origin_ID")
            tableMapping.ColumnMappings.Add("ShelfLife_Length", "ShelfLife_Length")
            tableMapping.ColumnMappings.Add("ShelfLife_ID", "ShelfLife_ID")
            tableMapping.ColumnMappings.Add("Retail_Unit_ID", "Retail_Unit_ID")
            tableMapping.ColumnMappings.Add("Vendor_Unit_ID", "Vendor_Unit_ID")
            tableMapping.ColumnMappings.Add("Distribution_Unit_ID", "Distribution_Unit_ID")
            tableMapping.ColumnMappings.Add("Cost_Unit_ID", "Cost_Unit_ID")
            tableMapping.ColumnMappings.Add("Freight_Unit_ID", "Freight_Unit_ID")
            tableMapping.ColumnMappings.Add("Deleted_Item", "Deleted_Item")
            tableMapping.ColumnMappings.Add("Discontinue_Item", "Discontinue_Item")
            tableMapping.ColumnMappings.Add("WFM_Item", "WFM_Item")
            tableMapping.ColumnMappings.Add("Not_Available", "Not_Available")
            tableMapping.ColumnMappings.Add("Pre_Order", "Pre_Order")
            tableMapping.ColumnMappings.Add("Remove_Item", "Remove_Item")
            tableMapping.ColumnMappings.Add("NoDistMarkup", "NoDistMarkup")
            tableMapping.ColumnMappings.Add("Organic", "Organic")
            tableMapping.ColumnMappings.Add("Refrigerated", "Refrigerated")
            tableMapping.ColumnMappings.Add("Keep_Frozen", "Keep_Frozen")
            tableMapping.ColumnMappings.Add("Shipper_Item", "Shipper_Item")
            tableMapping.ColumnMappings.Add("Full_Pallet_Only", "Full_Pallet_Only")
            tableMapping.ColumnMappings.Add("User_ID", "User_ID")
            tableMapping.ColumnMappings.Add("POS_Description", "POS_Description")
            tableMapping.ColumnMappings.Add("Retail_Sale", "Retail_Sale")
            tableMapping.ColumnMappings.Add("Food_Stamps", "Food_Stamps")
            tableMapping.ColumnMappings.Add("Discountable", "Discountable")
            tableMapping.ColumnMappings.Add("Price_Required", "Price_Required")
            tableMapping.ColumnMappings.Add("Quantity_Required", "Quantity_Required")
            tableMapping.ColumnMappings.Add("ItemType_ID", "ItemType_ID")
            tableMapping.ColumnMappings.Add("HFM_Item", "HFM_Item")
            tableMapping.ColumnMappings.Add("ScaleDesc1", "ScaleDesc1")
            tableMapping.ColumnMappings.Add("ScaleDesc2", "ScaleDesc2")
            tableMapping.ColumnMappings.Add("Not_AvailableNote", "Not_AvailableNote")
            tableMapping.ColumnMappings.Add("CountryProc_ID", "CountryProc_ID")
            tableMapping.ColumnMappings.Add("Insert_Date", "Insert_Date")
            tableMapping.ColumnMappings.Add("Manufacturing_Unit_ID", "Manufacturing_Unit_ID")
            tableMapping.ColumnMappings.Add("EXEDistributed", "EXEDistributed")
            tableMapping.ColumnMappings.Add("ClassID", "ClassID")
            tableMapping.ColumnMappings.Add("User_ID_Date", "User_ID_Date")
            tableMapping.ColumnMappings.Add("DistSubTeam_No", "DistSubTeam_No")
            tableMapping.ColumnMappings.Add("CostedByWeight", "CostedByWeight")
            tableMapping.ColumnMappings.Add("TaxClassID", "TaxClassID")
            tableMapping.ColumnMappings.Add("LabelType_ID", "LabelType_ID")
            tableMapping.ColumnMappings.Add("Category_ID", "Category_ID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Item] WHERE (([Item_Key] = @Original_Item_Key))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_Key", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Key", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Item] ([Item_Description], [Sign_Description], [Ingredients], [SubTe"& _ 
                "am_No], [Sales_Account], [Package_Desc1], [Package_Desc2], [Package_Unit_ID], [M"& _ 
                "in_Temperature], [Max_Temperature], [Units_Per_Pallet], [Average_Unit_Weight], ["& _ 
                "Tie], [High], [Yield], [Brand_ID], [Origin_ID], [ShelfLife_Length], [ShelfLife_I"& _ 
                "D], [Retail_Unit_ID], [Vendor_Unit_ID], [Distribution_Unit_ID], [Cost_Unit_ID], "& _ 
                "[Freight_Unit_ID], [Deleted_Item], [Discontinue_Item], [WFM_Item], [Not_Availabl"& _ 
                "e], [Pre_Order], [Remove_Item], [NoDistMarkup], [Organic], [Refrigerated], [Keep"& _ 
                "_Frozen], [Shipper_Item], [Full_Pallet_Only], [User_ID], [POS_Description], [Ret"& _ 
                "ail_Sale], [Food_Stamps], [Discountable], [Price_Required], [Quantity_Required],"& _ 
                " [ItemType_ID], [HFM_Item], [ScaleDesc1], [ScaleDesc2], [Not_AvailableNote], [Co"& _ 
                "untryProc_ID], [Insert_Date], [Manufacturing_Unit_ID], [EXEDistributed], [ClassI"& _ 
                "D], [User_ID_Date], [DistSubTeam_No], [CostedByWeight], [TaxClassID], [LabelType"& _ 
                "_ID], [Category_ID]) VALUES (@Item_Description, @Sign_Description, @Ingredients,"& _ 
                " @SubTeam_No, @Sales_Account, @Package_Desc1, @Package_Desc2, @Package_Unit_ID, "& _ 
                "@Min_Temperature, @Max_Temperature, @Units_Per_Pallet, @Average_Unit_Weight, @Ti"& _ 
                "e, @High, @Yield, @Brand_ID, @Origin_ID, @ShelfLife_Length, @ShelfLife_ID, @Reta"& _ 
                "il_Unit_ID, @Vendor_Unit_ID, @Distribution_Unit_ID, @Cost_Unit_ID, @Freight_Unit"& _ 
                "_ID, @Deleted_Item, @Discontinue_Item, @WFM_Item, @Not_Available, @Pre_Order, @R"& _ 
                "emove_Item, @NoDistMarkup, @Organic, @Refrigerated, @Keep_Frozen, @Shipper_Item,"& _ 
                " @Full_Pallet_Only, @User_ID, @POS_Description, @Retail_Sale, @Food_Stamps, @Dis"& _ 
                "countable, @Price_Required, @Quantity_Required, @ItemType_ID, @HFM_Item, @ScaleD"& _ 
                "esc1, @ScaleDesc2, @Not_AvailableNote, @CountryProc_ID, @Insert_Date, @Manufactu"& _ 
                "ring_Unit_ID, @EXEDistributed, @ClassID, @User_ID_Date, @DistSubTeam_No, @Costed"& _ 
                "ByWeight, @TaxClassID, @LabelType_ID, @Category_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Description", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sign_Description", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sign_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ingredients", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ingredients", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubTeam_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubTeam_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sales_Account", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sales_Account", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package_Desc1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "Package_Desc1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package_Desc2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "Package_Desc2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Package_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Min_Temperature", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Min_Temperature", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Max_Temperature", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Max_Temperature", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Units_Per_Pallet", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Units_Per_Pallet", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Average_Unit_Weight", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "Average_Unit_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tie", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tie", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@High", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "High", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Yield", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "Yield", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brand_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Origin_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Origin_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShelfLife_Length", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShelfLife_Length", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShelfLife_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShelfLife_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Retail_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Retail_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vendor_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vendor_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Distribution_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Distribution_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cost_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cost_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Freight_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Freight_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deleted_Item", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deleted_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discontinue_Item", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discontinue_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WFM_Item", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WFM_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Not_Available", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Not_Available", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pre_Order", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pre_Order", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remove_Item", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remove_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoDistMarkup", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoDistMarkup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Organic", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Organic", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Refrigerated", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Refrigerated", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Keep_Frozen", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Keep_Frozen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shipper_Item", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shipper_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Full_Pallet_Only", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Full_Pallet_Only", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@User_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "User_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POS_Description", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POS_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Retail_Sale", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Retail_Sale", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Food_Stamps", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Food_Stamps", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discountable", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discountable", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Price_Required", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Price_Required", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Quantity_Required", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Quantity_Required", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HFM_Item", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HFM_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ScaleDesc1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ScaleDesc1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ScaleDesc2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ScaleDesc2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Not_AvailableNote", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Not_AvailableNote", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CountryProc_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryProc_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Insert_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Insert_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Manufacturing_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Manufacturing_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXEDistributed", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXEDistributed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClassID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClassID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@User_ID_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "User_ID_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DistSubTeam_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DistSubTeam_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CostedByWeight", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CostedByWeight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaxClassID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxClassID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LabelType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LabelType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Item] SET [Item_Description] = @Item_Description, [Sign_Description] = @S"& _ 
                "ign_Description, [Ingredients] = @Ingredients, [SubTeam_No] = @SubTeam_No, [Sale"& _ 
                "s_Account] = @Sales_Account, [Package_Desc1] = @Package_Desc1, [Package_Desc2] ="& _ 
                " @Package_Desc2, [Package_Unit_ID] = @Package_Unit_ID, [Min_Temperature] = @Min_"& _ 
                "Temperature, [Max_Temperature] = @Max_Temperature, [Units_Per_Pallet] = @Units_P"& _ 
                "er_Pallet, [Average_Unit_Weight] = @Average_Unit_Weight, [Tie] = @Tie, [High] = "& _ 
                "@High, [Yield] = @Yield, [Brand_ID] = @Brand_ID, [Origin_ID] = @Origin_ID, [Shel"& _ 
                "fLife_Length] = @ShelfLife_Length, [ShelfLife_ID] = @ShelfLife_ID, [Retail_Unit_"& _ 
                "ID] = @Retail_Unit_ID, [Vendor_Unit_ID] = @Vendor_Unit_ID, [Distribution_Unit_ID"& _ 
                "] = @Distribution_Unit_ID, [Cost_Unit_ID] = @Cost_Unit_ID, [Freight_Unit_ID] = @"& _ 
                "Freight_Unit_ID, [Deleted_Item] = @Deleted_Item, [Discontinue_Item] = @Discontin"& _ 
                "ue_Item, [WFM_Item] = @WFM_Item, [Not_Available] = @Not_Available, [Pre_Order] ="& _ 
                " @Pre_Order, [Remove_Item] = @Remove_Item, [NoDistMarkup] = @NoDistMarkup, [Orga"& _ 
                "nic] = @Organic, [Refrigerated] = @Refrigerated, [Keep_Frozen] = @Keep_Frozen, ["& _ 
                "Shipper_Item] = @Shipper_Item, [Full_Pallet_Only] = @Full_Pallet_Only, [User_ID]"& _ 
                " = @User_ID, [POS_Description] = @POS_Description, [Retail_Sale] = @Retail_Sale,"& _ 
                " [Food_Stamps] = @Food_Stamps, [Discountable] = @Discountable, [Price_Required] "& _ 
                "= @Price_Required, [Quantity_Required] = @Quantity_Required, [ItemType_ID] = @It"& _ 
                "emType_ID, [HFM_Item] = @HFM_Item, [ScaleDesc1] = @ScaleDesc1, [ScaleDesc2] = @S"& _ 
                "caleDesc2, [Not_AvailableNote] = @Not_AvailableNote, [CountryProc_ID] = @Country"& _ 
                "Proc_ID, [Insert_Date] = @Insert_Date, [Manufacturing_Unit_ID] = @Manufacturing_"& _ 
                "Unit_ID, [EXEDistributed] = @EXEDistributed, [ClassID] = @ClassID, [User_ID_Date"& _ 
                "] = @User_ID_Date, [DistSubTeam_No] = @DistSubTeam_No, [CostedByWeight] = @Coste"& _ 
                "dByWeight, [TaxClassID] = @TaxClassID, [LabelType_ID] = @LabelType_ID, [Category"& _ 
                "_ID] = @Category_ID WHERE (([Item_Key] = @Original_Item_Key))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Description", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sign_Description", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sign_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ingredients", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ingredients", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubTeam_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubTeam_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sales_Account", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sales_Account", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package_Desc1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "Package_Desc1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package_Desc2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "Package_Desc2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Package_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Min_Temperature", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Min_Temperature", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Max_Temperature", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Max_Temperature", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Units_Per_Pallet", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Units_Per_Pallet", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Average_Unit_Weight", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "Average_Unit_Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tie", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tie", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@High", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "High", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Yield", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "Yield", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brand_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Origin_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Origin_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShelfLife_Length", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShelfLife_Length", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShelfLife_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShelfLife_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Retail_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Retail_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vendor_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vendor_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Distribution_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Distribution_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cost_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cost_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Freight_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Freight_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deleted_Item", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deleted_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discontinue_Item", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discontinue_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WFM_Item", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WFM_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Not_Available", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Not_Available", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pre_Order", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pre_Order", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remove_Item", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remove_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoDistMarkup", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoDistMarkup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Organic", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Organic", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Refrigerated", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Refrigerated", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Keep_Frozen", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Keep_Frozen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shipper_Item", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shipper_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Full_Pallet_Only", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Full_Pallet_Only", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@User_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "User_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POS_Description", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POS_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Retail_Sale", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Retail_Sale", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Food_Stamps", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Food_Stamps", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discountable", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discountable", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Price_Required", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Price_Required", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Quantity_Required", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Quantity_Required", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HFM_Item", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HFM_Item", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ScaleDesc1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ScaleDesc1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ScaleDesc2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ScaleDesc2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Not_AvailableNote", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Not_AvailableNote", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CountryProc_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryProc_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Insert_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Insert_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Manufacturing_Unit_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Manufacturing_Unit_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXEDistributed", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXEDistributed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClassID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClassID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@User_ID_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "User_ID_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DistSubTeam_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DistSubTeam_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CostedByWeight", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CostedByWeight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaxClassID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxClassID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LabelType_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LabelType_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Category_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_Key", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Key", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("SLIM_Conn").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(19) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Item.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Item"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     Brand_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         ItemBrand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Brand_Name = @Brand_Name)"& _ 
                ""
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brand_Name", Global.System.Data.SqlDbType.VarChar, 25, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "dbo.CheckVendorCostHistoryOverlap"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StoreList", Global.System.Data.SqlDbType.VarChar, 8000, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StoreListSeparator", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vendor_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartDate", Global.System.Data.SqlDbType.SmallDateTime, 4, Global.System.Data.ParameterDirection.Input, 16, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndDate", Global.System.Data.SqlDbType.SmallDateTime, 4, Global.System.Data.ParameterDirection.Input, 16, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT vendor_id  FROM Vendor"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where CompanyName = @VendorName"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VendorName", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT Unit_ID FROM ItemUnit WHERE Unit_Name = 'CASE'"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT     Item_Description, SubTeam_No, Package_Desc1, Package_Desc2, Package_Un"& _ 
                "it_ID, Retail_Unit_ID, Vendor_Unit_ID, Distribution_Unit_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "     Cost_Unit_ID, Freight_Unit_ID, Manufacturing_Unit_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WH"& _ 
                "ERE     (Item_Key = @item_key)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@item_key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Key", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT     Package_Unit_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Item_Key = @item_key)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@item_key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Key", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "dbo.InsertVendorCostHistory"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StoreList", Global.System.Data.SqlDbType.VarChar, 8000, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StoreListSeparator", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vendor_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UnitCost", Global.System.Data.SqlDbType.SmallMoney, 4, Global.System.Data.ParameterDirection.Input, 10, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UnitFreight", Global.System.Data.SqlDbType.SmallMoney, 4, Global.System.Data.ParameterDirection.Input, 10, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package_Desc1", Global.System.Data.SqlDbType.[Decimal], 5, Global.System.Data.ParameterDirection.Input, 9, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartDate", Global.System.Data.SqlDbType.SmallDateTime, 4, Global.System.Data.ParameterDirection.Input, 16, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndDate", Global.System.Data.SqlDbType.SmallDateTime, 4, Global.System.Data.ParameterDirection.Input, 16, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Promotional", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MSRP", Global.System.Data.SqlDbType.SmallMoney, 4, Global.System.Data.ParameterDirection.Input, 10, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FromVendor", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CostUnit_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreightUnit_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "dbo.InsertItem"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POS_Description", Global.System.Data.SqlDbType.VarChar, 26, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Description", Global.System.Data.SqlDbType.VarChar, 60, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubTeam_No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Category_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Retail_Unit_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package_Unit_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package_Desc1", Global.System.Data.SqlDbType.[Decimal], 5, Global.System.Data.ParameterDirection.Input, 9, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Package_Desc2", Global.System.Data.SqlDbType.[Decimal], 5, Global.System.Data.ParameterDirection.Input, 9, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdentifierType", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Identifier", Global.System.Data.SqlDbType.VarChar, 13, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CheckDigit", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@User_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Retail_Sale", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClassID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CostedByWeight", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vendor_Unit_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Distribution_Unit_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaxClassID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LabelType_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brand_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumPluDigitsSentToScale", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Scale_Identifier", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProdHierarchyLevel4_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsertApplication", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "INSERT INTO ItemBrand (Brand_Name)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES (upper(@Brand_Name));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Select scope_id"& _ 
                "entity()"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brand_Name", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "dbo.InsertItemVendor"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vendor_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "dbo.UpdatePriceBatchDetailReg"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@User_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@User_ID_Date", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Store_No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartDate", Global.System.Data.SqlDbType.SmallDateTime, 4, Global.System.Data.ParameterDirection.Input, 16, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Multiple", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POSPrice", Global.System.Data.SqlDbType.SmallMoney, 4, Global.System.Data.ParameterDirection.Input, 10, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Price", Global.System.Data.SqlDbType.SmallMoney, 4, Global.System.Data.ParameterDirection.Input, 10, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OldStartDate", Global.System.Data.SqlDbType.SmallDateTime, 4, Global.System.Data.ParameterDirection.Input, 16, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsertApplication", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "dbo.InsertStoreItemVendor"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vendor_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Store_NO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(13).Connection = Me.Connection
            Me._commandCollection(13).CommandText = "dbo.SetPrimaryVendor"
            Me._commandCollection(13).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Store_No", Global.System.Data.SqlDbType.VarChar, 5000, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vendor_Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(14).Connection = Me.Connection
            Me._commandCollection(14).CommandText = "UPDATE    Item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              Brand_ID = @Brand_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Item_Key = @Ori"& _ 
                "ginal_Item_Key)"
            Me._commandCollection(14).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brand_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Brand_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_Key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Key", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(15) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(15).Connection = Me.Connection
            Me._commandCollection(15).CommandText = "UPDATE    Item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              Food_Stamps = @FoodStamp, Discountable = 1, Cost"& _ 
                "edByWeight = @CostedByWeight"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Item_Key = @Item_Key)"
            Me._commandCollection(15).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FoodStamp", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Food_Stamps", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CostedByWeight", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CostedByWeight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Key", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(16) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(16).Connection = Me.Connection
            Me._commandCollection(16).CommandText = "dbo.UpdateItemVendor"
            Me._commandCollection(16).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vendor_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_ID", Global.System.Data.SqlDbType.VarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(17) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(17).Connection = Me.Connection
            Me._commandCollection(17).CommandText = "UPDATE    Price"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              Restricted_Hours = @Restricted, IBM_Discount = "& _ 
                "@LineDiscount, PosTare = @PosTare, AgeCode = @AgeCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Item_Key = @It"& _ 
                "em_Key)"
            Me._commandCollection(17).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Restricted", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Restricted_Hours", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LineDiscount", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IBM_Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PosTare", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "PosTare", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AgeCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "AgeCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Key", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(18) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(18).Connection = Me.Connection
            Me._commandCollection(18).CommandText = "UPDATE Price SET LinkedItem = @LinkCode WHERE (Item_Key = @item_Key) AND (Store_N"& _ 
                "o = @Store_No)"
            Me._commandCollection(18).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LinkCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LinkedItem", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@item_Key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_Key", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Store_No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Store_No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(19) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(19).Connection = Me.Connection
            Me._commandCollection(19).CommandText = "dbo.UpdateSLIMItemAttribute"
            Me._commandCollection(19).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@item_key", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As IrmaItem.ItemDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As IrmaItem.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As IrmaItem.ItemDataTable = New IrmaItem.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetItemDataByItemKey3(ByVal item_key As Integer) As IrmaItem.ItemDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(item_key,Integer)
            Dim dataTable As IrmaItem.ItemDataTable = New IrmaItem.ItemDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As IrmaItem.ItemDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As IrmaItem) As Integer
            Return Me.Adapter.Update(dataSet, "Item")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Item_Key As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Item_Key,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Item_Description As String,  _
                    ByVal Sign_Description As String,  _
                    ByVal Ingredients As String,  _
                    ByVal SubTeam_No As Integer,  _
                    ByVal Sales_Account As String,  _
                    ByVal Package_Desc1 As Decimal,  _
                    ByVal Package_Desc2 As Decimal,  _
                    ByVal Package_Unit_ID As Integer,  _
                    ByVal Min_Temperature As Global.System.Nullable(Of Short),  _
                    ByVal Max_Temperature As Global.System.Nullable(Of Short),  _
                    ByVal Units_Per_Pallet As Global.System.Nullable(Of Short),  _
                    ByVal Average_Unit_Weight As Global.System.Nullable(Of Decimal),  _
                    ByVal Tie As Global.System.Nullable(Of Byte),  _
                    ByVal High As Global.System.Nullable(Of Byte),  _
                    ByVal Yield As Global.System.Nullable(Of Decimal),  _
                    ByVal Brand_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Origin_ID As Global.System.Nullable(Of Integer),  _
                    ByVal ShelfLife_Length As Global.System.Nullable(Of Short),  _
                    ByVal ShelfLife_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Retail_Unit_ID As Integer,  _
                    ByVal Vendor_Unit_ID As Integer,  _
                    ByVal Distribution_Unit_ID As Integer,  _
                    ByVal Cost_Unit_ID As Integer,  _
                    ByVal Freight_Unit_ID As Integer,  _
                    ByVal Deleted_Item As Global.System.Nullable(Of Boolean),  _
                    ByVal Discontinue_Item As Global.System.Nullable(Of Boolean),  _
                    ByVal WFM_Item As Global.System.Nullable(Of Boolean),  _
                    ByVal Not_Available As Global.System.Nullable(Of Boolean),  _
                    ByVal Pre_Order As Global.System.Nullable(Of Boolean),  _
                    ByVal Remove_Item As Global.System.Nullable(Of Byte),  _
                    ByVal NoDistMarkup As Global.System.Nullable(Of Boolean),  _
                    ByVal Organic As Global.System.Nullable(Of Boolean),  _
                    ByVal Refrigerated As Global.System.Nullable(Of Boolean),  _
                    ByVal Keep_Frozen As Global.System.Nullable(Of Boolean),  _
                    ByVal Shipper_Item As Global.System.Nullable(Of Boolean),  _
                    ByVal Full_Pallet_Only As Global.System.Nullable(Of Boolean),  _
                    ByVal User_ID As Global.System.Nullable(Of Integer),  _
                    ByVal POS_Description As String,  _
                    ByVal Retail_Sale As Boolean,  _
                    ByVal Food_Stamps As Global.System.Nullable(Of Boolean),  _
                    ByVal Discountable As Global.System.Nullable(Of Boolean),  _
                    ByVal Price_Required As Global.System.Nullable(Of Boolean),  _
                    ByVal Quantity_Required As Global.System.Nullable(Of Boolean),  _
                    ByVal ItemType_ID As Global.System.Nullable(Of Integer),  _
                    ByVal HFM_Item As Global.System.Nullable(Of Boolean),  _
                    ByVal ScaleDesc1 As String,  _
                    ByVal ScaleDesc2 As String,  _
                    ByVal Not_AvailableNote As String,  _
                    ByVal CountryProc_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Insert_Date As Date,  _
                    ByVal Manufacturing_Unit_ID As Global.System.Nullable(Of Integer),  _
                    ByVal EXEDistributed As Global.System.Nullable(Of Boolean),  _
                    ByVal ClassID As Global.System.Nullable(Of Integer),  _
                    ByVal User_ID_Date As Global.System.Nullable(Of Date),  _
                    ByVal DistSubTeam_No As Global.System.Nullable(Of Integer),  _
                    ByVal CostedByWeight As Boolean,  _
                    ByVal TaxClassID As Global.System.Nullable(Of Integer),  _
                    ByVal LabelType_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Category_ID As Global.System.Nullable(Of Integer)) As Integer
            If (Item_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Description")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Item_Description,String)
            End If
            If (Sign_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Sign_Description,String)
            End If
            If (Ingredients Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Ingredients,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(SubTeam_No,Integer)
            If (Sales_Account Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Sales_Account,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(Package_Desc1,Decimal)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Package_Desc2,Decimal)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(Package_Unit_ID,Integer)
            If (Min_Temperature.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Min_Temperature.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Max_Temperature.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Max_Temperature.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Units_Per_Pallet.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Units_Per_Pallet.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Average_Unit_Weight.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Average_Unit_Weight.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Tie.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Tie.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (High.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(High.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Yield.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Yield.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Brand_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Brand_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Origin_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Origin_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (ShelfLife_Length.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(ShelfLife_Length.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (ShelfLife_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(ShelfLife_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(Retail_Unit_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(Vendor_Unit_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(Distribution_Unit_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(Cost_Unit_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(Freight_Unit_ID,Integer)
            If (Deleted_Item.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Deleted_Item.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Discontinue_Item.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Discontinue_Item.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (WFM_Item.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(WFM_Item.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Not_Available.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Not_Available.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Pre_Order.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Pre_Order.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Remove_Item.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Remove_Item.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (NoDistMarkup.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(NoDistMarkup.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Organic.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Organic.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Refrigerated.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Refrigerated.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Keep_Frozen.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Keep_Frozen.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Shipper_Item.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Shipper_Item.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Full_Pallet_Only.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Full_Pallet_Only.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (User_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(User_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (POS_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("POS_Description")
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(POS_Description,String)
            End If
            Me.Adapter.InsertCommand.Parameters(38).Value = CType(Retail_Sale,Boolean)
            If (Food_Stamps.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(Food_Stamps.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Discountable.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Discountable.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Price_Required.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(Price_Required.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Quantity_Required.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Quantity_Required.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (ItemType_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(ItemType_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (HFM_Item.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(HFM_Item.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (ScaleDesc1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(ScaleDesc1,String)
            End If
            If (ScaleDesc2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(ScaleDesc2,String)
            End If
            If (Not_AvailableNote Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(Not_AvailableNote,String)
            End If
            If (CountryProc_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(CountryProc_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(49).Value = CType(Insert_Date,Date)
            If (Manufacturing_Unit_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(Manufacturing_Unit_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (EXEDistributed.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(EXEDistributed.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (ClassID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(ClassID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (User_ID_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(User_ID_Date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (DistSubTeam_No.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(DistSubTeam_No.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(55).Value = CType(CostedByWeight,Boolean)
            If (TaxClassID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(TaxClassID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (LabelType_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(LabelType_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Category_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(Category_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Item_Description As String,  _
                    ByVal Sign_Description As String,  _
                    ByVal Ingredients As String,  _
                    ByVal SubTeam_No As Integer,  _
                    ByVal Sales_Account As String,  _
                    ByVal Package_Desc1 As Decimal,  _
                    ByVal Package_Desc2 As Decimal,  _
                    ByVal Package_Unit_ID As Integer,  _
                    ByVal Min_Temperature As Global.System.Nullable(Of Short),  _
                    ByVal Max_Temperature As Global.System.Nullable(Of Short),  _
                    ByVal Units_Per_Pallet As Global.System.Nullable(Of Short),  _
                    ByVal Average_Unit_Weight As Global.System.Nullable(Of Decimal),  _
                    ByVal Tie As Global.System.Nullable(Of Byte),  _
                    ByVal High As Global.System.Nullable(Of Byte),  _
                    ByVal Yield As Global.System.Nullable(Of Decimal),  _
                    ByVal Brand_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Origin_ID As Global.System.Nullable(Of Integer),  _
                    ByVal ShelfLife_Length As Global.System.Nullable(Of Short),  _
                    ByVal ShelfLife_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Retail_Unit_ID As Integer,  _
                    ByVal Vendor_Unit_ID As Integer,  _
                    ByVal Distribution_Unit_ID As Integer,  _
                    ByVal Cost_Unit_ID As Integer,  _
                    ByVal Freight_Unit_ID As Integer,  _
                    ByVal Deleted_Item As Global.System.Nullable(Of Boolean),  _
                    ByVal Discontinue_Item As Global.System.Nullable(Of Boolean),  _
                    ByVal WFM_Item As Global.System.Nullable(Of Boolean),  _
                    ByVal Not_Available As Global.System.Nullable(Of Boolean),  _
                    ByVal Pre_Order As Global.System.Nullable(Of Boolean),  _
                    ByVal Remove_Item As Global.System.Nullable(Of Byte),  _
                    ByVal NoDistMarkup As Global.System.Nullable(Of Boolean),  _
                    ByVal Organic As Global.System.Nullable(Of Boolean),  _
                    ByVal Refrigerated As Global.System.Nullable(Of Boolean),  _
                    ByVal Keep_Frozen As Global.System.Nullable(Of Boolean),  _
                    ByVal Shipper_Item As Global.System.Nullable(Of Boolean),  _
                    ByVal Full_Pallet_Only As Global.System.Nullable(Of Boolean),  _
                    ByVal User_ID As Global.System.Nullable(Of Integer),  _
                    ByVal POS_Description As String,  _
                    ByVal Retail_Sale As Boolean,  _
                    ByVal Food_Stamps As Global.System.Nullable(Of Boolean),  _
                    ByVal Discountable As Global.System.Nullable(Of Boolean),  _
                    ByVal Price_Required As Global.System.Nullable(Of Boolean),  _
                    ByVal Quantity_Required As Global.System.Nullable(Of Boolean),  _
                    ByVal ItemType_ID As Global.System.Nullable(Of Integer),  _
                    ByVal HFM_Item As Global.System.Nullable(Of Boolean),  _
                    ByVal ScaleDesc1 As String,  _
                    ByVal ScaleDesc2 As String,  _
                    ByVal Not_AvailableNote As String,  _
                    ByVal CountryProc_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Insert_Date As Date,  _
                    ByVal Manufacturing_Unit_ID As Global.System.Nullable(Of Integer),  _
                    ByVal EXEDistributed As Global.System.Nullable(Of Boolean),  _
                    ByVal ClassID As Global.System.Nullable(Of Integer),  _
                    ByVal User_ID_Date As Global.System.Nullable(Of Date),  _
                    ByVal DistSubTeam_No As Global.System.Nullable(Of Integer),  _
                    ByVal CostedByWeight As Boolean,  _
                    ByVal TaxClassID As Global.System.Nullable(Of Integer),  _
                    ByVal LabelType_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Category_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Item_Key As Integer) As Integer
            If (Item_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Item_Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Item_Description,String)
            End If
            If (Sign_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Sign_Description,String)
            End If
            If (Ingredients Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Ingredients,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SubTeam_No,Integer)
            If (Sales_Account Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Sales_Account,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Package_Desc1,Decimal)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Package_Desc2,Decimal)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Package_Unit_ID,Integer)
            If (Min_Temperature.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Min_Temperature.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Max_Temperature.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Max_Temperature.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Units_Per_Pallet.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Units_Per_Pallet.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Average_Unit_Weight.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Average_Unit_Weight.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Tie.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Tie.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (High.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(High.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Yield.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Yield.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Brand_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Brand_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Origin_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Origin_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (ShelfLife_Length.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(ShelfLife_Length.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (ShelfLife_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(ShelfLife_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Retail_Unit_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Vendor_Unit_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Distribution_Unit_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Cost_Unit_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Freight_Unit_ID,Integer)
            If (Deleted_Item.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Deleted_Item.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Discontinue_Item.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Discontinue_Item.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (WFM_Item.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(WFM_Item.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Not_Available.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Not_Available.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Pre_Order.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Pre_Order.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Remove_Item.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Remove_Item.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (NoDistMarkup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(NoDistMarkup.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Organic.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Organic.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Refrigerated.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Refrigerated.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Keep_Frozen.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Keep_Frozen.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Shipper_Item.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Shipper_Item.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Full_Pallet_Only.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Full_Pallet_Only.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (User_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(User_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (POS_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("POS_Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(POS_Description,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Retail_Sale,Boolean)
            If (Food_Stamps.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Food_Stamps.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Discountable.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Discountable.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Price_Required.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Price_Required.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Quantity_Required.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Quantity_Required.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (ItemType_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(ItemType_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (HFM_Item.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(HFM_Item.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (ScaleDesc1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(ScaleDesc1,String)
            End If
            If (ScaleDesc2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(ScaleDesc2,String)
            End If
            If (Not_AvailableNote Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Not_AvailableNote,String)
            End If
            If (CountryProc_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(CountryProc_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Insert_Date,Date)
            If (Manufacturing_Unit_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Manufacturing_Unit_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (EXEDistributed.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(EXEDistributed.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (ClassID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(ClassID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (User_ID_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(User_ID_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (DistSubTeam_No.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(DistSubTeam_No.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(CostedByWeight,Boolean)
            If (TaxClassID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(TaxClassID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (LabelType_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(LabelType_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Category_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Category_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_Item_Key,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CheckBrandExists(ByVal Brand_Name As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (Brand_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Brand_Name")
            Else
                command.Parameters(0).Value = CType(Brand_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CheckCostOverlap(ByVal StoreList As String, ByVal StoreListSeparator As String, ByVal Item_Key As Global.System.Nullable(Of Integer), ByVal Vendor_ID As Global.System.Nullable(Of Integer), ByVal StartDate As Global.System.Nullable(Of Date), ByVal EndDate As Global.System.Nullable(Of Date)) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (StoreList Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(StoreList,String)
            End If
            If (StoreListSeparator Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(StoreListSeparator,String)
            End If
            If (Item_Key.HasValue = true) Then
                command.Parameters(3).Value = CType(Item_Key.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Vendor_ID.HasValue = true) Then
                command.Parameters(4).Value = CType(Vendor_ID.Value,Integer)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (StartDate.HasValue = true) Then
                command.Parameters(5).Value = CType(StartDate.Value,Date)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (EndDate.HasValue = true) Then
                command.Parameters(6).Value = CType(EndDate.Value,Date)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CheckVendorExists(ByVal VendorName As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (VendorName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("VendorName")
            Else
                command.Parameters(0).Value = CType(VendorName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetDistributionUnitID() As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetItemUOM(ByVal item_key As Integer) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(6)
            command.Parameters(0).Value = CType(item_key,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function InsertCost(ByVal StoreList As String, ByVal StoreListSeparator As String, ByVal Item_Key As Global.System.Nullable(Of Integer), ByVal Vendor_ID As Global.System.Nullable(Of Integer), ByVal UnitCost As Global.System.Nullable(Of Decimal), ByVal UnitFreight As Global.System.Nullable(Of Decimal), ByVal Package_Desc1 As Global.System.Nullable(Of Decimal), ByVal StartDate As Global.System.Nullable(Of Date), ByVal EndDate As Global.System.Nullable(Of Date), ByVal Promotional As Global.System.Nullable(Of Boolean), ByVal MSRP As Global.System.Nullable(Of Decimal), ByVal FromVendor As Global.System.Nullable(Of Boolean), ByVal CostUnit_ID As Global.System.Nullable(Of Integer), ByVal FreightUnit_ID As Global.System.Nullable(Of Integer)) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(7)
            If (StoreList Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(StoreList,String)
            End If
            If (StoreListSeparator Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(StoreListSeparator,String)
            End If
            If (Item_Key.HasValue = true) Then
                command.Parameters(3).Value = CType(Item_Key.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Vendor_ID.HasValue = true) Then
                command.Parameters(4).Value = CType(Vendor_ID.Value,Integer)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (UnitCost.HasValue = true) Then
                command.Parameters(5).Value = CType(UnitCost.Value,Decimal)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (UnitFreight.HasValue = true) Then
                command.Parameters(6).Value = CType(UnitFreight.Value,Decimal)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Package_Desc1.HasValue = true) Then
                command.Parameters(7).Value = CType(Package_Desc1.Value,Decimal)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (StartDate.HasValue = true) Then
                command.Parameters(8).Value = CType(StartDate.Value,Date)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (EndDate.HasValue = true) Then
                command.Parameters(9).Value = CType(EndDate.Value,Date)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Promotional.HasValue = true) Then
                command.Parameters(10).Value = CType(Promotional.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MSRP.HasValue = true) Then
                command.Parameters(11).Value = CType(MSRP.Value,Decimal)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FromVendor.HasValue = true) Then
                command.Parameters(12).Value = CType(FromVendor.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (CostUnit_ID.HasValue = true) Then
                command.Parameters(13).Value = CType(CostUnit_ID.Value,Integer)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (FreightUnit_ID.HasValue = true) Then
                command.Parameters(14).Value = CType(FreightUnit_ID.Value,Integer)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function InsertItem( _
                    ByVal POS_Description As String,  _
                    ByVal Item_Description As String,  _
                    ByVal SubTeam_No As Global.System.Nullable(Of Integer),  _
                    ByVal Category_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Retail_Unit_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Package_Unit_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Package_Desc1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Package_Desc2 As Global.System.Nullable(Of Decimal),  _
                    ByVal IdentifierType As String,  _
                    ByVal Identifier As String,  _
                    ByVal CheckDigit As String,  _
                    ByVal User_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Retail_Sale As Global.System.Nullable(Of Boolean),  _
                    ByVal ClassID As Global.System.Nullable(Of Integer),  _
                    ByVal CostedByWeight As Global.System.Nullable(Of Boolean),  _
                    ByVal Vendor_Unit_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Distribution_Unit_ID As Global.System.Nullable(Of Integer),  _
                    ByVal TaxClassID As Global.System.Nullable(Of Integer),  _
                    ByVal LabelType_ID As Global.System.Nullable(Of Integer),  _
                    ByVal Brand_ID As Global.System.Nullable(Of Integer),  _
                    ByVal National_Identifier As Global.System.Nullable(Of Byte),  _
                    ByVal NumPluDigitsSentToScale As Global.System.Nullable(Of Integer),  _
                    ByVal Scale_Identifier As Global.System.Nullable(Of Boolean),  _
                    ByVal ProdHierarchyLevel4_ID As Global.System.Nullable(Of Integer),  _
                    ByVal InsertApplication As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(8)
            If (POS_Description Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(POS_Description,String)
            End If
            If (Item_Description Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Item_Description,String)
            End If
            If (SubTeam_No.HasValue = true) Then
                command.Parameters(3).Value = CType(SubTeam_No.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Category_ID.HasValue = true) Then
                command.Parameters(4).Value = CType(Category_ID.Value,Integer)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Retail_Unit_ID.HasValue = true) Then
                command.Parameters(5).Value = CType(Retail_Unit_ID.Value,Integer)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Package_Unit_ID.HasValue = true) Then
                command.Parameters(6).Value = CType(Package_Unit_ID.Value,Integer)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Package_Desc1.HasValue = true) Then
                command.Parameters(7).Value = CType(Package_Desc1.Value,Decimal)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Package_Desc2.HasValue = true) Then
                command.Parameters(8).Value = CType(Package_Desc2.Value,Decimal)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (IdentifierType Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(IdentifierType,String)
            End If
            If (Identifier Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(Identifier,String)
            End If
            If (CheckDigit Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(CheckDigit,String)
            End If
            If (User_ID.HasValue = true) Then
                command.Parameters(12).Value = CType(User_ID.Value,Integer)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Retail_Sale.HasValue = true) Then
                command.Parameters(13).Value = CType(Retail_Sale.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ClassID.HasValue = true) Then
                command.Parameters(14).Value = CType(ClassID.Value,Integer)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CostedByWeight.HasValue = true) Then
                command.Parameters(15).Value = CType(CostedByWeight.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Vendor_Unit_ID.HasValue = true) Then
                command.Parameters(16).Value = CType(Vendor_Unit_ID.Value,Integer)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Distribution_Unit_ID.HasValue = true) Then
                command.Parameters(17).Value = CType(Distribution_Unit_ID.Value,Integer)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (TaxClassID.HasValue = true) Then
                command.Parameters(18).Value = CType(TaxClassID.Value,Integer)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (LabelType_ID.HasValue = true) Then
                command.Parameters(19).Value = CType(LabelType_ID.Value,Integer)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Brand_ID.HasValue = true) Then
                command.Parameters(20).Value = CType(Brand_ID.Value,Integer)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (National_Identifier.HasValue = true) Then
                command.Parameters(21).Value = CType(National_Identifier.Value,Byte)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (NumPluDigitsSentToScale.HasValue = true) Then
                command.Parameters(22).Value = CType(NumPluDigitsSentToScale.Value,Integer)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Scale_Identifier.HasValue = true) Then
                command.Parameters(23).Value = CType(Scale_Identifier.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (ProdHierarchyLevel4_ID.HasValue = true) Then
                command.Parameters(24).Value = CType(ProdHierarchyLevel4_ID.Value,Integer)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (InsertApplication Is Nothing) Then
                command.Parameters(25).Value = Global.System.DBNull.Value
            Else
                command.Parameters(25).Value = CType(InsertApplication,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function InsertItemBrand(ByVal Brand_Name As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(9)
            If (Brand_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Brand_Name")
            Else
                command.Parameters(0).Value = CType(Brand_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function InsertItemVendor(ByVal Vendor_ID As Global.System.Nullable(Of Integer), ByVal Item_Key As Global.System.Nullable(Of Integer)) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(10)
            If (Vendor_ID.HasValue = true) Then
                command.Parameters(1).Value = CType(Vendor_ID.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Item_Key.HasValue = true) Then
                command.Parameters(2).Value = CType(Item_Key.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function InsertPrice(ByVal Item_Key As Global.System.Nullable(Of Integer), ByVal User_ID As Global.System.Nullable(Of Integer), ByVal User_ID_Date As Global.System.Nullable(Of Date), ByVal Store_No As Global.System.Nullable(Of Integer), ByVal StartDate As Global.System.Nullable(Of Date), ByVal Multiple As Global.System.Nullable(Of Byte), ByVal POSPrice As Global.System.Nullable(Of Decimal), ByVal Price As Global.System.Nullable(Of Decimal), ByVal OldStartDate As Global.System.Nullable(Of Date), ByVal InsertApplication As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(11)
            If (Item_Key.HasValue = true) Then
                command.Parameters(1).Value = CType(Item_Key.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (User_ID.HasValue = true) Then
                command.Parameters(2).Value = CType(User_ID.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (User_ID_Date.HasValue = true) Then
                command.Parameters(3).Value = CType(User_ID_Date.Value,Date)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Store_No.HasValue = true) Then
                command.Parameters(4).Value = CType(Store_No.Value,Integer)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (StartDate.HasValue = true) Then
                command.Parameters(5).Value = CType(StartDate.Value,Date)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Multiple.HasValue = true) Then
                command.Parameters(6).Value = CType(Multiple.Value,Byte)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (POSPrice.HasValue = true) Then
                command.Parameters(7).Value = CType(POSPrice.Value,Decimal)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Price.HasValue = true) Then
                command.Parameters(8).Value = CType(Price.Value,Decimal)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (OldStartDate.HasValue = true) Then
                command.Parameters(9).Value = CType(OldStartDate.Value,Date)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (InsertApplication Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(InsertApplication,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function InsertStoreItemVendor(ByVal Vendor_ID As Global.System.Nullable(Of Integer), ByVal Store_NO As Global.System.Nullable(Of Integer), ByVal Item_Key As Global.System.Nullable(Of Integer)) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(12)
            If (Vendor_ID.HasValue = true) Then
                command.Parameters(1).Value = CType(Vendor_ID.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Store_NO.HasValue = true) Then
                command.Parameters(2).Value = CType(Store_NO.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Item_Key.HasValue = true) Then
                command.Parameters(3).Value = CType(Item_Key.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SetPrimaryVendor(ByVal Store_No As String, ByVal Item_Key As Global.System.Nullable(Of Integer), ByVal Vendor_Id As Global.System.Nullable(Of Integer)) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(13)
            If (Store_No Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Store_No,String)
            End If
            If (Item_Key.HasValue = true) Then
                command.Parameters(2).Value = CType(Item_Key.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Vendor_Id.HasValue = true) Then
                command.Parameters(3).Value = CType(Vendor_Id.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateItemBrand(ByVal Brand_ID As Global.System.Nullable(Of Integer), ByVal Original_Item_Key As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(14)
            If (Brand_ID.HasValue = true) Then
                command.Parameters(0).Value = CType(Brand_ID.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(Original_Item_Key,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateItemFlags(ByVal FoodStamp As Boolean, ByVal CostedByWeight As Boolean, ByVal Item_Key As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(15)
            command.Parameters(0).Value = CType(FoodStamp,Boolean)
            command.Parameters(1).Value = CType(CostedByWeight,Boolean)
            command.Parameters(2).Value = CType(Item_Key,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function UpdateItemVendor(ByVal Item_Key As Global.System.Nullable(Of Integer), ByVal Vendor_ID As Global.System.Nullable(Of Integer), ByVal Item_ID As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(16)
            If (Item_Key.HasValue = true) Then
                command.Parameters(1).Value = CType(Item_Key.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Vendor_ID.HasValue = true) Then
                command.Parameters(2).Value = CType(Vendor_ID.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Item_ID Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Item_ID,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdatePriceFlags(ByVal Restricted As Boolean, ByVal LineDiscount As Boolean, ByVal PosTare As Global.System.Nullable(Of Integer), ByVal AgeCode As Global.System.Nullable(Of Integer), ByVal Item_Key As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(17)
            command.Parameters(0).Value = CType(Restricted,Boolean)
            command.Parameters(1).Value = CType(LineDiscount,Boolean)
            If (PosTare.HasValue = true) Then
                command.Parameters(2).Value = CType(PosTare.Value,Integer)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (AgeCode.HasValue = true) Then
                command.Parameters(3).Value = CType(AgeCode.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            command.Parameters(4).Value = CType(Item_Key,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdatePriceLinkCode(ByVal LinkCode As Global.System.Nullable(Of Integer), ByVal item_Key As Integer, ByVal Store_No As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(18)
            If (LinkCode.HasValue = true) Then
                command.Parameters(0).Value = CType(LinkCode.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(item_Key,Integer)
            command.Parameters(2).Value = CType(Store_No,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function UpdateSLIMItemAttribute(ByVal item_key As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(19)
            If (item_key.HasValue = true) Then
                command.Parameters(1).Value = CType(item_key.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SLIM_GetItemOverrideTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SLIM_GetItemOverride"
            tableMapping.ColumnMappings.Add("item_key", "item_key")
            tableMapping.ColumnMappings.Add("Item_Description", "Item_Description")
            tableMapping.ColumnMappings.Add("Package_Desc1", "Package_Desc1")
            tableMapping.ColumnMappings.Add("Package_Desc2", "Package_Desc2")
            tableMapping.ColumnMappings.Add("Unit_name", "Unit_name")
            tableMapping.ColumnMappings.Add("StoreJurisdictionDesc", "StoreJurisdictionDesc")
            tableMapping.ColumnMappings.Add("StoreJurisdictionID", "StoreJurisdictionID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("SLIM_Conn").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SLIM_GetItemOverride"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_Key_List", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As IrmaItem.SLIM_GetItemOverrideDataTable, ByVal Item_Key_List As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Item_Key_List Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_Key_List,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetItemOverride(ByVal Item_Key_List As String) As IrmaItem.SLIM_GetItemOverrideDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Item_Key_List Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Item_Key_List,String)
            End If
            Dim dataTable As IrmaItem.SLIM_GetItemOverrideDataTable = New IrmaItem.SLIM_GetItemOverrideDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
